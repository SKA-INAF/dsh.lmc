<?xml version="1.0" encoding="UTF-8"?>
<!-- ************************************************** -->
<!-- **                                                 -->
<!-- **            RX INTERFACE CONFIGURATION           -->
<!-- **                                                 -->
<!-- ************************************************** -->

<DeviceConfiguration>
	
	<!-- ************************************************** -->
	<!-- **              PROPERTIES                         -->
	<!-- ************************************************** -->
	<DeviceProperties>

		<!-- SKA options -->
		<DeviceProperty name="SkaLevel">
			<Value> {{alarmhandler_ska_level}} </Value>
		</DeviceProperty>

		<!-- General options -->
		<DeviceProperty name="EnableConfigFromFile">
			<Value> {{alarmhandler_enable_config_from_file}} </Value>
		</DeviceProperty>

		<DeviceProperty name="ConfigFile">
			<Value> {{alarmhandler_config_file}} </Value>
		</DeviceProperty>

		<!-- Dyn attr creation and update options -->
		<DeviceProperty name="EnableDynAttrCleanup">
			<Value> {{alarmhandler_enable_dyn_attr_cleanup}} </Value>
		</DeviceProperty>

		<DeviceProperty name="EnableDynAttrRandomize">
			<Value> {{alarmhandler_enable_dyn_attr_randomize}} </Value>
		</DeviceProperty>

		<DeviceProperty name="DynAttrRandomizePeriod">
			<Value> {{alarmhandler_dyn_attr_randomize_period}} </Value>
		</DeviceProperty>

		<DeviceProperty name="EnableFwdAttrInitPolling">
			<Value> {{alarmhandler_enable_fwd_attr_init_polling}} </Value>
		</DeviceProperty>
		
		<DeviceProperty name="EnableStatusAttrUpdatePolling">
			<Value> {{alarmhandler_enable_status_attr_update_polling}} </Value>
		</DeviceProperty>

		<!-- Logging options -->
		<DeviceProperty name="CentralLoggerEnabledDefault">
			<Value> {{alarmhandler_enable_central_log_target}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggingTargetCentralDefault">
			<Value> {{alarmhandler_central_log_target}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggingLevelCentralDefault">
			<Value> {{alarmhandler_central_log_level}}  </Value>
		</DeviceProperty>

		<DeviceProperty name="ElementLoggerEnabledDefault">
			<Value> {{alarmhandler_enable_element_log_target}} </Value>
		</DeviceProperty>
		
		<DeviceProperty name="LoggingTargetElementDefault">
			<Value> {{alarmhandler_element_log_target}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggingLevelElementDefault">
			<Value> {{alarmhandler_element_log_level}} </Value>
		</DeviceProperty>
		
		<DeviceProperty name="StorageLoggerEnabledDefault">
			<Value> {{alarmhandler_enable_storage_log_target}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggingTargetStorageDefault">
			<Value> {{alarmhandler_storage_log_target}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggingLevelStorageDefault">
			<Value> {{alarmhandler_storage_log_level}} </Value>
		</DeviceProperty>

		<DeviceProperty name="SyslogFacility">
			<Value> {{alarmhandler_syslog_facility}} </Value>
		</DeviceProperty>

		<DeviceProperty name="SyslogHost">
			<Value> {{alarmhandler_syslog_host}} </Value>
		</DeviceProperty>


		<DeviceProperty name="EnableLoggerInitPolling">
			<Value> {{alarmhandler_enable_logger_init_polling}} </Value>
		</DeviceProperty>

		<DeviceProperty name="LoggerInitPollPeriod">
			<Value> {{alarmhandler_logger_init_poll_period}} </Value>
		</DeviceProperty>


		<!-- Proxy options -->
		<DeviceProperty name="EnableProxyMonitoring">
			<Value> {{alarmhandler_enable_proxy_monitoring}} </Value>
		</DeviceProperty>

		<DeviceProperty name="EnableProxyStatusAttrCreation">
			<Value> {{alarmhandler_enable_proxy_status_attr_creation}} </Value>
		</DeviceProperty>

		<DeviceProperty name="EnableAutoAdminProxyRegistration">
			<Value> {{alarmhandler_enable_auto_admin_proxy_registration}} </Value>
		</DeviceProperty>

		<DeviceProperty name="EnableDevProxyInitPolling">
			<Value> {{alarmhandler_enable_dev_proxy_init_polling}} </Value>
		</DeviceProperty>

		<!-- Formula options -->
		<DeviceProperty name="EnableFormulaAttrUpdatePolling">
			<Value> {{alarmhandler_enable_formula_attr_update_polling}} </Value>
		</DeviceProperty>


		<!-- Task management options -->
		<DeviceProperty name="EnableClearTaskPolling">
			<Value> {{alarmhandler_enable_clear_task_polling}} </Value>
		</DeviceProperty>

		<DeviceProperty name="ProcessEventsInQueueThread">
			<Value> {{process_events_in_queue_thread}} </Value>
		</DeviceProperty>

		<!-- ================================= -->
		<!-- ==     SPECIFIC PROPERTIES        -->
		<!-- ================================= -->		
		<DeviceProperty name="GroupNames">
			<Value> none </Value>
			<Value> spfrx </Value>
			<Value> spf </Value>
			<Value> ds </Value>
			<Value> lmc </Value>
		</DeviceProperty>

		<DeviceProperty name="SubscribeRetryPeriod">
			<Value> {{alarmhandler_subscribe_retry_period}} </Value>
		</DeviceProperty>

		<DeviceProperty name="StatisticsTimeWindow">
			<Value> {{alarmhandler_stats_time_window}} </Value>
		</DeviceProperty>
		
		</DeviceProperties>

	<!-- ************************************************** -->
	<!-- **              ATTRIBUTES                         -->
	<!-- ************************************************** -->
	<!--
	<Attributes>

	</Attributes>
	-->

	<!-- ************************************************** -->
	<!-- **              ALARMS                             -->
	<!-- ************************************************** -->
	<Alarms>


		<!-- ************************************************** -->
		<!-- **      LMC ALARMS                                 -->
		<!-- ************************************************** -->
		<!-- LMC health state FAILED -->
		{% if lmcmon_enabled_in_config | bool  %}
		<Alarm>
			<Name> alertLMCHealthStateFailed </Name>	
			<Formula> 
        ($healthState == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> healthState </Label>	
					<Value> {{lmc_monitor}}/lmcHealthState </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC health state failed! </Message>
		</Alarm>
		{% endif %}

		<!-- RxController Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<Alarm>
			<Name> alertRxOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/rxControllerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx controller offline </Message>
		</Alarm>
		{% endif %}

		<!-- SPFController Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and spf_enabled_in_config | bool %}
		<Alarm>
			<Name> alertSpfOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/spfControllerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF controller offline </Message>
		</Alarm>
		{% endif %}


		<!-- LMCStarter Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and lmcstarter_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCStarterOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/lmcStarterRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMCStarter offline </Message>
		</Alarm>
		{% endif %}


		<!-- DSManager Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDSManagerOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/dsManagerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> DSManager offline </Message>
		</Alarm>
		{% endif %}


		<!-- PDUManager Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and pdu_enabled_in_config | bool %}
		<Alarm>
			<Name> alertPDUManagerOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/pduManagerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> PDUManager offline </Message>
		</Alarm>
		{% endif %}

		<!-- DishManager Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and dshmgr_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDishManagerOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/dishManagerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> DishManager offline </Message>
		</Alarm>
		{% endif %}

		<!-- ElementLogger Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and lmclogger_enabled_in_config | bool %}
		<Alarm>
			<Name> alertElementLoggerOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/elementLoggerRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> ElementLogger offline </Message>
		</Alarm>
		{% endif %}


		<!-- SPF Archiver Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool and archiver_spf_enabled_in_config | bool %}
		<Alarm>
			<Name> alertSPFArchiverOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/spfArchiverRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Archiver offline </Message>
		</Alarm>
		{% endif %}


		<!-- Rx Archiver Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool and archiver_rx_enabled_in_config | bool %}
		<Alarm>
			<Name> alertRxArchiverOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/rxArchiverRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPFRx Archiver offline </Message>
		</Alarm>
		{% endif %}

		<!-- DS Archiver Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool and archiver_ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDSArchiverOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/dsArchiverRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> DS Archiver offline </Message>
		</Alarm>
		{% endif %}

		<!-- LMC Archiver Proxy offline -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool and archiver_lmc_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCArchiverOffline </Name>	
			<Formula> 
        ($proxyStatus == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> proxyStatus </Label>	
					<Value> {{lmc_monitor}}/lmcArchiverRunStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC Archiver offline </Message>
		</Alarm>
		{% endif %}

		<!-- LMC server CPU load -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerCpuLoadStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in LMC server </Message>
		</Alarm>
		{% endif %}

		<!-- DishManager server CPU load -->
		{% if lmcmon_enabled_in_config | bool and dshmgr_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDishManagerCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_master_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in DishManager server </Message>
		</Alarm>
		{% endif %}

		<!-- AlarmHandler server CPU load -->
		{% if lmcmon_enabled_in_config | bool and alarmhandler_enabled_in_config | bool %}
		<Alarm>
			<Name> alertAlarmHandlerCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_alarm_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in AlarmHandler server </Message>
		</Alarm>
		{% endif %}

		<!-- DSManager server CPU load -->
		{% if lmcmon_enabled_in_config | bool and ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDSManagerCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{dsmgr_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in DSManager server </Message>
		</Alarm>
		{% endif %}

		<!-- PDUManager server CPU load -->
		{% if lmcmon_enabled_in_config | bool and pdu_enabled_in_config | bool %}
		<Alarm>
			<Name> alertPDUManagerCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{pdumgr_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in PDUManager server </Message>
		</Alarm>
		{% endif %}

		<!-- ElementLogger server CPU load -->
		{% if lmcmon_enabled_in_config | bool and lmclogger_enabled_in_config | bool %}
		<Alarm>
			<Name> alertElementLoggerCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_logger_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in ElementLogger server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCMonitor server CPU load -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCMonitorCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_monitor_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in LMCMonitor server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCStarter server CPU load -->
		{% if lmcmon_enabled_in_config | bool and lmcstarter_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCStarterCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_starter_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in LMCStarter server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCArchiver server CPU load -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCArchiverCPULoad </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{archiver_server_name}}CpuUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High CPU load in LMCArchiver server </Message>
		</Alarm>
		{% endif %}


		<!-- DishManager server memory usage -->
		{% if lmcmon_enabled_in_config | bool and dshmgr_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDishManagerMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_master_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in DishManager server </Message>
		</Alarm>
		{% endif %}

		<!-- AlarmHandler server memory usage -->
		{% if lmcmon_enabled_in_config | bool and alarmhandler_enabled_in_config | bool %}
		<Alarm>
			<Name> alertAlarmHandlerMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_alarm_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in AlarmHandler server </Message>
		</Alarm>
		{% endif %}

		<!-- DSManager server memory usage -->
		{% if lmcmon_enabled_in_config | bool and ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alertDSManagerMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{dsmgr_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in DSManager server </Message>
		</Alarm>
		{% endif %}

		<!-- PDUManager server memory usage -->
		{% if lmcmon_enabled_in_config | bool and pdu_enabled_in_config | bool %}
		<Alarm>
			<Name> alertPDUManagerMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{pdumgr_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in PDUManager server </Message>
		</Alarm>
		{% endif %}

		<!-- ElementLogger server memory usage -->
		{% if lmcmon_enabled_in_config | bool and lmclogger_enabled_in_config | bool %}
		<Alarm>
			<Name> alertElementLoggerMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_logger_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in ElementLogger server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCMonitor server memory usage -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCMonitorMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_monitor_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in LMCMonitor server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCStarter server memory usage -->
		{% if lmcmon_enabled_in_config | bool and lmcstarter_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCStarterMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_starter_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in LMCStarter server </Message>
		</Alarm>
		{% endif %}

		<!-- LMCArchiver server memory usage-->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmLMCArchiverMemUsage </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{archiver_server_name}}MemUsageStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> High memory usage in LMCArchiver server </Message>
		</Alarm>
		{% endif %}
		

		<!-- DishManager server run status -->
		{% if lmcmon_enabled_in_config | bool and dshmgr_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmDishManagerProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerDishManagerProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> DishManager server not running </Message>
		</Alarm>
		{% endif %}

		<!-- AlarmHandler server run status -->
		{% if lmcmon_enabled_in_config | bool and alarmhandler_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmAlarmHandlerProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_alarm_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> AlarmHandler server not running </Message>
		</Alarm>
		{% endif %}

		<!-- DSManager server run status -->
		{% if lmcmon_enabled_in_config | bool and ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmDSManagerProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_server_nagios_name|camelize|decapitalize}}{{dsmgr_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> DSManager server not running </Message>
		</Alarm>
		{% endif %}

		<!-- PDUManager server run status -->
		{% if lmcmon_enabled_in_config | bool and pdu_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmPDUManagerProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_server_nagios_name|camelize|decapitalize}}{{pdumgr_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> PDUManager server not running </Message>
		</Alarm>
		{% endif %}

		<!-- ElementLogger server run status -->
		{% if lmcmon_enabled_in_config | bool and lmclogger_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmElementLoggerProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_logger_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> ElementLogger server not running </Message>
		</Alarm>
		{% endif %}

		<!-- LMCMonitor server run status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmLMCMonitorProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_monitor_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMCMonitor server not running </Message>
		</Alarm>
		{% endif %}

		<!-- LMCStarter server run status -->
		{% if lmcmon_enabled_in_config | bool and lmcstarter_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmLMCStarterProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{lmc_starter_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMCStarter server not running </Message>
		</Alarm>
		{% endif %}

		<!-- LMCArchiver server run status -->
		{% if lmcmon_enabled_in_config | bool and archiver_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmLMCArchiverProcessStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/{{lmc_server_nagios_name|camelize|decapitalize}}{{archiver_server_name}}ProcessStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMCArchiver server not running </Message>
		</Alarm>
		{% endif %}

		<!-- LMC server disk space -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmLMCDiskSpace </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerDiskSpaceStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC hard disk overquota </Message>
		</Alarm>
		{% endif %}

		<!-- LMC server host status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCHostStatus </Name>	
			<Formula> 
        ($status == 'DOWN' || $status == 'UNREACHABLE')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerHostStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC host down </Message>
		</Alarm>
		{% endif %}

		<!-- TangoDB service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmTangoDBStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerTangoDBSrvStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> TangoDB service down </Message>
		</Alarm>
		{% endif %}

		<!-- MySQL service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmMySQLStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerMySQLStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> MySQL service down </Message>
		</Alarm>
		{% endif %}

		<!-- NTP service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmNTPStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerNTPStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> NTP service down </Message>
		</Alarm>
		{% endif %}

		<!-- Ping service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCPingStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerPingStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC server ping failure </Message>
		</Alarm>
		{% endif %}

		<!-- Rsyslog service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmRsyslogStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerRSyslogStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rsyslog service down </Message>
		</Alarm>
		{% endif %}

		<!-- LMC sensors status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertLMCSensorStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerSensorStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC hardware sensors out of range </Message>
		</Alarm>
		{% endif %}

		<!-- LMC ssh service status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertSSHStatus </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerSSHStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC server ssh fault </Message>
		</Alarm>
		{% endif %}

		<!-- LMC swap space status -->
		{% if lmcmon_enabled_in_config | bool %}
		<Alarm>
			<Name> alertSwapSpace </Name>	
			<Formula> 
        ($status == 'CRITICAL')
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_monitor}}/lmcServerSwapSpaceStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> LMC swap space out of range </Message>
		</Alarm>
		{% endif %}


		<!-- ************************ -->
		<!-- ***   Rx Alarms     *** -->
		<!-- ************************ -->

		<!-- Health state alarm -->
		{% if rx_enabled_in_config | bool %}		
		<Alarm>
			<Name> alertRxHealthStateFailed </Name>
			<Formula> 
        ($health == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> health </Label>	
					<Value> {{rx_controller}}/healthState </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx health state failed! </Message>
		</Alarm>
		{% endif %}

		<!-- B1 Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertRxB1OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b1SupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b1SupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b1Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B1 out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}

		<!-- B2 Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertRxB2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b2SupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b2SupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b2Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B2 out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}

		<!-- B3 Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertRxB3OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b3SupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b3SupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b3Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B3 out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}


		<!-- B4 Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertRxB4OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b4SupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b4SupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b4Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B4 out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}

		<!-- B5a Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b5a_in_config | bool %}
		<!-- B5a -->
		<Alarm>
			<Name> alertRxB5aOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs5aExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b5aSupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b5aSupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b5aTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B5a out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}

		<!-- B5b Out of range -->
		{% if rx_enabled_in_config | bool and rx_enable_b5b_in_config | bool %}
		<!-- B5b -->
		<Alarm>
			<Name> alertRxB5bOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V &lt; {{rx_suppl_voltage_min_alarm}} || $V &gt; {{rx_suppl_voltage_max_alarm}} || $V.quality==ATTR_ALARM) || 
            ($I &lt; {{rx_suppl_current_min_alarm}} || $I &gt; {{rx_suppl_current_max_alarm}} || $I.quality==ATTR_ALARM) ||
						($T &lt; {{rx_temperature_min_alarm}} || $T &gt; {{rx_temperature_max_alarm}} || $T.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{rx_controller}}/rxs5bExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V </Label>	
					<Value> {{rx_controller}}/b5bSupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I </Label>	
					<Value> {{rx_controller}}/b5bSupplyCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> T </Label>	
					<Value> {{rx_controller}}/b5bTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx B5b out of range (voltage/current/temp)! </Message>
		</Alarm>	
		{% endif %}

		{% if rx_enabled_in_config | bool and rx_enable_b1_in_config | bool and rx_enable_b2_in_config | bool and rx_enable_b3_in_config | bool and rx_enable_b4_in_config | bool and rx_enable_b5a_in_config | bool and rx_enable_b5b_in_config | bool %}	
		<!-- All Bands -->
		<Alarm>
			<Name> alertRxOutOfRange </Name>
			<Formula> 
				($b1.alarm || $b2.alarm || $b3.alarm || $b4.alarm || $b5a.alarm || $b5b.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> b1 </Label>	
					<Value> {{alarm_handler}}/alertRxB1OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> b2 </Label>	
					<Value> {{alarm_handler}}/alertRxB2OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> b3 </Label>	
					<Value> {{alarm_handler}}/alertRxB3OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> b4 </Label>	
					<Value> {{alarm_handler}}/alertRxB4OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> b5a </Label>	
					<Value> {{alarm_handler}}/alertRxB5aOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> b5b </Label>	
					<Value> {{alarm_handler}}/alertRxB5bOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spfrx </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Rx (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- ************************ -->
		<!-- ***   SPF Alarms     *** -->
		<!-- ************************ -->

		<!-- SPF ERROR mode alarm -->
		{% if spf_enabled_in_config | bool %}		
		<Alarm>
			<Name> alertSpfInErrorMode </Name>
			<Formula> 
        ($mode == 6)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> mode </Label>	
					<Value> {{spf_controller}}/operatingMode </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF in ERROR mode! </Message>
		</Alarm>
		{% endif %}

		<!-- Health state alarm -->
		{% if spf_enabled_in_config | bool %}		
		<Alarm>
			<Name> alertSpfHealthStateFailed </Name>
			<Formula> 
        ($health == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> health </Label>	
					<Value> {{spf_controller}}/healthState </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF health state failed! </Message>
		</Alarm>
		{% endif %}


		{% if spf_enabled_in_config | bool %}
		<!-- SPF Controller Alarms -->
		<Alarm>
			<Name> alertSpfCtrlOutOfRange </Name>
			<Formula> 
        ( 
          $expectedOnline &amp;&amp; 
          (
             ($volt &lt; {{spf_ctrl_volt_min_alarm}} || $volt &gt; {{spf_ctrl_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
 				     ($temp &lt; {{spf_ctrl_temp_min_alarm}} || $temp &gt; {{spf_ctrl_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
				     ($curr &lt; {{spf_ctrl_curr_min_alarm}} || $curr &gt; {{spf_ctrl_curr_max_alarm}} || $curr.quality==ATTR_ALARM) 
          )
     		)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/spfcExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_controller}}/spfcSupplyVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_controller}}/spfcTemperature </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_controller}}/spfcSupplyCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Controller out of range (temp/voltage/current)! </Message>
		</Alarm>
		{% endif %}


		{% if spf_enabled_in_config | bool %}
		<!-- spfHePressureOutOfRange -->
		<Alarm>
			<Name> alertSpfHePressureOutOfRange </Name>
			<Formula>
			  ( 
          $expectedOnline &amp;&amp; 
          (
            ($p_sup &lt; {{spf_he_suppl_press_min_alarm}} || $p_sup &gt; {{spf_he_suppl_press_max_alarm}} || $p_sup.quality==ATTR_ALARM) || 
            ($p_ret &lt; {{spf_he_ret_press_min_alarm}} || $p_ret &gt; {{spf_he_ret_press_max_alarm}} || $p_ret.quality==ATTR_ALARM)
          ) 
        )
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/heExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> p_sup </Label>	
					<Value> {{spf_helium}}/heCompSupplyPressure </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> p_ret </Label>	
					<Value> {{spf_helium}}/heCompReturnPressure </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Helium pressure out of range (supply/return)! </Message>
		</Alarm>
		{% endif %}

		<!-- LNA Out of range -->
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1LnaOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V_drain_h &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_h &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_h.quality==ATTR_ALARM) || 
            ($V_drain_v &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_v &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_v.quality==ATTR_ALARM) ||
						($V_gate_h &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_h &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_h.quality==ATTR_ALARM) || 
            ($V_gate_v &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_v &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_v.quality==ATTR_ALARM) ||
						($I_drain_h &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_h &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_h.quality==ATTR_ALARM) || 
            ($I_drain_v &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_v &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_v.quality==ATTR_ALARM) ||
						($G_h &lt; {{spf_lna_mean_gain_min_alarm}} || $G_h &gt; {{spf_lna_mean_gain_max_alarm}} || $G_h.quality==ATTR_ALARM) || 
            ($G_v &lt; {{spf_lna_mean_gain_min_alarm}} || $G_v &gt; {{spf_lna_mean_gain_max_alarm}} || $G_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_h </Label>	
					<Value> {{spf_B1}}/b1LnaHDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_v </Label>	
					<Value> {{spf_B1}}/b1LnaVDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_h </Label>	
					<Value> {{spf_B1}}/b1LnaHGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_v </Label>	
					<Value> {{spf_B1}}/b1LnaVGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_h </Label>	
					<Value> {{spf_B1}}/b1LnaHDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_v </Label>	
					<Value> {{spf_B1}}/b1LnaVDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_h </Label>	
					<Value> {{spf_B1}}/b1LnaHMeanGain </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_v </Label>	
					<Value> {{spf_B1}}/b1LnaVMeanGain </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 LNA out of range (voltage/current)! </Message>
		</Alarm>	
		{% endif %}


		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2LnaOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V_drain_h &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_h &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_h.quality==ATTR_ALARM) || 
            ($V_drain_v &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_v &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_v.quality==ATTR_ALARM) ||
						($V_gate_h &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_h &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_h.quality==ATTR_ALARM) || 
            ($V_gate_v &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_v &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_v.quality==ATTR_ALARM) ||
						($I_drain_h &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_h &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_h.quality==ATTR_ALARM) || 
            ($I_drain_v &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_v &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_v.quality==ATTR_ALARM) ||
						($G_h &lt; {{spf_lna_mean_gain_min_alarm}} || $G_h &gt; {{spf_lna_mean_gain_max_alarm}} || $G_h.quality==ATTR_ALARM) || 
            ($G_v &lt; {{spf_lna_mean_gain_min_alarm}} || $G_v &gt; {{spf_lna_mean_gain_max_alarm}} || $G_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_h </Label>	
					<Value> {{spf_B2}}/b2LnaHDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_v </Label>	
					<Value> {{spf_B2}}/b2LnaVDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_h </Label>	
					<Value> {{spf_B2}}/b2LnaHGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_v </Label>	
					<Value> {{spf_B2}}/b2LnaVGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_h </Label>	
					<Value> {{spf_B2}}/b2LnaHDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_v </Label>	
					<Value> {{spf_B2}}/b2LnaVDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_h </Label>	
					<Value> {{spf_B2}}/b2LnaHMeanGain </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_v </Label>	
					<Value> {{spf_B2}}/b2LnaVMeanGain </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 LNA out of range (voltage/current)! </Message>
		</Alarm>	
		{% endif %}	

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3LnaOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V_drain_h &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_h &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_h.quality==ATTR_ALARM) || 
            ($V_drain_v &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_v &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_v.quality==ATTR_ALARM) ||
						($V_gate_h &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_h &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_h.quality==ATTR_ALARM) || 
            ($V_gate_v &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_v &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_v.quality==ATTR_ALARM) ||
						($I_drain_h &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_h &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_h.quality==ATTR_ALARM) || 
            ($I_drain_v &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_v &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_v.quality==ATTR_ALARM) ||
						($G_h &lt; {{spf_lna_mean_gain_min_alarm}} || $G_h &gt; {{spf_lna_mean_gain_max_alarm}} || $G_h.quality==ATTR_ALARM) || 
            ($G_v &lt; {{spf_lna_mean_gain_min_alarm}} || $G_v &gt; {{spf_lna_mean_gain_max_alarm}} || $G_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_h </Label>	
					<Value> {{spf_B345}}/b3LnaHDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_v </Label>	
					<Value> {{spf_B345}}/b3LnaVDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_h </Label>	
					<Value> {{spf_B345}}/b3LnaHGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_v </Label>	
					<Value> {{spf_B345}}/b3LnaVGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_h </Label>	
					<Value> {{spf_B345}}/b3LnaHDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_v </Label>	
					<Value> {{spf_B345}}/b3LnaVDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_h </Label>	
					<Value> {{spf_B345}}/b3LnaHMeanGain </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_v </Label>	
					<Value> {{spf_B345}}/b3LnaVMeanGain </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 LNA out of range (voltage/current)! </Message>
		</Alarm>	
		{% endif %}


		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4LnaOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V_drain_h &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_h &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_h.quality==ATTR_ALARM) || 
            ($V_drain_v &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_v &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_v.quality==ATTR_ALARM) ||
						($V_gate_h &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_h &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_h.quality==ATTR_ALARM) || 
            ($V_gate_v &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_v &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_v.quality==ATTR_ALARM) ||
						($I_drain_h &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_h &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_h.quality==ATTR_ALARM) || 
            ($I_drain_v &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_v &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_v.quality==ATTR_ALARM) ||
						($G_h &lt; {{spf_lna_mean_gain_min_alarm}} || $G_h &gt; {{spf_lna_mean_gain_max_alarm}} || $G_h.quality==ATTR_ALARM) || 
            ($G_v &lt; {{spf_lna_mean_gain_min_alarm}} || $G_v &gt; {{spf_lna_mean_gain_max_alarm}} || $G_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_h </Label>	
					<Value> {{spf_B345}}/b4LnaHDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_v </Label>	
					<Value> {{spf_B345}}/b4LnaVDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_h </Label>	
					<Value> {{spf_B345}}/b4LnaHGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_v </Label>	
					<Value> {{spf_B345}}/b4LnaVGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_h </Label>	
					<Value> {{spf_B345}}/b4LnaHDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_v </Label>	
					<Value> {{spf_B345}}/b4LnaVDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_h </Label>	
					<Value> {{spf_B345}}/b4LnaHMeanGain </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_v </Label>	
					<Value> {{spf_B345}}/b4LnaVMeanGain </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 LNA out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}	

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5LnaOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($V_drain_h &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_h &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_h.quality==ATTR_ALARM) || 
            ($V_drain_v &lt; {{spf_lna_drain_volt_min_alarm}} || $V_drain_v &gt; {{spf_lna_drain_volt_max_alarm}} || $V_drain_v.quality==ATTR_ALARM) ||
						($V_gate_h &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_h &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_h.quality==ATTR_ALARM) || 
            ($V_gate_v &lt; {{spf_lna_gate_volt_min_alarm}} || $V_gate_v &gt; {{spf_lna_gate_volt_max_alarm}} || $V_gate_v.quality==ATTR_ALARM) ||
						($I_drain_h &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_h &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_h.quality==ATTR_ALARM) || 
            ($I_drain_v &lt; {{spf_lna_drain_curr_min_alarm}} || $I_drain_v &gt; {{spf_lna_drain_curr_max_alarm}} || $I_drain_v.quality==ATTR_ALARM) ||
						($G_h &lt; {{spf_lna_mean_gain_min_alarm}} || $G_h &gt; {{spf_lna_mean_gain_max_alarm}} || $G_h.quality==ATTR_ALARM) || 
            ($G_v &lt; {{spf_lna_mean_gain_min_alarm}} || $G_v &gt; {{spf_lna_mean_gain_max_alarm}} || $G_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_h </Label>	
					<Value> {{spf_B345}}/b5LnaHDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_drain_v </Label>	
					<Value> {{spf_B345}}/b5LnaVDrainVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_h </Label>	
					<Value> {{spf_B345}}/b5LnaHGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_gate_v </Label>	
					<Value> {{spf_B345}}/b5LnaVGateVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_h </Label>	
					<Value> {{spf_B345}}/b5LnaHDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_drain_v </Label>	
					<Value> {{spf_B345}}/b5LnaVDrainCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_h </Label>	
					<Value> {{spf_B345}}/b5LnaHMeanGain </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> G_v </Label>	
					<Value> {{spf_B345}}/b5LnaVMeanGain </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 LNA out of range (voltage/current)! </Message>
		</Alarm>	
		{% endif %}

		
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}	
		<!-- LNA All Bands -->
		<Alarm>
			<Name> alertSpfLnaOutOfRange </Name>
			<Formula> 
				($lna_b1.alarm || $lna_b2.alarm || $lna_b3.alarm || $lna_b4.alarm || $lna_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> lna_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1LnaOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> lna_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2LnaOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> lna_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3LnaOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> lna_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4LnaOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> lna_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5LnaOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF LNA (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- Amp2 Out of range -->
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1Amp2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_amp2_h &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_h &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_h.quality==ATTR_ALARM) || 
            ($I_amp2_v &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_v &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_v.quality==ATTR_ALARM) ||
						($V_amp2_h &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_h &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_h.quality==ATTR_ALARM) || 
            ($V_amp2_v &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_v &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_h </Label>	
					<Value> {{spf_B1}}/b1Amp2HCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_v </Label>	
					<Value> {{spf_B1}}/b1Amp2VCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_h </Label>	
					<Value> {{spf_B1}}/b1Amp2HVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_v </Label>	
					<Value> {{spf_B1}}/b1Amp2VVoltage </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 Amp2 out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2Amp2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_amp2_h &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_h &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_h.quality==ATTR_ALARM) || 
            ($I_amp2_v &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_v &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_v.quality==ATTR_ALARM) ||
						($V_amp2_h &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_h &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_h.quality==ATTR_ALARM) || 
            ($V_amp2_v &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_v &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_h </Label>	
					<Value> {{spf_B2}}/b2Amp2HCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_v </Label>	
					<Value> {{spf_B2}}/b2Amp2VCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_h </Label>	
					<Value> {{spf_B2}}/b2Amp2HVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_v </Label>	
					<Value> {{spf_B2}}/b2Amp2VVoltage </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 Amp2 out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3Amp2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_amp2_h &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_h &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_h.quality==ATTR_ALARM) || 
            ($I_amp2_v &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_v &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_v.quality==ATTR_ALARM) ||
						($V_amp2_h &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_h &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_h.quality==ATTR_ALARM) || 
            ($V_amp2_v &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_v &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_h </Label>	
					<Value> {{spf_B345}}/b3Amp2HCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_v </Label>	
					<Value> {{spf_B345}}/b3Amp2VCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_h </Label>	
					<Value> {{spf_B345}}/b3Amp2HVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_v </Label>	
					<Value> {{spf_B345}}/b3Amp2VVoltage </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 Amp2 out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4Amp2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_amp2_h &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_h &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_h.quality==ATTR_ALARM) || 
            ($I_amp2_v &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_v &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_v.quality==ATTR_ALARM) ||
						($V_amp2_h &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_h &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_h.quality==ATTR_ALARM) || 
            ($V_amp2_v &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_v &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_h </Label>	
					<Value> {{spf_B345}}/b4Amp2HCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_v </Label>	
					<Value> {{spf_B345}}/b4Amp2VCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_h </Label>	
					<Value> {{spf_B345}}/b4Amp2HVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_v </Label>	
					<Value> {{spf_B345}}/b4Amp2VVoltage </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 Amp2 out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5Amp2OutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_amp2_h &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_h &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_h.quality==ATTR_ALARM) || 
            ($I_amp2_v &lt; {{spf_amp2_curr_min_alarm}} || $I_amp2_v &gt; {{spf_amp2_curr_max_alarm}} || $I_amp2_v.quality==ATTR_ALARM) ||
						($V_amp2_h &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_h &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_h.quality==ATTR_ALARM) || 
            ($V_amp2_v &lt; {{spf_amp2_volt_min_alarm}} || $V_amp2_v &gt; {{spf_amp2_volt_max_alarm}} || $V_amp2_v.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_h </Label>	
					<Value> {{spf_B345}}/b5Amp2HCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_amp2_v </Label>	
					<Value> {{spf_B345}}/b5Amp2VCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_h </Label>	
					<Value> {{spf_B345}}/b5Amp2HVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> V_amp2_v </Label>	
					<Value> {{spf_B345}}/b5Amp2VVoltage </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 Amp2 out of range (voltage/current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfAmp2OutOfRange </Name>
			<Formula> 
				($amp2_b1.alarm || $amp2_b2.alarm || $amp2_b3.alarm || $amp2_b4.alarm || $amp2_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> amp2_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1Amp2OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> amp2_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2Amp2OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> amp2_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3Amp2OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> amp2_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4Amp2OutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> amp2_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5Amp2OutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Amp2 (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- SPF Cal source Alarm -->
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1CalSourceOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($curr &lt; {{spf_cal_source_curr_min_alarm}} || $curr &gt; {{spf_cal_source_curr_max_alarm}} || $curr.quality==ATTR_ALARM) || 
            ($volt &lt; {{spf_cal_source_volt_min_alarm}} || $volt &gt; {{spf_cal_source_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
						($temp &lt; {{spf_cal_source_temp_min_alarm}} || $temp &gt; {{spf_cal_source_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
            ($I_pid &lt; {{spf_cal_source_curr_min_alarm}} || $I_pid &gt; {{spf_cal_source_curr_max_alarm}} || $I_pid.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_B1}}/b1CalSourceCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_B1}}/b1CalSourceVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B1}}/b1CalSourceTemp </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_pid </Label>	
					<Value> {{spf_B1}}/b1CalSourcePidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 cal source out of range (voltage/current/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2CalSourceOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($curr &lt; {{spf_cal_source_curr_min_alarm}} || $curr &gt; {{spf_cal_source_curr_max_alarm}} || $curr.quality==ATTR_ALARM) || 
            ($volt &lt; {{spf_cal_source_volt_min_alarm}} || $volt &gt; {{spf_cal_source_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
						($temp &lt; {{spf_cal_source_temp_min_alarm}} || $temp &gt; {{spf_cal_source_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
            ($I_pid &lt; {{spf_cal_source_curr_min_alarm}} || $I_pid &gt; {{spf_cal_source_curr_max_alarm}} || $I_pid.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_B2}}/b2CalSourceCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_B2}}/b2CalSourceVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B2}}/b2CalSourceTemp </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_pid </Label>	
					<Value> {{spf_B2}}/b2CalSourcePidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 cal source out of range (voltage/current/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3CalSourceOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($curr &lt; {{spf_cal_source_curr_min_alarm}} || $curr &gt; {{spf_cal_source_curr_max_alarm}} || $curr.quality==ATTR_ALARM) || 
            ($volt &lt; {{spf_cal_source_volt_min_alarm}} || $volt &gt; {{spf_cal_source_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
						($temp &lt; {{spf_cal_source_temp_min_alarm}} || $temp &gt; {{spf_cal_source_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
            ($I_pid &lt; {{spf_cal_source_curr_min_alarm}} || $I_pid &gt; {{spf_cal_source_curr_max_alarm}} || $I_pid.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_B345}}/b3CalSourceCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_B345}}/b3CalSourceVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b3CalSourceTemp </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_pid </Label>	
					<Value> {{spf_B345}}/b3CalSourcePidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 cal source out of range (voltage/current/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4CalSourceOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($curr &lt; {{spf_cal_source_curr_min_alarm}} || $curr &gt; {{spf_cal_source_curr_max_alarm}} || $curr.quality==ATTR_ALARM) || 
            ($volt &lt; {{spf_cal_source_volt_min_alarm}} || $volt &gt; {{spf_cal_source_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
						($temp &lt; {{spf_cal_source_temp_min_alarm}} || $temp &gt; {{spf_cal_source_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
            ($I_pid &lt; {{spf_cal_source_curr_min_alarm}} || $I_pid &gt; {{spf_cal_source_curr_max_alarm}} || $I_pid.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_B345}}/b4CalSourceCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_B345}}/b4CalSourceVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b4CalSourceTemp </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_pid </Label>	
					<Value> {{spf_B345}}/b4CalSourcePidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 cal source out of range (voltage/current/temp)! </Message>
		</Alarm>
		{% endif %}


		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5CalSourceOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($curr &lt; {{spf_cal_source_curr_min_alarm}} || $curr &gt; {{spf_cal_source_curr_max_alarm}} || $curr.quality==ATTR_ALARM) || 
            ($volt &lt; {{spf_cal_source_volt_min_alarm}} || $volt &gt; {{spf_cal_source_volt_max_alarm}} || $volt.quality==ATTR_ALARM) ||
						($temp &lt; {{spf_cal_source_temp_min_alarm}} || $temp &gt; {{spf_cal_source_temp_max_alarm}} || $temp.quality==ATTR_ALARM) ||
            ($I_pid &lt; {{spf_cal_source_curr_min_alarm}} || $I_pid &gt; {{spf_cal_source_curr_max_alarm}} || $I_pid.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> curr </Label>	
					<Value> {{spf_B345}}/b5CalSourceCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> volt </Label>	
					<Value> {{spf_B345}}/b5CalSourceVoltage </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b5CalSourceTemp </Value>
				</FormulaVar>	
				<FormulaVar>
					<Label> I_pid </Label>	
					<Value> {{spf_B345}}/b5CalSourcePidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 cal source out of range (voltage/current/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfCalSourceOutOfRange </Name>
			<Formula> 
				($calsource_b1.alarm || $calsource_b2.alarm || $calsource_b3.alarm || $calsource_b4.alarm || $calsource_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> calsource_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1CalSourceOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> calsource_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2CalSourceOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> calsource_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3CalSourceOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> calsource_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4CalSourceOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> calsource_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5CalSourceOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF cal source (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- Rfe PID Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1RfePidOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_rfe_1 &lt; {{spf_rfe1_pid_curr_min_alarm}} || $I_rfe_1 &gt; {{spf_rfe1_pid_curr_max_alarm}} || $I_rfe_1.quality==ATTR_ALARM) || 
            ($I_rfe_2 &lt; {{spf_rfe2_pid_curr_min_alarm}} || $I_rfe_2 &gt; {{spf_rfe2_pid_curr_max_alarm}} || $I_rfe_2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_1 </Label>	
					<Value> {{spf_B1}}/b1Rfe1PidCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_2 </Label>	
					<Value> {{spf_B1}}/b1Rfe2PidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 Rfe Pid out of range (1st/2nd stage current)! </Message>
		</Alarm>
		{% endif %}
		
		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2RfePidOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_rfe_1 &lt; {{spf_rfe1_pid_curr_min_alarm}} || $I_rfe_1 &gt; {{spf_rfe1_pid_curr_max_alarm}} || $I_rfe_1.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_1 </Label>	
					<Value> {{spf_B2}}/b2Rfe1PidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 Rfe Pid out of range (1st stage current)! </Message>
		</Alarm>
		{% endif %}
		
		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3RfePidOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_rfe_1 &lt; {{spf_rfe1_pid_curr_min_alarm}} || $I_rfe_1 &gt; {{spf_rfe1_pid_curr_max_alarm}} || $I_rfe_1.quality==ATTR_ALARM) || 
            ($I_rfe_2 &lt; {{spf_rfe2_pid_curr_min_alarm}} || $I_rfe_2 &gt; {{spf_rfe2_pid_curr_max_alarm}} || $I_rfe_2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_1 </Label>	
					<Value> {{spf_B345}}/b3Rfe1PidCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_2 </Label>	
					<Value> {{spf_B345}}/b3Rfe2PidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 Rfe Pid out of range (1st/2nd stage current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4RfePidOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_rfe_1 &lt; {{spf_rfe1_pid_curr_min_alarm}} || $I_rfe_1 &gt; {{spf_rfe1_pid_curr_max_alarm}} || $I_rfe_1.quality==ATTR_ALARM) || 
            ($I_rfe_2 &lt; {{spf_rfe2_pid_curr_min_alarm}} || $I_rfe_2 &gt; {{spf_rfe2_pid_curr_max_alarm}} || $I_rfe_2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_1 </Label>	
					<Value> {{spf_B345}}/b4Rfe1PidCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_2 </Label>	
					<Value> {{spf_B345}}/b4Rfe2PidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 Rfe Pid out of range (1st/2nd stage current)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5RfePidOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($I_rfe_1 &lt; {{spf_rfe1_pid_curr_min_alarm}} || $I_rfe_1 &gt; {{spf_rfe1_pid_curr_max_alarm}} || $I_rfe_1.quality==ATTR_ALARM) || 
            ($I_rfe_2 &lt; {{spf_rfe2_pid_curr_min_alarm}} || $I_rfe_2 &gt; {{spf_rfe2_pid_curr_max_alarm}} || $I_rfe_2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_1 </Label>	
					<Value> {{spf_B345}}/b5Rfe1PidCurrent </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> I_rfe_2 </Label>	
					<Value> {{spf_B345}}/b5Rfe2PidCurrent </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 Rfe Pid out of range (1st/2nd stage current)! </Message>
		</Alarm>
		{% endif %}


		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfRfePidOutOfRange </Name>
			<Formula> 
				($rfepid_b1.alarm || $rfepid_b2.alarm || $rfepid_b3.alarm || $rfepid_b4.alarm || $rfepid_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> rfepid_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1RfePidOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> rfepid_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2RfePidOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> rfepid_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3RfePidOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> rfepid_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4RfePidOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> rfepid_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5RfePidOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Rfe Pid (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- Cryostat Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1CryostatOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryo_body_temp_min_alarm}} || $temp &gt; {{spf_cryo_body_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<!--
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($press &lt; {{spf_cryo_press_min_alarm}} || $press &gt; {{spf_cryo_press_max_alarm}} || $press.quality==ATTR_ALARM) || 
            ($temp &lt; {{spf_cryo_body_temp_min_alarm}} || $temp &gt; {{spf_cryo_body_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			-->
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<!--
				<FormulaVar>
					<Label> press </Label>	
					<Value> {{spf_B1}}/b1CryoPressure </Value>
				</FormulaVar>
				-->
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B1}}/b1ChamberBodyTemp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 cryostat out of range (pressure/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2CryostatOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($press &lt; {{spf_cryo_press_min_alarm}} || $press &gt; {{spf_cryo_press_max_alarm}} || $press.quality==ATTR_ALARM) || 
            ($temp &lt; {{spf_cryo_body_temp_min_alarm}} || $temp &gt; {{spf_cryo_body_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> press </Label>	
					<Value> {{spf_B2}}/b2CryoPressure </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B2}}/b2CryostatBodyTemp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 cryostat out of range (pressure/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and (spf_enable_b3_in_config | bool or spf_enable_b4_in_config | bool or spf_enable_b5_in_config | bool) %}
		<!-- B345 -->
		<Alarm>
			<Name> alertSpfB345CryostatOutOfRange </Name>
			<Formula> 
				( 
          ($expectedOnline3 || $expectedOnline4 || $expectedOnline5) &amp;&amp; 
          (
            ($press &lt; {{spf_cryo_press_min_alarm}} || $press &gt; {{spf_cryo_press_max_alarm}} || $press.quality==ATTR_ALARM) || 
            ($temp &lt; {{spf_cryo_body_temp_min_alarm}} || $temp &gt; {{spf_cryo_body_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline3 </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> expectedOnline4 </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> expectedOnline5 </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> press </Label>	
					<Value> {{spf_B345}}/b345CryoPressure </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b345CryostatBodyTemp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B345 cryostat out of range (pressure/temp)! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfCryostatOutOfRange </Name>
			<Formula> 
				($cryo_b1.alarm || $cryo_b2.alarm || $cryo_b345.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> cryo_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1CryostatOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> cryo_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2CryostatOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> cryo_b345 </Label>	
					<Value> {{alarm_handler}}/alertSpfB345CryostatOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Cryostat (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}
	
		<!-- SPF Manifold Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2ManifoldOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($press &lt; {{spf_manifold_press_min_alarm}} || $press &gt; {{spf_manifold_press_max_alarm}} || $press.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> press </Label>	
					<Value> {{spf_B2}}/b2ManifoldPressure </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 manifold pressure out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and (spf_enable_b3_in_config | bool or spf_enable_b4_in_config | bool or spf_enable_b5_in_config | bool) %}
		<!-- B345 -->
		<Alarm>
			<Name> alertSpfB345ManifoldOutOfRange </Name>
			<Formula> 
				( 
          ($expectedOnline3 || $expectedOnline4 || $expectedOnline5) &amp;&amp; 
          (
            ($press &lt; {{spf_manifold_press_min_alarm}} || $press &gt; {{spf_manifold_press_max_alarm}} || $press.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline3 </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> expectedOnline4 </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> expectedOnline5 </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> press </Label>	
					<Value> {{spf_B345}}/b345ManifoldPressure </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B345 manifold pressure out of range! </Message>
		</Alarm>
		{% endif %}
	
		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfManifoldOutOfRange </Name>
			<Formula> 
				($manipress_b2.alarm || $manipress_b345.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> manipress_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2ManifoldOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> manipress_b345 </Label>	
					<Value> {{alarm_handler}}/alertSpfB345ManifoldOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF manifold pressure (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}



		<!-- SPF RFE Temperature Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1RfeTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp1_H &lt; {{spf_rfe1_temp_min_alarm}} || $temp1_H &gt; {{spf_rfe1_temp_max_alarm}} || $temp1_H.quality==ATTR_ALARM) ||
						($temp1_V &lt; {{spf_rfe1_temp_min_alarm}} || $temp1_V &gt; {{spf_rfe1_temp_max_alarm}} || $temp1_V.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1_H </Label>	
					<Value> {{spf_B1}}/b1LnaHTemperature </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1_V </Label>	
					<Value> {{spf_B1}}/b1LnaVTemperature </Value>
				</FormulaVar>
				<!--
				<FormulaVar>
					<Label> temp2 </Label>	
					<Value> {{spf_B1}}/b1Rfe2Temperature </Value>
				</FormulaVar>
				-->
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 Rfe 1st/2nd stage temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2RfeTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp1 &lt; {{spf_rfe1_temp_min_alarm}} || $temp1 &gt; {{spf_rfe1_temp_max_alarm}} || $temp1.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1 </Label>	
					<Value> {{spf_B2}}/b2Rfe1Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 Rfe 1st stage temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3RfeTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp1 &lt; {{spf_rfe1_temp_min_alarm}} || $temp1 &gt; {{spf_rfe1_temp_max_alarm}} || $temp1.quality==ATTR_ALARM) ||
						($temp2 &lt; {{spf_rfe2_temp_min_alarm}} || $temp2 &gt; {{spf_rfe2_temp_max_alarm}} || $temp2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1 </Label>	
					<Value> {{spf_B345}}/b3Rfe1Temperature </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp2 </Label>	
					<Value> {{spf_B345}}/b3Rfe2Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 Rfe 1st/2nd stage temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4RfeTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp1 &lt; {{spf_rfe1_temp_min_alarm}} || $temp1 &gt; {{spf_rfe1_temp_max_alarm}} || $temp1.quality==ATTR_ALARM) ||
						($temp2 &lt; {{spf_rfe2_temp_min_alarm}} || $temp2 &gt; {{spf_rfe2_temp_max_alarm}} || $temp2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1 </Label>	
					<Value> {{spf_B345}}/b4Rfe1Temperature </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp2 </Label>	
					<Value> {{spf_B345}}/b4Rfe2Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 Rfe 1st/2nd stage temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5RfeTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp1 &lt; {{spf_rfe1_temp_min_alarm}} || $temp1 &gt; {{spf_rfe1_temp_max_alarm}} || $temp1.quality==ATTR_ALARM) ||
						($temp2 &lt; {{spf_rfe2_temp_min_alarm}} || $temp2 &gt; {{spf_rfe2_temp_max_alarm}} || $temp2.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp1 </Label>	
					<Value> {{spf_B345}}/b5Rfe1Temperature </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp2 </Label>	
					<Value> {{spf_B345}}/b5Rfe2Temperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 Rfe 1st/2nd stage temperature out of range! </Message>
		</Alarm>
		{% endif %}
	
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfRfeTempOutOfRange </Name>
			<Formula> 
				($temp_b1.alarm || $temp_b2.alarm || $temp_b3.alarm || $temp_b4.alarm || $temp_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> temp_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1RfeTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2RfeTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3RfeTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4RfeTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5RfeTempOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Rfe temperature (one band at least) out of range! </Message>
		</Alarm>	
		{% endif %}

		<!-- SPF Omt Temperature Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2OmtTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_omt_temp_min_alarm}} || $temp &gt; {{spf_omt_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B2}}/b2OmtTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 Omt temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3OmtTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_omt_temp_min_alarm}} || $temp &gt; {{spf_omt_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b3OmtTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 Omt temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4OmtTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_omt_temp_min_alarm}} || $temp &gt; {{spf_omt_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b4OmtTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 Omt temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5OmtTempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_omt_temp_min_alarm}} || $temp &gt; {{spf_omt_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b5OmtTemperature </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 Omt temperature out of range! </Message>
		</Alarm>
		{% endif %}


		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfOmtTempOutOfRange </Name>
			<Formula> 
				($temp_b2.alarm || $temp_b3.alarm || $temp_b4.alarm || $temp_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> temp_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2OmtTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3OmtTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4OmtTempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5OmtTempOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF Omt temperature out of range! </Message>
		</Alarm>	
		{% endif %}


		<!-- SPF Cryocooler Temperature Alarm --> 
		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool %}
		<!-- B1 -->
		<Alarm>
			<Name> alertSpfB1CryocoolStage1TempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryocooler_stage1_temp_min_alarm}} || $temp &gt; {{spf_cryocooler_stage1_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b1ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B1}}/b1CryocoolStage1Temp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B1 cryocooler temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b2_in_config | bool %}
		<!-- B2 -->
		<Alarm>
			<Name> alertSpfB2CryocoolStage1TempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryocooler_stage1_temp_min_alarm}} || $temp &gt; {{spf_cryocooler_stage1_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b2ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B2}}/b2CryocoolStage1Temp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B2 cryocooler temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b3_in_config | bool %}
		<!-- B3 -->
		<Alarm>
			<Name> alertSpfB3CryocoolStage1TempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryocooler_stage1_temp_min_alarm}} || $temp &gt; {{spf_cryocooler_stage1_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b3ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b3CryocoolStage1Temp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B3 cryocooler temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b4_in_config | bool %}
		<!-- B4 -->
		<Alarm>
			<Name> alertSpfB4CryocoolStage1TempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryocooler_stage1_temp_min_alarm}} || $temp &gt; {{spf_cryocooler_stage1_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b4ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b4CryocoolStage1Temp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B4 cryocooler temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b5_in_config | bool %}
		<!-- B5 -->
		<Alarm>
			<Name> alertSpfB5CryocoolStage1TempOutOfRange </Name>
			<Formula> 
				( 
          $expectedOnline &amp;&amp; 
          (
            ($temp &lt; {{spf_cryocooler_stage1_temp_min_alarm}} || $temp &gt; {{spf_cryocooler_stage1_temp_max_alarm}} || $temp.quality==ATTR_ALARM)
          ) 
        )
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> expectedOnline </Label>	
					<Value> {{spf_controller}}/b5ExpectedOnline </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp </Label>	
					<Value> {{spf_B345}}/b5CryocoolStage1Temp </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF B5 cryocooler temperature out of range! </Message>
		</Alarm>
		{% endif %}

		{% if spf_enabled_in_config | bool and spf_enable_b1_in_config | bool and spf_enable_b2_in_config | bool and spf_enable_b3_in_config | bool and spf_enable_b4_in_config | bool and spf_enable_b5_in_config | bool %}
		<Alarm>
			<Name> alertSpfCryocoolStage1TempOutOfRange </Name>
			<Formula> 
				($temp_b1.alarm || $temp_b2.alarm || $temp_b3.alarm || $temp_b4.alarm || $temp_b5.alarm)
			</Formula>
			<FormulaVars>
				<FormulaVar>
					<Label> temp_b1 </Label>	
					<Value> {{alarm_handler}}/alertSpfB1CryocoolStage1TempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b2 </Label>	
					<Value> {{alarm_handler}}/alertSpfB2CryocoolStage1TempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b3 </Label>	
					<Value> {{alarm_handler}}/alertSpfB3CryocoolStage1TempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b4 </Label>	
					<Value> {{alarm_handler}}/alertSpfB4CryocoolStage1TempOutOfRange </Value>
				</FormulaVar>
				<FormulaVar>
					<Label> temp_b5 </Label>	
					<Value> {{alarm_handler}}/alertSpfB5CryocoolStage1TempOutOfRange </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> spf </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> SPF cryocooler temperature (at least one band) out of range! </Message>
		</Alarm>	
		{% endif %}
	
		<!-- ************************ -->
		<!-- ***  DS Alarms       *** -->
		<!-- ************************ -->
		<!-- DS ESTOP alarm -->
		{% if ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmDishInESTOP </Name>	
			<Formula> 
        ($mode == 4)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> mode </Label>	
					<Value> {{ds_manager}}/operatingMode </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> ds </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish is in ESTOP </Message>
		</Alarm>
		{% endif %}

		<!-- DS power cut alarm -->
		{% if ds_enabled_in_config | bool %}
		<Alarm>
			<Name> alarmDishPowerCut </Name>	
			<Formula> 
        ($powerState == 1)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> powerState </Label>	
					<Value> {{ds_manager}}/powerState </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> ds </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish power cut occurred (under UPS) </Message>
		</Alarm>
		{% endif %}

		<!-- ********************************* -->
		<!-- ***  DishManager Alarms       *** -->
		<!-- ********************************* -->
		<!-- Dish FORBIDDEN mode alert -->
		<Alarm>
			<Name> alertDishInForbiddenMode </Name>	
			<Formula> 
        ($mode == 10)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> mode </Label>	
					<Value> {{lmc_master}}/dishMode </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish is in FORBIDDEN mode </Message>
		</Alarm>

		<!-- Dish FAILED HEALTH STATE alert -->
		<Alarm>
			<Name> alertDishInFailedHealthState </Name>	
			<Formula> 
        ($health == 3)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> health </Label>	
					<Value> {{lmc_master}}/healthState </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish is in FAILED health state </Message>
		</Alarm>


		
		{% if ds_enabled_in_config | bool  %}
		<!-- Dish set STOW mode task alert -->
		<Alarm>
			<Name> alertDishStowFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/setStowModeProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish set STOW failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}

		
		{% if ds_enabled_in_config | bool and spf_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<!-- Dish set STANDBY-LP mode task alert -->
		<Alarm>
			<Name> alertDishStandbyLPFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/setStandbyLPModeProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish set STANDBY-LP failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}

		{% if ds_enabled_in_config | bool and spf_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<!-- Dish set STANDBY-FP mode task alert -->
		<Alarm>
			<Name> alertDishStandbyFPFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/setStandbyFPModeProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish set STANDBY-FP failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}


		{% if ds_enabled_in_config | bool and spf_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<!-- Dish set MAINTENANCE mode task alert -->
		<Alarm>
			<Name> alertDishMaintenanceFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/setMaintenanceModeProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish set MAINTENANCE failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}


		{% if ds_enabled_in_config | bool and spf_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<!-- Dish set OPERATE mode task alert -->
		<Alarm>
			<Name> alertDishOperateFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/setOperateModeProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish set OPERATE failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}
		
		{% if ds_enabled_in_config | bool and spf_enabled_in_config | bool and rx_enabled_in_config | bool %}
		<!-- Dish configuration task alert -->
		<Alarm>
			<Name> alertDishConfigureFailed </Name>	
			<Formula> 
        ($status == 5 || $status == 6 || $status == 7)
			</Formula>

			<FormulaVars>
				<FormulaVar>
					<Label> status </Label>	
					<Value> {{lmc_master}}/configureBandProgressStatus </Value>
				</FormulaVar>
			</FormulaVars>
			<Groups>
				<Group> lmc </Group>
			</Groups>	
			<Level> fault </Level>	
			<Message> Dish configuration failed/timed-out/aborted </Message>
		</Alarm>
		{% endif %}

	</Alarms>


</DeviceConfiguration>

