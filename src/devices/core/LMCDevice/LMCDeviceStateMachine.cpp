/*----- PROTECTED REGION ID(LMCDeviceStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        LMCDeviceStateMachine.cpp
//
// description : State machine file for the LMCDevice class
//
// project :     LMCDevice
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LMCDevice.h>

/*----- PROTECTED REGION END -----*/	//	LMCDevice::LMCDeviceStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  ON       |  
//  OFF      |  
//  FAULT    |  
//  INIT     |  
//  RUNNING  |  
//  ALARM    |  
//  UNKNOWN  |  
//  MOVING   |  


namespace LMCDevice_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingLevelCentral_allowed()
 *	Description : Execution allowed for loggingLevelCentral attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingLevelCentral_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingLevelCentral attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelCentralStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelCentralStateAllowed_WRITE

	//	Not any excluded states for loggingLevelCentral attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelCentralStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelCentralStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingLevelElement_allowed()
 *	Description : Execution allowed for loggingLevelElement attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingLevelElement_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingLevelElement attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelElementStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelElementStateAllowed_WRITE

	//	Not any excluded states for loggingLevelElement attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelElementStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelElementStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingLevelStorage_allowed()
 *	Description : Execution allowed for loggingLevelStorage attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingLevelStorage_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingLevelStorage attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelStorageStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelStorageStateAllowed_WRITE

	//	Not any excluded states for loggingLevelStorage attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelStorageStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelStorageStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingLevelConsole_allowed()
 *	Description : Execution allowed for loggingLevelConsole attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingLevelConsole_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingLevelConsole attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelConsoleStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelConsoleStateAllowed_WRITE

	//	Not any excluded states for loggingLevelConsole attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingLevelConsoleStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingLevelConsoleStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_buildState_allowed()
 *	Description : Execution allowed for buildState attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_buildState_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for buildState attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::buildStateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::buildStateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_centralLoggerStatus_allowed()
 *	Description : Execution allowed for centralLoggerStatus attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_centralLoggerStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for centralLoggerStatus attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::centralLoggerStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::centralLoggerStatusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_elementLoggerStatus_allowed()
 *	Description : Execution allowed for elementLoggerStatus attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_elementLoggerStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for elementLoggerStatus attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::elementLoggerStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::elementLoggerStatusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_storageLoggerStatus_allowed()
 *	Description : Execution allowed for storageLoggerStatus attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_storageLoggerStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for storageLoggerStatus attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::storageLoggerStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::storageLoggerStatusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_eventRate_allowed()
 *	Description : Execution allowed for eventRate attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_eventRate_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for eventRate attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::eventRateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::eventRateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_exceptionRate_allowed()
 *	Description : Execution allowed for exceptionRate attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_exceptionRate_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for exceptionRate attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::exceptionRateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::exceptionRateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_fwdAttrInitStatus_allowed()
 *	Description : Execution allowed for fwdAttrInitStatus attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_fwdAttrInitStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for fwdAttrInitStatus attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::fwdAttrInitStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::fwdAttrInitStatusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_centralLoggerEnabled_allowed()
 *	Description : Execution allowed for centralLoggerEnabled attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_centralLoggerEnabled_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for centralLoggerEnabled attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::centralLoggerEnabledStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::centralLoggerEnabledStateAllowed_WRITE

	//	Not any excluded states for centralLoggerEnabled attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::centralLoggerEnabledStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::centralLoggerEnabledStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_elementLoggerEnabled_allowed()
 *	Description : Execution allowed for elementLoggerEnabled attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_elementLoggerEnabled_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for elementLoggerEnabled attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::elementLoggerEnabledStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::elementLoggerEnabledStateAllowed_WRITE

	//	Not any excluded states for elementLoggerEnabled attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::elementLoggerEnabledStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::elementLoggerEnabledStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_storageLoggerEnabled_allowed()
 *	Description : Execution allowed for storageLoggerEnabled attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_storageLoggerEnabled_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for storageLoggerEnabled attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::storageLoggerEnabledStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::storageLoggerEnabledStateAllowed_WRITE

	//	Not any excluded states for storageLoggerEnabled attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::storageLoggerEnabledStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::storageLoggerEnabledStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingTargetCentral_allowed()
 *	Description : Execution allowed for loggingTargetCentral attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingTargetCentral_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingTargetCentral attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetCentralStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetCentralStateAllowed_WRITE

	//	Not any excluded states for loggingTargetCentral attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetCentralStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetCentralStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingTargetElement_allowed()
 *	Description : Execution allowed for loggingTargetElement attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingTargetElement_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingTargetElement attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetElementStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetElementStateAllowed_WRITE

	//	Not any excluded states for loggingTargetElement attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetElementStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetElementStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_loggingTargetStorage_allowed()
 *	Description : Execution allowed for loggingTargetStorage attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_loggingTargetStorage_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for loggingTargetStorage attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetStorageStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetStorageStateAllowed_WRITE

	//	Not any excluded states for loggingTargetStorage attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::loggingTargetStorageStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::loggingTargetStorageStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_attrRandomizationEnabled_allowed()
 *	Description : Execution allowed for attrRandomizationEnabled attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_attrRandomizationEnabled_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for attrRandomizationEnabled attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::attrRandomizationEnabledStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::attrRandomizationEnabledStateAllowed_WRITE

	//	Not any excluded states for attrRandomizationEnabled attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::attrRandomizationEnabledStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::attrRandomizationEnabledStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_attrRandomizationPeriod_allowed()
 *	Description : Execution allowed for attrRandomizationPeriod attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_attrRandomizationPeriod_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for attrRandomizationPeriod attribute in Write access.
	/*----- PROTECTED REGION ID(LMCDevice::attrRandomizationPeriodStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::attrRandomizationPeriodStateAllowed_WRITE

	//	Not any excluded states for attrRandomizationPeriod attribute in read access.
	/*----- PROTECTED REGION ID(LMCDevice::attrRandomizationPeriodStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::attrRandomizationPeriodStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_InitializeLoggers_allowed()
 *	Description : Execution allowed for InitializeLoggers attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_InitializeLoggers_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for InitializeLoggers command.
	/*----- PROTECTED REGION ID(LMCDevice::InitializeLoggersStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::InitializeLoggersStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_InitializeFwdAttrs_allowed()
 *	Description : Execution allowed for InitializeFwdAttrs attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_InitializeFwdAttrs_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for InitializeFwdAttrs command.
	/*----- PROTECTED REGION ID(LMCDevice::InitializeFwdAttrsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::InitializeFwdAttrsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_RandomizeDynAttrs_allowed()
 *	Description : Execution allowed for RandomizeDynAttrs attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_RandomizeDynAttrs_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for RandomizeDynAttrs command.
	/*----- PROTECTED REGION ID(LMCDevice::RandomizeDynAttrsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::RandomizeDynAttrsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_InitializeDevProxies_allowed()
 *	Description : Execution allowed for InitializeDevProxies attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_InitializeDevProxies_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for InitializeDevProxies command.
	/*----- PROTECTED REGION ID(LMCDevice::InitializeDevProxiesStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::InitializeDevProxiesStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetRegisteredProxies_allowed()
 *	Description : Execution allowed for GetRegisteredProxies attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetRegisteredProxies_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetRegisteredProxies command.
	/*----- PROTECTED REGION ID(LMCDevice::GetRegisteredProxiesStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetRegisteredProxiesStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetRegisteredEvents_allowed()
 *	Description : Execution allowed for GetRegisteredEvents attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetRegisteredEvents_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetRegisteredEvents command.
	/*----- PROTECTED REGION ID(LMCDevice::GetRegisteredEventsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetRegisteredEventsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetRegisteredFormulas_allowed()
 *	Description : Execution allowed for GetRegisteredFormulas attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetRegisteredFormulas_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetRegisteredFormulas command.
	/*----- PROTECTED REGION ID(LMCDevice::GetRegisteredFormulasStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetRegisteredFormulasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetInitializedFormulas_allowed()
 *	Description : Execution allowed for GetInitializedFormulas attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetInitializedFormulas_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetInitializedFormulas command.
	/*----- PROTECTED REGION ID(LMCDevice::GetInitializedFormulasStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetInitializedFormulasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNRunningTasks_allowed()
 *	Description : Execution allowed for GetNRunningTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNRunningTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNRunningTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNRunningTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNRunningTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNQueuedTasks_allowed()
 *	Description : Execution allowed for GetNQueuedTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNQueuedTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNQueuedTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNQueuedTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNQueuedTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNIdleTasks_allowed()
 *	Description : Execution allowed for GetNIdleTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNIdleTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNIdleTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNIdleTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNIdleTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNTasks_allowed()
 *	Description : Execution allowed for GetNTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNFailedTasks_allowed()
 *	Description : Execution allowed for GetNFailedTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNFailedTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNFailedTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNFailedTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNFailedTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetNTotFailedTasks_allowed()
 *	Description : Execution allowed for GetNTotFailedTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetNTotFailedTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetNTotFailedTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::GetNTotFailedTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetNTotFailedTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_IsTaskQuotaReached_allowed()
 *	Description : Execution allowed for IsTaskQuotaReached attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_IsTaskQuotaReached_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for IsTaskQuotaReached command.
	/*----- PROTECTED REGION ID(LMCDevice::IsTaskQuotaReachedStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::IsTaskQuotaReachedStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_FlushTaskQueue_allowed()
 *	Description : Execution allowed for FlushTaskQueue attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_FlushTaskQueue_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for FlushTaskQueue command.
	/*----- PROTECTED REGION ID(LMCDevice::FlushTaskQueueStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::FlushTaskQueueStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetQueuedTaskInfo_allowed()
 *	Description : Execution allowed for GetQueuedTaskInfo attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetQueuedTaskInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetQueuedTaskInfo command.
	/*----- PROTECTED REGION ID(LMCDevice::GetQueuedTaskInfoStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetQueuedTaskInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetTaskInfo_allowed()
 *	Description : Execution allowed for GetTaskInfo attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetTaskInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetTaskInfo command.
	/*----- PROTECTED REGION ID(LMCDevice::GetTaskInfoStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetTaskInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_ClearTasks_allowed()
 *	Description : Execution allowed for ClearTasks attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_ClearTasks_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ClearTasks command.
	/*----- PROTECTED REGION ID(LMCDevice::ClearTasksStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::ClearTasksStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_UpdateFormulaAttrs_allowed()
 *	Description : Execution allowed for UpdateFormulaAttrs attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_UpdateFormulaAttrs_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for UpdateFormulaAttrs command.
	/*----- PROTECTED REGION ID(LMCDevice::UpdateFormulaAttrsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::UpdateFormulaAttrsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_UpdateStatusAttrs_allowed()
 *	Description : Execution allowed for UpdateStatusAttrs attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_UpdateStatusAttrs_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for UpdateStatusAttrs command.
	/*----- PROTECTED REGION ID(LMCDevice::UpdateStatusAttrsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::UpdateStatusAttrsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_MonitorProxies_allowed()
 *	Description : Execution allowed for MonitorProxies attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_MonitorProxies_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for MonitorProxies command.
	/*----- PROTECTED REGION ID(LMCDevice::MonitorProxiesStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::MonitorProxiesStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_RevokeTask_allowed()
 *	Description : Execution allowed for RevokeTask attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_RevokeTask_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for RevokeTask command.
	/*----- PROTECTED REGION ID(LMCDevice::RevokeTaskStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::RevokeTaskStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_RevokeTaskSequence_allowed()
 *	Description : Execution allowed for RevokeTaskSequence attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_RevokeTaskSequence_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for RevokeTaskSequence command.
	/*----- PROTECTED REGION ID(LMCDevice::RevokeTaskSequenceStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::RevokeTaskSequenceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetFormulaData_allowed()
 *	Description : Execution allowed for GetFormulaData attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetFormulaData_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetFormulaData command.
	/*----- PROTECTED REGION ID(LMCDevice::GetFormulaDataStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetFormulaDataStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_SendTestLogMsg_allowed()
 *	Description : Execution allowed for SendTestLogMsg attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_SendTestLogMsg_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SendTestLogMsg command.
	/*----- PROTECTED REGION ID(LMCDevice::SendTestLogMsgStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::SendTestLogMsgStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_ClearTaskHistory_allowed()
 *	Description : Execution allowed for ClearTaskHistory attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_ClearTaskHistory_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ClearTaskHistory command.
	/*----- PROTECTED REGION ID(LMCDevice::ClearTaskHistoryStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::ClearTaskHistoryStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_GetLogAppenderInfo_allowed()
 *	Description : Execution allowed for GetLogAppenderInfo attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_GetLogAppenderInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetLogAppenderInfo command.
	/*----- PROTECTED REGION ID(LMCDevice::GetLogAppenderInfoStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::GetLogAppenderInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCDevice::is_dummyDynCmd_allowed()
 *	Description : Execution allowed for dummyDynCmd attribute
 */
//--------------------------------------------------------
bool LMCDevice::is_dummyDynCmd_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for dummyDynCmd command.
	/*----- PROTECTED REGION ID(LMCDevice::dummyDynCmdStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCDevice::dummyDynCmdStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LMCDevice::LMCDeviceStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LMCDevice::LMCDeviceStateAllowed.AdditionalMethods

}	//	End of namespace
