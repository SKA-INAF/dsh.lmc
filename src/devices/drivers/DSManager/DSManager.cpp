/*----- PROTECTED REGION ID(DSManager.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        DSManager.cpp
//
// description : C++ source for the DSManager class and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               DSManager are implemented in this file.
//
// project :     DSManager
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <DSManager.h>
#include <DSManagerClass.h>

/*----- PROTECTED REGION END -----*/	//	DSManager.cpp

/**
 *  DSManager class description:
 *    DSManager
 */

//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name                |  Method name
//================================================================
//  State                       |  Inherited (no method)
//  Status                      |  Inherited (no method)
//  InitializeLoggers           |  Inherited (no method)
//  InitializeFwdAttrs          |  Inherited (no method)
//  RandomizeDynAttrs           |  Inherited (no method)
//  InitializeDevProxies        |  Inherited (no method)
//  GetRegisteredProxies        |  Inherited (no method)
//  GetRegisteredEvents         |  Inherited (no method)
//  InitializeAttrFormulas      |  Inherited (no method)
//  GetRegisteredFormulas       |  Inherited (no method)
//  GetInitializedFormulas      |  Inherited (no method)
//  GetNRunningTasks            |  Inherited (no method)
//  GetNQueuedTasks             |  Inherited (no method)
//  GetNIdleTasks               |  Inherited (no method)
//  GetNTasks                   |  Inherited (no method)
//  GetNFailedTasks             |  Inherited (no method)
//  GetNTotFailedTasks          |  Inherited (no method)
//  IsTaskQuotaReached          |  Inherited (no method)
//  FlushTaskQueue              |  Inherited (no method)
//  GetQueuedTaskInfo           |  Inherited (no method)
//  GetTaskInfo                 |  Inherited (no method)
//  ClearTasks                  |  Inherited (no method)
//  InitializeFormulas          |  Inherited (no method)
//  GetRegisteredAttrFormulas   |  Inherited (no method)
//  GetInitializedAttrFormulas  |  Inherited (no method)
//  UpdateStatusAttrs           |  Inherited (no method)
//  MonitorProxies              |  Inherited (no method)
//  UpdateFormulaAttrs          |  Inherited (no method)
//  RevokeTask                  |  Inherited (no method)
//  GetFormulaData              |  Inherited (no method)
//  SendTestLogMsg              |  Inherited (no method)
//  MonitorTasks                |  Inherited (no method)
//  SetPointingControl          |  set_pointing_control
//  SetIndexerPosition          |  set_indexer_position
//  SetSubElementMode           |  set_sub_element_mode
//  Prova_attr                  |  prova_attr
//  GetStatusMessage            |  get_status_message
//  EngModeCommand              |  eng_mode_command
//  EngParameterCommand         |  eng_parameter_command
//  SetStowMode                 |  set_stow_mode
//  Unstow                      |  unstow
//  SetStandbyLPMode            |  set_standby_lpmode
//  EngCommand                  |  eng_command
//  RevokeTaskSequence          |  Inherited (no method)
//  ClearTaskHistory            |  Inherited (no method)
//  GetLogAppenderInfo          |  Inherited (no method)
//================================================================

//================================================================
//  Attributes managed are:
//================================================================
//  loggingLevelCentral                  |  Tango::DevLong	Scalar
//  loggingLevelElement                  |  Tango::DevLong	Scalar
//  loggingLevelStorage                  |  Tango::DevLong	Scalar
//  loggingLevelConsole                  |  Tango::DevLong	Scalar
//  buildState                           |  Tango::DevString	Scalar
//  centralLoggerStatus                  |  Tango::DevEnum	Scalar
//  elementLoggerStatus                  |  Tango::DevEnum	Scalar
//  storageLoggerStatus                  |  Tango::DevEnum	Scalar
//  eventRate                            |  Tango::DevFloat	Scalar
//  exceptionRate                        |  Tango::DevFloat	Scalar
//  fwdAttrInitStatus                    |  Tango::DevEnum	Scalar
//  centralLoggerEnabled                 |  Tango::DevBoolean	Scalar
//  elementLoggerEnabled                 |  Tango::DevBoolean	Scalar
//  storageLoggerEnabled                 |  Tango::DevBoolean	Scalar
//  loggingTargetCentral                 |  Tango::DevString	Scalar
//  loggingTargetElement                 |  Tango::DevString	Scalar
//  loggingTargetStorage                 |  Tango::DevString	Scalar
//  ds_mode                              |  Tango::DevShort	Scalar
//  ds_pointState                        |  Tango::DevShort	Scalar
//  ds_powerState                        |  Tango::DevShort	Scalar
//  ds_controlState                      |  Tango::DevShort	Scalar
//  testMode                             |  Tango::DevBoolean	Scalar
//  powerCut                             |  Tango::DevBoolean	Scalar
//  powerRestored                        |  Tango::DevBoolean	Scalar
//  message_length                       |  Tango::DevULong	Scalar
//  version                              |  Tango::DevUShort	Scalar
//  diagnosis_signal                     |  Tango::DevDouble	Scalar
//  ps_P0_MainSwitch_Off                 |  Tango::DevBoolean	Scalar
//  ps_P0_UPS_MainSwitch_Off             |  Tango::DevBoolean	Scalar
//  ps_P0_OVP_fault                      |  Tango::DevBoolean	Scalar
//  ps_P1_UPS_PhaseGuard_fault           |  Tango::DevBoolean	Scalar
//  ps_P1_MainSwitch_Off                 |  Tango::DevBoolean	Scalar
//  ps_P1_InfraPhaseGuard_fault          |  Tango::DevBoolean	Scalar
//  ps_P1_CntrlPowerA_fault              |  Tango::DevBoolean	Scalar
//  ps_P1_CntrlPowerB_fault              |  Tango::DevBoolean	Scalar
//  ps_P1_CntrlPowerC_fault              |  Tango::DevBoolean	Scalar
//  ps_P1_CntrlPowerD_fault              |  Tango::DevBoolean	Scalar
//  ps_P1_PowMeasureTerminal_fault       |  Tango::DevBoolean	Scalar
//  ps_P1_OvervoltageProt_fault          |  Tango::DevBoolean	Scalar
//  ps_P2_MainPow_I_PhaseGuard_fault     |  Tango::DevBoolean	Scalar
//  ps_P2_MainPow_II_PhaseGuard_fault    |  Tango::DevBoolean	Scalar
//  ps_P2_UPSPow_I_PhaseGuard_fault      |  Tango::DevBoolean	Scalar
//  ps_P2_UPSPow_II_PhaseGuard_fault     |  Tango::DevBoolean	Scalar
//  ps_P2_CntrlPowerA_fault              |  Tango::DevBoolean	Scalar
//  ps_P2_CntrlPowerB_fault              |  Tango::DevBoolean	Scalar
//  ps_P2_OvervoltageProt_fault          |  Tango::DevBoolean	Scalar
//  ps_servoPowD1_fault                  |  Tango::DevBoolean	Scalar
//  ps_servoPowD2_fault                  |  Tango::DevBoolean	Scalar
//  ps_ACUPow_fault                      |  Tango::DevBoolean	Scalar
//  ps_error_active                      |  Tango::DevBoolean	Scalar
//  so_sysSim                            |  Tango::DevBoolean	Scalar
//  so_eStop                             |  Tango::DevBoolean	Scalar
//  so_swIntLock                         |  Tango::DevBoolean	Scalar
//  so_Power_Up                          |  Tango::DevBoolean	Scalar
//  so_sysWarn                           |  Tango::DevBoolean	Scalar
//  so_keyOverrideActive                 |  Tango::DevBoolean	Scalar
//  so_intLockAckActive                  |  Tango::DevBoolean	Scalar
//  so_esOverride                        |  Tango::DevBoolean	Scalar
//  so_service                           |  Tango::DevBoolean	Scalar
//  so_sysOn                             |  Tango::DevBoolean	Scalar
//  so_HHPon                             |  Tango::DevBoolean	Scalar
//  so_LCPon                             |  Tango::DevBoolean	Scalar
//  so_PCUon                             |  Tango::DevBoolean	Scalar
//  so_remote                            |  Tango::DevBoolean	Scalar
//  so_initOk                            |  Tango::DevBoolean	Scalar
//  so_confOk                            |  Tango::DevBoolean	Scalar
//  so_driveActive                       |  Tango::DevBoolean	Scalar
//  so_masterCntrl                       |  Tango::DevBoolean	Scalar
//  so_ACUon                             |  Tango::DevBoolean	Scalar
//  so_HCUon                             |  Tango::DevBoolean	Scalar
//  so_SCPon                             |  Tango::DevBoolean	Scalar
//  so_PCPon                             |  Tango::DevBoolean	Scalar
//  so_servoD1_notSel                    |  Tango::DevBoolean	Scalar
//  so_servoD2_notSel                    |  Tango::DevBoolean	Scalar
//  so_servoD1_on                        |  Tango::DevBoolean	Scalar
//  so_servoD2_on                        |  Tango::DevBoolean	Scalar
//  so_servoD1_Ok                        |  Tango::DevBoolean	Scalar
//  so_servoD2_Ok                        |  Tango::DevBoolean	Scalar
//  so_servoD1_Err                       |  Tango::DevBoolean	Scalar
//  so_servoD2_Err                       |  Tango::DevBoolean	Scalar
//  so_local                             |  Tango::DevBoolean	Scalar
//  sw_E2_smokeDetection                 |  Tango::DevBoolean	Scalar
//  sw_E3_smokeDetection                 |  Tango::DevBoolean	Scalar
//  sw_humidity_Base                     |  Tango::DevBoolean	Scalar
//  sw_humidity_AZC                      |  Tango::DevBoolean	Scalar
//  sw_humidity_P2                       |  Tango::DevBoolean	Scalar
//  sw_Temp_AZC                          |  Tango::DevBoolean	Scalar
//  sw_Temp_AEC                          |  Tango::DevBoolean	Scalar
//  sw_Temp_D1                           |  Tango::DevBoolean	Scalar
//  sw_Temp_AB_ground                    |  Tango::DevBoolean	Scalar
//  sw_Temp_M1                           |  Tango::DevBoolean	Scalar
//  sw_Temp_AB_first                     |  Tango::DevBoolean	Scalar
//  sw_Temp_outside                      |  Tango::DevBoolean	Scalar
//  sw_P1_cntrlPower                     |  Tango::DevBoolean	Scalar
//  sw_P2_cntrlPower                     |  Tango::DevBoolean	Scalar
//  sw_fieldBusErr_HCU                   |  Tango::DevBoolean	Scalar
//  sw_P2_OverVolFault                   |  Tango::DevBoolean	Scalar
//  sw_P1_OverVolFault                   |  Tango::DevBoolean	Scalar
//  sw_Invar_Fault                       |  Tango::DevBoolean	Scalar
//  sw_Temp_ELC                          |  Tango::DevBoolean	Scalar
//  sw_Temp_HXP                          |  Tango::DevBoolean	Scalar
//  sw_Hum_ELC                           |  Tango::DevBoolean	Scalar
//  sw_Hum_HXP                           |  Tango::DevBoolean	Scalar
//  sw_Temp_AZ_Bearing                   |  Tango::DevBoolean	Scalar
//  sw_commErrOvRide                     |  Tango::DevBoolean	Scalar
//  sw_File_Logging                      |  Tango::DevBoolean	Scalar
//  sw_Ring_Logging                      |  Tango::DevBoolean	Scalar
//  swi_overrideES                       |  Tango::DevBoolean	Scalar
//  swi_swIntLockCmd                     |  Tango::DevBoolean	Scalar
//  swi_sysOff                           |  Tango::DevBoolean	Scalar
//  swi_shutdown                         |  Tango::DevBoolean	Scalar
//  swi_mainPow                          |  Tango::DevBoolean	Scalar
//  swi_cntrlPow                         |  Tango::DevBoolean	Scalar
//  swi_safDevES                         |  Tango::DevBoolean	Scalar
//  swi_fieldbus                         |  Tango::DevBoolean	Scalar
//  swi_taskComm                         |  Tango::DevBoolean	Scalar
//  swi_startupFailed                    |  Tango::DevBoolean	Scalar
//  swi_init_az                          |  Tango::DevBoolean	Scalar
//  swi_init_el                          |  Tango::DevBoolean	Scalar
//  swi_init_track                       |  Tango::DevBoolean	Scalar
//  es_safDev_safe                       |  Tango::DevBoolean	Scalar
//  es_safDev_err                        |  Tango::DevBoolean	Scalar
//  es_eStop_TowerMainDoor               |  Tango::DevBoolean	Scalar
//  es_eStop_ControlCabinet              |  Tango::DevBoolean	Scalar
//  es_eStop_PCU_AZC                     |  Tango::DevBoolean	Scalar
//  es_door_HatchToRoof                  |  Tango::DevBoolean	Scalar
//  es_eStop_AZC                         |  Tango::DevBoolean	Scalar
//  es_door_Access_AZC_balcony_open      |  Tango::DevBoolean	Scalar
//  es_door_Access_AZC_balcony_unlocked  |  Tango::DevBoolean	Scalar
//  es_door_AZC_Access_ELC_open          |  Tango::DevBoolean	Scalar
//  es_door_AZC_Access_ELC_unlocked      |  Tango::DevBoolean	Scalar
//  es_door_Access_ELC_open              |  Tango::DevBoolean	Scalar
//  es_door_Access_ELC_unlocked          |  Tango::DevBoolean	Scalar
//  es_eStop_AEC                         |  Tango::DevBoolean	Scalar
//  es_eStop_PCU_AEC                     |  Tango::DevBoolean	Scalar
//  es_eStop_ELC                         |  Tango::DevBoolean	Scalar
//  es_GrpAz_FbErr                       |  Tango::DevBoolean	Scalar
//  es_GrpAz_comErr                      |  Tango::DevBoolean	Scalar
//  es_GrpAz_OutErr                      |  Tango::DevBoolean	Scalar
//  es_GrpAz2_FbErr                      |  Tango::DevBoolean	Scalar
//  es_GrpAz2_comErr                     |  Tango::DevBoolean	Scalar
//  es_GrpAz2_OutErr                     |  Tango::DevBoolean	Scalar
//  es_GrpEl_FbErr                       |  Tango::DevBoolean	Scalar
//  es_GrpEl_comErr                      |  Tango::DevBoolean	Scalar
//  es_GrpEl_OutErr                      |  Tango::DevBoolean	Scalar
//  es_GrpEl2_FbErr                      |  Tango::DevBoolean	Scalar
//  es_GrpEl2_comErr                     |  Tango::DevBoolean	Scalar
//  es_GrpEl2_OutErr                     |  Tango::DevBoolean	Scalar
//  es_GrpEStop_FbErr                    |  Tango::DevBoolean	Scalar
//  es_GrpEStop_comErr                   |  Tango::DevBoolean	Scalar
//  es_GrpEStop_OutErr                   |  Tango::DevBoolean	Scalar
//  es_GrpDecInput_FbErr                 |  Tango::DevBoolean	Scalar
//  es_GrpDecInput_comErr                |  Tango::DevBoolean	Scalar
//  es_GrpDecInput_OutErr                |  Tango::DevBoolean	Scalar
//  es_GrpDecOutput_FbErr                |  Tango::DevBoolean	Scalar
//  es_GrpDecOutput_comErr               |  Tango::DevBoolean	Scalar
//  es_GrpDecOutput_OutErr               |  Tango::DevBoolean	Scalar
//  es_EDM_Inkonsistent                  |  Tango::DevBoolean	Scalar
//  es_EStop_Inkonsistent                |  Tango::DevBoolean	Scalar
//  es_OpEle_Inkonsistent                |  Tango::DevBoolean	Scalar
//  es_EStop_MonErr                      |  Tango::DevBoolean	Scalar
//  es_Az_MonErr                         |  Tango::DevBoolean	Scalar
//  es_El_MonErr                         |  Tango::DevBoolean	Scalar
//  comm_E2_KF200_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E2_KF250_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E2_KF223_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E2_KF200_Terminal_wcStateErr    |  Tango::DevBoolean	Scalar
//  comm_E2_KF250_Terminal_wcStateErr    |  Tango::DevBoolean	Scalar
//  comm_E3_KF300_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E3_KF300_wcStateErr             |  Tango::DevBoolean	Scalar
//  comm_E3_KF349_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E3_KF_Terminal_wcStateErr       |  Tango::DevBoolean	Scalar
//  comm_E4_KF400_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E4_KF455_stateErr               |  Tango::DevBoolean	Scalar
//  comm_E4_KF_Terminal_wcStateErr       |  Tango::DevBoolean	Scalar
//  comm_C2_KF_Terminal_wcStateErr       |  Tango::DevBoolean	Scalar
//  comm_P1_KF20_stateErr                |  Tango::DevBoolean	Scalar
//  comm_P1_KF20_wcStateErr              |  Tango::DevBoolean	Scalar
//  comm_P1_KF20_couplerStateErr         |  Tango::DevBoolean	Scalar
//  comm_C2_KF600_stateErr               |  Tango::DevBoolean	Scalar
//  comm_JB_AZEC_KF500_stateErr          |  Tango::DevBoolean	Scalar
//  comm_JB_AZEC_Terminal_wcStateErr     |  Tango::DevBoolean	Scalar
//  comm_HxpDevState                     |  Tango::DevBoolean	Scalar
//  controlModeSts_LCP_Sts_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_LCP_Cmd_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_SCP_Sts_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_SCP_Cmd_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_PCP_Sts_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_PCP_Cmd_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_Remote_Sts_connect    |  Tango::DevBoolean	Scalar
//  controlModeSts_Remote_Cmd_connect    |  Tango::DevBoolean	Scalar
//  controlModeSts_HHP_Sts_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_HHP_Cmd_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_Pcu_Sts_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_Pcu_Cmd_connect       |  Tango::DevBoolean	Scalar
//  controlModeSts_HHP_connect_C1        |  Tango::DevBoolean	Scalar
//  controlModeSts_HHP_connect_C2        |  Tango::DevBoolean	Scalar
//  actual_time                          |  Tango::DevDouble	Scalar
//  actual_time_offset                   |  Tango::DevDouble	Scalar
//  time_source                          |  Tango::DevUShort	Scalar
//  no_PPS_signal                        |  Tango::DevUChar	Scalar
//  clock_online                         |  Tango::DevUChar	Scalar
//  clock_Ok                             |  Tango::DevUChar	Scalar
//  power_drive_cabinet_1                |  Tango::DevDouble	Scalar
//  power_drive_cabinet_2                |  Tango::DevDouble	Scalar
//  power_antenna                        |  Tango::DevDouble	Scalar
//  temperature_AEC                      |  Tango::DevFloat	Scalar
//  outdoor_temperature                  |  Tango::DevFloat	Scalar
//  temperature_D1                       |  Tango::DevFloat	Scalar
//  temperature_AB_ground_floor          |  Tango::DevFloat	Scalar
//  temperature_AB_first_floor           |  Tango::DevFloat	Scalar
//  temperature_AZC                      |  Tango::DevFloat	Scalar
//  temperature_ELC                      |  Tango::DevFloat	Scalar
//  temperature_hexapod                  |  Tango::DevFloat	Scalar
//  temperature_AZ_Bearing               |  Tango::DevFloat	Scalar
//  temperature_M1_1                     |  Tango::DevFloat	Scalar
//  temperature_M1_2                     |  Tango::DevFloat	Scalar
//  temperature_M1_3                     |  Tango::DevFloat	Scalar
//  temperature_M1_4                     |  Tango::DevFloat	Scalar
//  humidity_Hexapod                     |  Tango::DevFloat	Scalar
//  humidity_ELC                         |  Tango::DevFloat	Scalar
//  humidity_Outside                     |  Tango::DevFloat	Scalar
//  az_abs_initOk                        |  Tango::DevBoolean	Scalar
//  az_abs_sim                           |  Tango::DevBoolean	Scalar
//  az_abs_reset                         |  Tango::DevBoolean	Scalar
//  az_abs_notStop                       |  Tango::DevBoolean	Scalar
//  az_abs_bereit                        |  Tango::DevBoolean	Scalar
//  az_abs_motEin                        |  Tango::DevBoolean	Scalar
//  az_abs_praez                         |  Tango::DevBoolean	Scalar
//  az_abs_lockAT                        |  Tango::DevBoolean	Scalar
//  az_abs_override                      |  Tango::DevBoolean	Scalar
//  az_abs_posOffset                     |  Tango::DevBoolean	Scalar
//  az_abs_active                        |  Tango::DevBoolean	Scalar
//  az_abs_parkPos                       |  Tango::DevBoolean	Scalar
//  az_abs_pointCorr                     |  Tango::DevBoolean	Scalar
//  az_abs_praezOk                       |  Tango::DevBoolean	Scalar
//  az_abs_inactive                      |  Tango::DevBoolean	Scalar
//  az_abs_deactivate                    |  Tango::DevBoolean	Scalar
//  az_abs_activate                      |  Tango::DevBoolean	Scalar
//  az_abs_encReset                      |  Tango::DevBoolean	Scalar
//  az_abs_encResetDone                  |  Tango::DevBoolean	Scalar
//  az_abs_encOp                         |  Tango::DevBoolean	Scalar
//  az_abs_confOk                        |  Tango::DevBoolean	Scalar
//  az_abs_sector_B                      |  Tango::DevBoolean	Scalar
//  az_abs_sector_A                      |  Tango::DevBoolean	Scalar
//  az_stow_posOk                        |  Tango::DevBoolean	Scalar
//  az_stow_preUp                        |  Tango::DevBoolean	Scalar
//  az_stow_preDn                        |  Tango::DevBoolean	Scalar
//  az_stow_dirDn                        |  Tango::DevBoolean	Scalar
//  az_stow_pin1_Extr                    |  Tango::DevBoolean	Scalar
//  az_stow_pin1_Retr                    |  Tango::DevBoolean	Scalar
//  az_stow_pin1_err                     |  Tango::DevBoolean	Scalar
//  az_stow_pin1_on                      |  Tango::DevBoolean	Scalar
//  az_stow_pin2_Extr                    |  Tango::DevBoolean	Scalar
//  az_stow_pin2_Retr                    |  Tango::DevBoolean	Scalar
//  az_stow_pin2_err                     |  Tango::DevBoolean	Scalar
//  az_stow_pin2_on                      |  Tango::DevBoolean	Scalar
//  az_stow_cmd1_Extr                    |  Tango::DevBoolean	Scalar
//  az_stow_cmd1_Retr                    |  Tango::DevBoolean	Scalar
//  az_stow_cmd2_Extr                    |  Tango::DevBoolean	Scalar
//  az_stow_cmd2_Retr                    |  Tango::DevBoolean	Scalar
//  az_err_Error_Active                  |  Tango::DevBoolean	Scalar
//  az_err_Rate_Loop                     |  Tango::DevBoolean	Scalar
//  az_err_Group                         |  Tango::DevBoolean	Scalar
//  az_err_Override                      |  Tango::DevBoolean	Scalar
//  az_err_Safety_Dev                    |  Tango::DevBoolean	Scalar
//  az_err_Extern                        |  Tango::DevBoolean	Scalar
//  az_err_Power                         |  Tango::DevBoolean	Scalar
//  az_err_Brake                         |  Tango::DevBoolean	Scalar
//  az_err_Mot_ready                     |  Tango::DevBoolean	Scalar
//  az_err_Motor                         |  Tango::DevBoolean	Scalar
//  az_err_Mot_Tacho                     |  Tango::DevBoolean	Scalar
//  az_err_Mot_Comm                      |  Tango::DevBoolean	Scalar
//  az_err_Mot_Timeout                   |  Tango::DevBoolean	Scalar
//  az_err_v_Mot_Exceed                  |  Tango::DevBoolean	Scalar
//  az_err_v_Dev_Exceed                  |  Tango::DevBoolean	Scalar
//  az_err_Mot_Overload                  |  Tango::DevBoolean	Scalar
//  az_err_Em_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  az_err_Em_Limit_Up                   |  Tango::DevBoolean	Scalar
//  az_err_Em_Stop                       |  Tango::DevBoolean	Scalar
//  az_err_SW_InterLock                  |  Tango::DevBoolean	Scalar
//  az_err_p_Range_Exceed                |  Tango::DevBoolean	Scalar
//  az_err_p_Dev_Exceed                  |  Tango::DevBoolean	Scalar
//  az_err_No_Pos_Enc_Sync               |  Tango::DevBoolean	Scalar
//  az_err_Pos_Enc_Sync                  |  Tango::DevBoolean	Scalar
//  az_err_Pos_Enc                       |  Tango::DevBoolean	Scalar
//  az_err_Pos_Enc_Step                  |  Tango::DevBoolean	Scalar
//  az_err_Stow                          |  Tango::DevBoolean	Scalar
//  az_err_Stow_Timeout                  |  Tango::DevBoolean	Scalar
//  az_err_Handcrank                     |  Tango::DevBoolean	Scalar
//  az_err_Cmd_Timeout                   |  Tango::DevBoolean	Scalar
//  az_err_Field_Bus                     |  Tango::DevBoolean	Scalar
//  az_err_Lim_Err                       |  Tango::DevBoolean	Scalar
//  az_wa_Param_Fault                    |  Tango::DevBoolean	Scalar
//  az_wa_Rate_Mode                      |  Tango::DevBoolean	Scalar
//  az_wa_Degraded_Mode                  |  Tango::DevBoolean	Scalar
//  az_wa_Override                       |  Tango::DevBoolean	Scalar
//  az_wa_Heat_Up_Motors                 |  Tango::DevBoolean	Scalar
//  az_wa_extern_Stop                    |  Tango::DevBoolean	Scalar
//  az_wa_LubricationFault               |  Tango::DevBoolean	Scalar
//  az_wa_Brake_openInaktiv              |  Tango::DevBoolean	Scalar
//  az_wa_Mot_ready                      |  Tango::DevBoolean	Scalar
//  az_wa_MotFanFault                    |  Tango::DevBoolean	Scalar
//  az_wa_MotWarn                        |  Tango::DevBoolean	Scalar
//  az_wa_Mmax_reached                   |  Tango::DevBoolean	Scalar
//  az_wa_PreLimDn_inconsist             |  Tango::DevBoolean	Scalar
//  az_wa_PreLimUp_inconsist             |  Tango::DevBoolean	Scalar
//  az_wa_FinLimDn_inconsist             |  Tango::DevBoolean	Scalar
//  az_wa_FinLimUp_inconsist             |  Tango::DevBoolean	Scalar
//  az_wa_Pre_Limit_Up                   |  Tango::DevBoolean	Scalar
//  az_wa_Pre_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  az_wa_Fin_Limit_Up                   |  Tango::DevBoolean	Scalar
//  az_wa_Fin_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  az_wa_Pre_Pre_Limit_Up               |  Tango::DevBoolean	Scalar
//  az_wa_Pre_Pre_Limit_Dn               |  Tango::DevBoolean	Scalar
//  az_wa_EmLimitDn_inconsist            |  Tango::DevBoolean	Scalar
//  az_wa_EmLimitUP_inconsist            |  Tango::DevBoolean	Scalar
//  az_wa_Pos_Safe_Enc_Warn              |  Tango::DevBoolean	Scalar
//  az_wa_Pos_Enc_Warn                   |  Tango::DevBoolean	Scalar
//  az_wa_Stow_Pin_Fault                 |  Tango::DevBoolean	Scalar
//  az_wa_Stowpins_Extr                  |  Tango::DevBoolean	Scalar
//  az_wa_lowPowerMode                   |  Tango::DevBoolean	Scalar
//  az_wa_Motor_Overload                 |  Tango::DevBoolean	Scalar
//  az_wa_Motor_Temp                     |  Tango::DevBoolean	Scalar
//  az_wa_Vel_Limit                      |  Tango::DevBoolean	Scalar
//  az_disc_initok                       |  Tango::DevBoolean	Scalar
//  az_disc_Ok                           |  Tango::DevBoolean	Scalar
//  az_disc_commErr                      |  Tango::DevBoolean	Scalar
//  az_disc_overflow                     |  Tango::DevBoolean	Scalar
//  az_disc_warning                      |  Tango::DevBoolean	Scalar
//  az_disc_operational                  |  Tango::DevBoolean	Scalar
//  az_disc_error                        |  Tango::DevBoolean	Scalar
//  az_axis_state                        |  Tango::DevUShort	Scalar
//  az_axis_actual_mode                  |  Tango::DevUShort	Scalar
//  az_axis_trajectory_state             |  Tango::DevUShort	Scalar
//  az_p_Soll                            |  Tango::DevDouble	Scalar
//  az_p_Bahn                            |  Tango::DevDouble	Scalar
//  az_p_Ist                             |  Tango::DevDouble	Scalar
//  az_p_Offs                            |  Tango::DevDouble	Scalar
//  az_p_Abw                             |  Tango::DevDouble	Scalar
//  az_p_AbwFil                          |  Tango::DevDouble	Scalar
//  az_p_pointCorr                       |  Tango::DevDouble	Scalar
//  az_v_Bahn                            |  Tango::DevDouble	Scalar
//  az_v_Soll                            |  Tango::DevDouble	Scalar
//  az_v_Ist                             |  Tango::DevDouble	Scalar
//  az_a_Bahn                            |  Tango::DevDouble	Scalar
//  az_motor_selection_1                 |  Tango::DevBoolean	Scalar
//  az_motor_selection_2                 |  Tango::DevBoolean	Scalar
//  az_brakes_selection_1                |  Tango::DevBoolean	Scalar
//  az_brakes_selection_2                |  Tango::DevBoolean	Scalar
//  az_brakes_open_1                     |  Tango::DevBoolean	Scalar
//  az_brakes_open_2                     |  Tango::DevBoolean	Scalar
//  az_brakes_command_1                  |  Tango::DevBoolean	Scalar
//  az_brakes_command_2                  |  Tango::DevBoolean	Scalar
//  el_abs_initOk                        |  Tango::DevBoolean	Scalar
//  el_abs_sim                           |  Tango::DevBoolean	Scalar
//  el_abs_reset                         |  Tango::DevBoolean	Scalar
//  el_abs_notStop                       |  Tango::DevBoolean	Scalar
//  el_abs_bereit                        |  Tango::DevBoolean	Scalar
//  el_abs_motEin                        |  Tango::DevBoolean	Scalar
//  el_abs_praez                         |  Tango::DevBoolean	Scalar
//  el_abs_lockAT                        |  Tango::DevBoolean	Scalar
//  el_abs_override                      |  Tango::DevBoolean	Scalar
//  el_abs_posOffset                     |  Tango::DevBoolean	Scalar
//  el_abs_active                        |  Tango::DevBoolean	Scalar
//  el_abs_parkPos                       |  Tango::DevBoolean	Scalar
//  el_abs_pointCorr                     |  Tango::DevBoolean	Scalar
//  el_abs_praezOk                       |  Tango::DevBoolean	Scalar
//  el_abs_inactive                      |  Tango::DevBoolean	Scalar
//  el_abs_deactivate                    |  Tango::DevBoolean	Scalar
//  el_abs_activate                      |  Tango::DevBoolean	Scalar
//  el_abs_encReset                      |  Tango::DevBoolean	Scalar
//  el_abs_encResetDone                  |  Tango::DevBoolean	Scalar
//  el_abs_encOp                         |  Tango::DevBoolean	Scalar
//  el_abs_confOk                        |  Tango::DevBoolean	Scalar
//  el_abs_sector_B                      |  Tango::DevBoolean	Scalar
//  el_abs_sector_A                      |  Tango::DevBoolean	Scalar
//  el_stow_posOk                        |  Tango::DevBoolean	Scalar
//  el_stow_preUp                        |  Tango::DevBoolean	Scalar
//  el_stow_preDn                        |  Tango::DevBoolean	Scalar
//  el_stow_dirDn                        |  Tango::DevBoolean	Scalar
//  el_stow_pin1_Extr                    |  Tango::DevBoolean	Scalar
//  el_stow_pin1_Retr                    |  Tango::DevBoolean	Scalar
//  el_stow_pin1_err                     |  Tango::DevBoolean	Scalar
//  el_stow_pin1_on                      |  Tango::DevBoolean	Scalar
//  el_stow_pin2_Extr                    |  Tango::DevBoolean	Scalar
//  el_stow_pin2_Retr                    |  Tango::DevBoolean	Scalar
//  el_stow_pin2_err                     |  Tango::DevBoolean	Scalar
//  el_stow_pin2_on                      |  Tango::DevBoolean	Scalar
//  el_stow_cmd1_Extr                    |  Tango::DevBoolean	Scalar
//  el_stow_cmd1_Retr                    |  Tango::DevBoolean	Scalar
//  el_stow_cmd2_Extr                    |  Tango::DevBoolean	Scalar
//  el_stow_cmd2_Retr                    |  Tango::DevBoolean	Scalar
//  el_err_Error_Active                  |  Tango::DevBoolean	Scalar
//  el_err_Rate_Loop                     |  Tango::DevBoolean	Scalar
//  el_err_Group                         |  Tango::DevBoolean	Scalar
//  el_err_Override                      |  Tango::DevBoolean	Scalar
//  el_err_Safety_Dev                    |  Tango::DevBoolean	Scalar
//  el_err_Extern                        |  Tango::DevBoolean	Scalar
//  el_err_Power                         |  Tango::DevBoolean	Scalar
//  el_err_Brake                         |  Tango::DevBoolean	Scalar
//  el_err_Mot_ready                     |  Tango::DevBoolean	Scalar
//  el_err_Motor                         |  Tango::DevBoolean	Scalar
//  el_err_Mot_Tacho                     |  Tango::DevBoolean	Scalar
//  el_err_Mot_Comm                      |  Tango::DevBoolean	Scalar
//  el_err_Mot_Timeout                   |  Tango::DevBoolean	Scalar
//  el_err_v_Mot_Exceed                  |  Tango::DevBoolean	Scalar
//  el_err_v_Dev_Exceed                  |  Tango::DevBoolean	Scalar
//  el_err_Mot_Overload                  |  Tango::DevBoolean	Scalar
//  el_err_Em_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  el_err_Em_Limit_Up                   |  Tango::DevBoolean	Scalar
//  el_err_Em_Stop                       |  Tango::DevBoolean	Scalar
//  el_err_SW_InterLock                  |  Tango::DevBoolean	Scalar
//  el_err_p_Range_Exceed                |  Tango::DevBoolean	Scalar
//  el_err_p_Dev_Exceed                  |  Tango::DevBoolean	Scalar
//  el_err_No_Pos_Enc_Sync               |  Tango::DevBoolean	Scalar
//  el_err_Pos_Enc_Sync                  |  Tango::DevBoolean	Scalar
//  el_err_Pos_Enc                       |  Tango::DevBoolean	Scalar
//  el_err_Pos_Enc_Step                  |  Tango::DevBoolean	Scalar
//  el_err_Stow                          |  Tango::DevBoolean	Scalar
//  el_err_Stow_Timeout                  |  Tango::DevBoolean	Scalar
//  el_err_Handcrank                     |  Tango::DevBoolean	Scalar
//  el_err_Cmd_Timeout                   |  Tango::DevBoolean	Scalar
//  el_err_Field_Bus                     |  Tango::DevBoolean	Scalar
//  el_err_Lim_Err                       |  Tango::DevBoolean	Scalar
//  el_wa_Param_Fault                    |  Tango::DevBoolean	Scalar
//  el_wa_Rate_Mode                      |  Tango::DevBoolean	Scalar
//  el_wa_Degraded_Mode                  |  Tango::DevBoolean	Scalar
//  el_wa_Override                       |  Tango::DevBoolean	Scalar
//  el_wa_Heat_Up_Motors                 |  Tango::DevBoolean	Scalar
//  el_wa_extern_Stop                    |  Tango::DevBoolean	Scalar
//  el_wa_LubricationFault               |  Tango::DevBoolean	Scalar
//  el_wa_Brake_openInaktiv              |  Tango::DevBoolean	Scalar
//  el_wa_Mot_ready                      |  Tango::DevBoolean	Scalar
//  el_wa_MotFanFault                    |  Tango::DevBoolean	Scalar
//  el_wa_MotWarn                        |  Tango::DevBoolean	Scalar
//  el_wa_Mmax_reached                   |  Tango::DevBoolean	Scalar
//  el_wa_PreLimDn_inconsist             |  Tango::DevBoolean	Scalar
//  el_wa_PreLimUp_inconsist             |  Tango::DevBoolean	Scalar
//  el_wa_FinLimDn_inconsist             |  Tango::DevBoolean	Scalar
//  el_wa_FinLimUp_inconsist             |  Tango::DevBoolean	Scalar
//  el_wa_Pre_Limit_Up                   |  Tango::DevBoolean	Scalar
//  el_wa_Pre_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  el_wa_Fin_Limit_Up                   |  Tango::DevBoolean	Scalar
//  el_wa_Fin_Limit_Dn                   |  Tango::DevBoolean	Scalar
//  el_wa_Pre_Pre_Limit_Up               |  Tango::DevBoolean	Scalar
//  el_wa_Pre_Pre_Limit_Dn               |  Tango::DevBoolean	Scalar
//  el_wa_EmLimitDn_inconsist            |  Tango::DevBoolean	Scalar
//  el_wa_EmLimitUP_inconsist            |  Tango::DevBoolean	Scalar
//  el_wa_Pos_Safe_Enc_Warn              |  Tango::DevBoolean	Scalar
//  el_wa_Pos_Enc_Warn                   |  Tango::DevBoolean	Scalar
//  el_wa_Stow_Pin_Fault                 |  Tango::DevBoolean	Scalar
//  el_wa_Stowpins_Extr                  |  Tango::DevBoolean	Scalar
//  el_wa_lowPowerMode                   |  Tango::DevBoolean	Scalar
//  el_wa_Motor_Overload                 |  Tango::DevBoolean	Scalar
//  el_wa_Motor_Temp                     |  Tango::DevBoolean	Scalar
//  el_wa_Vel_Limit                      |  Tango::DevBoolean	Scalar
//  el_disc_initok                       |  Tango::DevBoolean	Scalar
//  el_disc_Ok                           |  Tango::DevBoolean	Scalar
//  el_disc_commErr                      |  Tango::DevBoolean	Scalar
//  el_disc_overflow                     |  Tango::DevBoolean	Scalar
//  el_disc_warning                      |  Tango::DevBoolean	Scalar
//  el_disc_operational                  |  Tango::DevBoolean	Scalar
//  el_disc_error                        |  Tango::DevBoolean	Scalar
//  el_axis_state                        |  Tango::DevUShort	Scalar
//  el_axis_actual_mode                  |  Tango::DevUShort	Scalar
//  el_axis_trajectory_state             |  Tango::DevUShort	Scalar
//  el_p_Soll                            |  Tango::DevDouble	Scalar
//  el_p_Bahn                            |  Tango::DevDouble	Scalar
//  el_p_Ist                             |  Tango::DevDouble	Scalar
//  el_p_Offs                            |  Tango::DevDouble	Scalar
//  el_p_Abw                             |  Tango::DevDouble	Scalar
//  el_p_AbwFil                          |  Tango::DevDouble	Scalar
//  el_p_pointCorr                       |  Tango::DevDouble	Scalar
//  el_v_Bahn                            |  Tango::DevDouble	Scalar
//  el_v_Soll                            |  Tango::DevDouble	Scalar
//  el_v_Ist                             |  Tango::DevDouble	Scalar
//  el_a_Bahn                            |  Tango::DevDouble	Scalar
//  el_motor_selection_1                 |  Tango::DevBoolean	Scalar
//  el_motor_selection_2                 |  Tango::DevBoolean	Scalar
//  el_brakes_selection_1                |  Tango::DevBoolean	Scalar
//  el_brakes_selection_2                |  Tango::DevBoolean	Scalar
//  el_brakes_open_1                     |  Tango::DevBoolean	Scalar
//  el_brakes_open_2                     |  Tango::DevBoolean	Scalar
//  el_brakes_command_1                  |  Tango::DevBoolean	Scalar
//  el_brakes_command_2                  |  Tango::DevBoolean	Scalar
//  az1_mbs_initOk                       |  Tango::DevBoolean	Scalar
//  az1_mbs_bereit                       |  Tango::DevBoolean	Scalar
//  az1_mbs_aktiv                        |  Tango::DevBoolean	Scalar
//  az1_mbs_drzNull                      |  Tango::DevBoolean	Scalar
//  az1_mbs_drzOk                        |  Tango::DevBoolean	Scalar
//  az1_mbs_posOk                        |  Tango::DevBoolean	Scalar
//  az1_mbs_brOffen                      |  Tango::DevBoolean	Scalar
//  az1_mbs_errBus                       |  Tango::DevBoolean	Scalar
//  az1_mbs_errServo                     |  Tango::DevBoolean	Scalar
//  az1_mbs_errSensor                    |  Tango::DevBoolean	Scalar
//  az1_mbs_warn                         |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_iQuad_t                 |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_Ampl                  |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_Mot                   |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_Uzk                     |  Tango::DevBoolean	Scalar
//  az1_mbs_v_exceed                     |  Tango::DevBoolean	Scalar
//  az1_mbs_M_exceed                     |  Tango::DevBoolean	Scalar
//  az1_mbs_aktiv_intern                 |  Tango::DevBoolean	Scalar
//  az1_mbs_err_sts_RF                   |  Tango::DevBoolean	Scalar
//  az1_mbs_err_sts_EF                   |  Tango::DevBoolean	Scalar
//  az1_mbs_err_sts_SBM                  |  Tango::DevBoolean	Scalar
//  az1_mbs_M_mode                       |  Tango::DevBoolean	Scalar
//  az1_mbs_wrongMode                    |  Tango::DevBoolean	Scalar
//  az1_mbs_Pow_exceeded                 |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_Cooling               |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_Extern                |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_PowerSupply           |  Tango::DevBoolean	Scalar
//  az1_mbs_warn_T_ERModule              |  Tango::DevBoolean	Scalar
//  az1_mbs_err_temp                     |  Tango::DevBoolean	Scalar
//  az1_mbs_err_iQuad_t                  |  Tango::DevBoolean	Scalar
//  az1_mbs_err_sts_M                    |  Tango::DevBoolean	Scalar
//  az1_mbs_V_Mode                       |  Tango::DevBoolean	Scalar
//  az1_actual_position                  |  Tango::DevDouble	Scalar
//  az1_actual_velocity                  |  Tango::DevDouble	Scalar
//  az1_actual_torque                    |  Tango::DevDouble	Scalar
//  az1_rate_of_utilization              |  Tango::DevDouble	Scalar
//  az1_Motor_temperature                |  Tango::DevDouble	Scalar
//  az1_Motor_Overload_Inverter          |  Tango::DevDouble	Scalar
//  az1_Motor_overload                   |  Tango::DevDouble	Scalar
//  az1_motErrorCode                     |  Tango::DevUShort	Scalar
//  az1_EmLimDn                          |  Tango::DevUShort	Scalar
//  az1_EmLimUp                          |  Tango::DevUShort	Scalar
//  provaENUM                            |  Tango::DevEnum	Scalar
//  azAxisStatus                         |  Tango::DevString	Scalar
//  azAxisTrajectoryStatus               |  Tango::DevString	Scalar
//  azAxisActualModeString               |  Tango::DevString	Scalar
//  elAxisStatus                         |  Tango::DevString	Scalar
//  elAxisTrajectoryStatus               |  Tango::DevString	Scalar
//  elAxisActualModeString               |  Tango::DevString	Scalar
//  az_actual_mode                       |  Tango::DevShort	Scalar
//  el_actual_mode                       |  Tango::DevUShort	Scalar
//  fi_actual_mode                       |  Tango::DevShort	Scalar
//  attrRandomizationEnabled             |  Tango::DevBoolean	Scalar
//  attrRandomizationPeriod              |  Tango::DevULong	Scalar
//  poly_az_coeff                        |  Tango::DevDouble	Spectrum  ( max = 3)
//  poly_el_coeff                        |  Tango::DevDouble	Spectrum  ( max = 3)
//================================================================

namespace DSManager_ns
{
/*----- PROTECTED REGION ID(DSManager::namespace_starting) ENABLED START -----*/

//	static initializations

/*----- PROTECTED REGION END -----*/	//	DSManager::namespace_starting

//--------------------------------------------------------
/**
 *	Method      : DSManager::DSManager()
 *	Description : Constructors for a Tango device
 *                implementing the classDSManager
 */
//--------------------------------------------------------
DSManager::DSManager(Tango::DeviceClass *cl, string &s)
 : LMCDevice(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(DSManager::constructor_1) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::constructor_1
}
//--------------------------------------------------------
DSManager::DSManager(Tango::DeviceClass *cl, const char *s)
 : LMCDevice(cl, s)
{
	/*----- PROTECTED REGION ID(DSManager::constructor_2) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::constructor_2
}
//--------------------------------------------------------
DSManager::DSManager(Tango::DeviceClass *cl, const char *s, const char *d)
 : LMCDevice(cl, s, d)
{
	/*----- PROTECTED REGION ID(DSManager::constructor_3) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::constructor_3
}

//--------------------------------------------------------
/**
 *	Method      : DSManager::delete_device()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void DSManager::delete_device()
{
	DEBUG_STREAM << "DSManager::delete_device() " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::delete_device) ENABLED START -----*/
	
	//	Delete device allocated objects
	
	//Close command socket
	close(sockfd);
	

	/*----- PROTECTED REGION END -----*/	//	DSManager::delete_device
	delete[] attr_ds_mode_read;
	delete[] attr_ds_pointState_read;
	delete[] attr_ds_powerState_read;
	delete[] attr_ds_controlState_read;
	delete[] attr_testMode_read;
	delete[] attr_powerCut_read;
	delete[] attr_powerRestored_read;
	delete[] attr_message_length_read;
	delete[] attr_version_read;
	delete[] attr_diagnosis_signal_read;
	delete[] attr_ps_P0_MainSwitch_Off_read;
	delete[] attr_ps_P0_UPS_MainSwitch_Off_read;
	delete[] attr_ps_P0_OVP_fault_read;
	delete[] attr_ps_P1_UPS_PhaseGuard_fault_read;
	delete[] attr_ps_P1_MainSwitch_Off_read;
	delete[] attr_ps_P1_InfraPhaseGuard_fault_read;
	delete[] attr_ps_P1_CntrlPowerA_fault_read;
	delete[] attr_ps_P1_CntrlPowerB_fault_read;
	delete[] attr_ps_P1_CntrlPowerC_fault_read;
	delete[] attr_ps_P1_CntrlPowerD_fault_read;
	delete[] attr_ps_P1_PowMeasureTerminal_fault_read;
	delete[] attr_ps_P1_OvervoltageProt_fault_read;
	delete[] attr_ps_P2_MainPow_I_PhaseGuard_fault_read;
	delete[] attr_ps_P2_MainPow_II_PhaseGuard_fault_read;
	delete[] attr_ps_P2_UPSPow_I_PhaseGuard_fault_read;
	delete[] attr_ps_P2_UPSPow_II_PhaseGuard_fault_read;
	delete[] attr_ps_P2_CntrlPowerA_fault_read;
	delete[] attr_ps_P2_CntrlPowerB_fault_read;
	delete[] attr_ps_P2_OvervoltageProt_fault_read;
	delete[] attr_ps_servoPowD1_fault_read;
	delete[] attr_ps_servoPowD2_fault_read;
	delete[] attr_ps_ACUPow_fault_read;
	delete[] attr_ps_error_active_read;
	delete[] attr_so_sysSim_read;
	delete[] attr_so_eStop_read;
	delete[] attr_so_swIntLock_read;
	delete[] attr_so_Power_Up_read;
	delete[] attr_so_sysWarn_read;
	delete[] attr_so_keyOverrideActive_read;
	delete[] attr_so_intLockAckActive_read;
	delete[] attr_so_esOverride_read;
	delete[] attr_so_service_read;
	delete[] attr_so_sysOn_read;
	delete[] attr_so_HHPon_read;
	delete[] attr_so_LCPon_read;
	delete[] attr_so_PCUon_read;
	delete[] attr_so_remote_read;
	delete[] attr_so_initOk_read;
	delete[] attr_so_confOk_read;
	delete[] attr_so_driveActive_read;
	delete[] attr_so_masterCntrl_read;
	delete[] attr_so_ACUon_read;
	delete[] attr_so_HCUon_read;
	delete[] attr_so_SCPon_read;
	delete[] attr_so_PCPon_read;
	delete[] attr_so_servoD1_notSel_read;
	delete[] attr_so_servoD2_notSel_read;
	delete[] attr_so_servoD1_on_read;
	delete[] attr_so_servoD2_on_read;
	delete[] attr_so_servoD1_Ok_read;
	delete[] attr_so_servoD2_Ok_read;
	delete[] attr_so_servoD1_Err_read;
	delete[] attr_so_servoD2_Err_read;
	delete[] attr_so_local_read;
	delete[] attr_sw_E2_smokeDetection_read;
	delete[] attr_sw_E3_smokeDetection_read;
	delete[] attr_sw_humidity_Base_read;
	delete[] attr_sw_humidity_AZC_read;
	delete[] attr_sw_humidity_P2_read;
	delete[] attr_sw_Temp_AZC_read;
	delete[] attr_sw_Temp_AEC_read;
	delete[] attr_sw_Temp_D1_read;
	delete[] attr_sw_Temp_AB_ground_read;
	delete[] attr_sw_Temp_M1_read;
	delete[] attr_sw_Temp_AB_first_read;
	delete[] attr_sw_Temp_outside_read;
	delete[] attr_sw_P1_cntrlPower_read;
	delete[] attr_sw_P2_cntrlPower_read;
	delete[] attr_sw_fieldBusErr_HCU_read;
	delete[] attr_sw_P2_OverVolFault_read;
	delete[] attr_sw_P1_OverVolFault_read;
	delete[] attr_sw_Invar_Fault_read;
	delete[] attr_sw_Temp_ELC_read;
	delete[] attr_sw_Temp_HXP_read;
	delete[] attr_sw_Hum_ELC_read;
	delete[] attr_sw_Hum_HXP_read;
	delete[] attr_sw_Temp_AZ_Bearing_read;
	delete[] attr_sw_commErrOvRide_read;
	delete[] attr_sw_File_Logging_read;
	delete[] attr_sw_Ring_Logging_read;
	delete[] attr_swi_overrideES_read;
	delete[] attr_swi_swIntLockCmd_read;
	delete[] attr_swi_sysOff_read;
	delete[] attr_swi_shutdown_read;
	delete[] attr_swi_mainPow_read;
	delete[] attr_swi_cntrlPow_read;
	delete[] attr_swi_safDevES_read;
	delete[] attr_swi_fieldbus_read;
	delete[] attr_swi_taskComm_read;
	delete[] attr_swi_startupFailed_read;
	delete[] attr_swi_init_az_read;
	delete[] attr_swi_init_el_read;
	delete[] attr_swi_init_track_read;
	delete[] attr_es_safDev_safe_read;
	delete[] attr_es_safDev_err_read;
	delete[] attr_es_eStop_TowerMainDoor_read;
	delete[] attr_es_eStop_ControlCabinet_read;
	delete[] attr_es_eStop_PCU_AZC_read;
	delete[] attr_es_door_HatchToRoof_read;
	delete[] attr_es_eStop_AZC_read;
	delete[] attr_es_door_Access_AZC_balcony_open_read;
	delete[] attr_es_door_Access_AZC_balcony_unlocked_read;
	delete[] attr_es_door_AZC_Access_ELC_open_read;
	delete[] attr_es_door_AZC_Access_ELC_unlocked_read;
	delete[] attr_es_door_Access_ELC_open_read;
	delete[] attr_es_door_Access_ELC_unlocked_read;
	delete[] attr_es_eStop_AEC_read;
	delete[] attr_es_eStop_PCU_AEC_read;
	delete[] attr_es_eStop_ELC_read;
	delete[] attr_es_GrpAz_FbErr_read;
	delete[] attr_es_GrpAz_comErr_read;
	delete[] attr_es_GrpAz_OutErr_read;
	delete[] attr_es_GrpAz2_FbErr_read;
	delete[] attr_es_GrpAz2_comErr_read;
	delete[] attr_es_GrpAz2_OutErr_read;
	delete[] attr_es_GrpEl_FbErr_read;
	delete[] attr_es_GrpEl_comErr_read;
	delete[] attr_es_GrpEl_OutErr_read;
	delete[] attr_es_GrpEl2_FbErr_read;
	delete[] attr_es_GrpEl2_comErr_read;
	delete[] attr_es_GrpEl2_OutErr_read;
	delete[] attr_es_GrpEStop_FbErr_read;
	delete[] attr_es_GrpEStop_comErr_read;
	delete[] attr_es_GrpEStop_OutErr_read;
	delete[] attr_es_GrpDecInput_FbErr_read;
	delete[] attr_es_GrpDecInput_comErr_read;
	delete[] attr_es_GrpDecInput_OutErr_read;
	delete[] attr_es_GrpDecOutput_FbErr_read;
	delete[] attr_es_GrpDecOutput_comErr_read;
	delete[] attr_es_GrpDecOutput_OutErr_read;
	delete[] attr_es_EDM_Inkonsistent_read;
	delete[] attr_es_EStop_Inkonsistent_read;
	delete[] attr_es_OpEle_Inkonsistent_read;
	delete[] attr_es_EStop_MonErr_read;
	delete[] attr_es_Az_MonErr_read;
	delete[] attr_es_El_MonErr_read;
	delete[] attr_comm_E2_KF200_stateErr_read;
	delete[] attr_comm_E2_KF250_stateErr_read;
	delete[] attr_comm_E2_KF223_stateErr_read;
	delete[] attr_comm_E2_KF200_Terminal_wcStateErr_read;
	delete[] attr_comm_E2_KF250_Terminal_wcStateErr_read;
	delete[] attr_comm_E3_KF300_stateErr_read;
	delete[] attr_comm_E3_KF300_wcStateErr_read;
	delete[] attr_comm_E3_KF349_stateErr_read;
	delete[] attr_comm_E3_KF_Terminal_wcStateErr_read;
	delete[] attr_comm_E4_KF400_stateErr_read;
	delete[] attr_comm_E4_KF455_stateErr_read;
	delete[] attr_comm_E4_KF_Terminal_wcStateErr_read;
	delete[] attr_comm_C2_KF_Terminal_wcStateErr_read;
	delete[] attr_comm_P1_KF20_stateErr_read;
	delete[] attr_comm_P1_KF20_wcStateErr_read;
	delete[] attr_comm_P1_KF20_couplerStateErr_read;
	delete[] attr_comm_C2_KF600_stateErr_read;
	delete[] attr_comm_JB_AZEC_KF500_stateErr_read;
	delete[] attr_comm_JB_AZEC_Terminal_wcStateErr_read;
	delete[] attr_comm_HxpDevState_read;
	delete[] attr_controlModeSts_LCP_Sts_connect_read;
	delete[] attr_controlModeSts_LCP_Cmd_connect_read;
	delete[] attr_controlModeSts_SCP_Sts_connect_read;
	delete[] attr_controlModeSts_SCP_Cmd_connect_read;
	delete[] attr_controlModeSts_PCP_Sts_connect_read;
	delete[] attr_controlModeSts_PCP_Cmd_connect_read;
	delete[] attr_controlModeSts_Remote_Sts_connect_read;
	delete[] attr_controlModeSts_Remote_Cmd_connect_read;
	delete[] attr_controlModeSts_HHP_Sts_connect_read;
	delete[] attr_controlModeSts_HHP_Cmd_connect_read;
	delete[] attr_controlModeSts_Pcu_Sts_connect_read;
	delete[] attr_controlModeSts_Pcu_Cmd_connect_read;
	delete[] attr_controlModeSts_HHP_connect_C1_read;
	delete[] attr_controlModeSts_HHP_connect_C2_read;
	delete[] attr_actual_time_read;
	delete[] attr_actual_time_offset_read;
	delete[] attr_time_source_read;
	delete[] attr_no_PPS_signal_read;
	delete[] attr_clock_online_read;
	delete[] attr_clock_Ok_read;
	delete[] attr_power_drive_cabinet_1_read;
	delete[] attr_power_drive_cabinet_2_read;
	delete[] attr_power_antenna_read;
	delete[] attr_temperature_AEC_read;
	delete[] attr_outdoor_temperature_read;
	delete[] attr_temperature_D1_read;
	delete[] attr_temperature_AB_ground_floor_read;
	delete[] attr_temperature_AB_first_floor_read;
	delete[] attr_temperature_AZC_read;
	delete[] attr_temperature_ELC_read;
	delete[] attr_temperature_hexapod_read;
	delete[] attr_temperature_AZ_Bearing_read;
	delete[] attr_temperature_M1_1_read;
	delete[] attr_temperature_M1_2_read;
	delete[] attr_temperature_M1_3_read;
	delete[] attr_temperature_M1_4_read;
	delete[] attr_humidity_Hexapod_read;
	delete[] attr_humidity_ELC_read;
	delete[] attr_humidity_Outside_read;
	delete[] attr_az_abs_initOk_read;
	delete[] attr_az_abs_sim_read;
	delete[] attr_az_abs_reset_read;
	delete[] attr_az_abs_notStop_read;
	delete[] attr_az_abs_bereit_read;
	delete[] attr_az_abs_motEin_read;
	delete[] attr_az_abs_praez_read;
	delete[] attr_az_abs_lockAT_read;
	delete[] attr_az_abs_override_read;
	delete[] attr_az_abs_posOffset_read;
	delete[] attr_az_abs_active_read;
	delete[] attr_az_abs_parkPos_read;
	delete[] attr_az_abs_pointCorr_read;
	delete[] attr_az_abs_praezOk_read;
	delete[] attr_az_abs_inactive_read;
	delete[] attr_az_abs_deactivate_read;
	delete[] attr_az_abs_activate_read;
	delete[] attr_az_abs_encReset_read;
	delete[] attr_az_abs_encResetDone_read;
	delete[] attr_az_abs_encOp_read;
	delete[] attr_az_abs_confOk_read;
	delete[] attr_az_abs_sector_B_read;
	delete[] attr_az_abs_sector_A_read;
	delete[] attr_az_stow_posOk_read;
	delete[] attr_az_stow_preUp_read;
	delete[] attr_az_stow_preDn_read;
	delete[] attr_az_stow_dirDn_read;
	delete[] attr_az_stow_pin1_Extr_read;
	delete[] attr_az_stow_pin1_Retr_read;
	delete[] attr_az_stow_pin1_err_read;
	delete[] attr_az_stow_pin1_on_read;
	delete[] attr_az_stow_pin2_Extr_read;
	delete[] attr_az_stow_pin2_Retr_read;
	delete[] attr_az_stow_pin2_err_read;
	delete[] attr_az_stow_pin2_on_read;
	delete[] attr_az_stow_cmd1_Extr_read;
	delete[] attr_az_stow_cmd1_Retr_read;
	delete[] attr_az_stow_cmd2_Extr_read;
	delete[] attr_az_stow_cmd2_Retr_read;
	delete[] attr_az_err_Error_Active_read;
	delete[] attr_az_err_Rate_Loop_read;
	delete[] attr_az_err_Group_read;
	delete[] attr_az_err_Override_read;
	delete[] attr_az_err_Safety_Dev_read;
	delete[] attr_az_err_Extern_read;
	delete[] attr_az_err_Power_read;
	delete[] attr_az_err_Brake_read;
	delete[] attr_az_err_Mot_ready_read;
	delete[] attr_az_err_Motor_read;
	delete[] attr_az_err_Mot_Tacho_read;
	delete[] attr_az_err_Mot_Comm_read;
	delete[] attr_az_err_Mot_Timeout_read;
	delete[] attr_az_err_v_Mot_Exceed_read;
	delete[] attr_az_err_v_Dev_Exceed_read;
	delete[] attr_az_err_Mot_Overload_read;
	delete[] attr_az_err_Em_Limit_Dn_read;
	delete[] attr_az_err_Em_Limit_Up_read;
	delete[] attr_az_err_Em_Stop_read;
	delete[] attr_az_err_SW_InterLock_read;
	delete[] attr_az_err_p_Range_Exceed_read;
	delete[] attr_az_err_p_Dev_Exceed_read;
	delete[] attr_az_err_No_Pos_Enc_Sync_read;
	delete[] attr_az_err_Pos_Enc_Sync_read;
	delete[] attr_az_err_Pos_Enc_read;
	delete[] attr_az_err_Pos_Enc_Step_read;
	delete[] attr_az_err_Stow_read;
	delete[] attr_az_err_Stow_Timeout_read;
	delete[] attr_az_err_Handcrank_read;
	delete[] attr_az_err_Cmd_Timeout_read;
	delete[] attr_az_err_Field_Bus_read;
	delete[] attr_az_err_Lim_Err_read;
	delete[] attr_az_wa_Param_Fault_read;
	delete[] attr_az_wa_Rate_Mode_read;
	delete[] attr_az_wa_Degraded_Mode_read;
	delete[] attr_az_wa_Override_read;
	delete[] attr_az_wa_Heat_Up_Motors_read;
	delete[] attr_az_wa_extern_Stop_read;
	delete[] attr_az_wa_LubricationFault_read;
	delete[] attr_az_wa_Brake_openInaktiv_read;
	delete[] attr_az_wa_Mot_ready_read;
	delete[] attr_az_wa_MotFanFault_read;
	delete[] attr_az_wa_MotWarn_read;
	delete[] attr_az_wa_Mmax_reached_read;
	delete[] attr_az_wa_PreLimDn_inconsist_read;
	delete[] attr_az_wa_PreLimUp_inconsist_read;
	delete[] attr_az_wa_FinLimDn_inconsist_read;
	delete[] attr_az_wa_FinLimUp_inconsist_read;
	delete[] attr_az_wa_Pre_Limit_Up_read;
	delete[] attr_az_wa_Pre_Limit_Dn_read;
	delete[] attr_az_wa_Fin_Limit_Up_read;
	delete[] attr_az_wa_Fin_Limit_Dn_read;
	delete[] attr_az_wa_Pre_Pre_Limit_Up_read;
	delete[] attr_az_wa_Pre_Pre_Limit_Dn_read;
	delete[] attr_az_wa_EmLimitDn_inconsist_read;
	delete[] attr_az_wa_EmLimitUP_inconsist_read;
	delete[] attr_az_wa_Pos_Safe_Enc_Warn_read;
	delete[] attr_az_wa_Pos_Enc_Warn_read;
	delete[] attr_az_wa_Stow_Pin_Fault_read;
	delete[] attr_az_wa_Stowpins_Extr_read;
	delete[] attr_az_wa_lowPowerMode_read;
	delete[] attr_az_wa_Motor_Overload_read;
	delete[] attr_az_wa_Motor_Temp_read;
	delete[] attr_az_wa_Vel_Limit_read;
	delete[] attr_az_disc_initok_read;
	delete[] attr_az_disc_Ok_read;
	delete[] attr_az_disc_commErr_read;
	delete[] attr_az_disc_overflow_read;
	delete[] attr_az_disc_warning_read;
	delete[] attr_az_disc_operational_read;
	delete[] attr_az_disc_error_read;
	delete[] attr_az_axis_state_read;
	delete[] attr_az_axis_actual_mode_read;
	delete[] attr_az_axis_trajectory_state_read;
	delete[] attr_az_p_Soll_read;
	delete[] attr_az_p_Bahn_read;
	delete[] attr_az_p_Ist_read;
	delete[] attr_az_p_Offs_read;
	delete[] attr_az_p_Abw_read;
	delete[] attr_az_p_AbwFil_read;
	delete[] attr_az_p_pointCorr_read;
	delete[] attr_az_v_Bahn_read;
	delete[] attr_az_v_Soll_read;
	delete[] attr_az_v_Ist_read;
	delete[] attr_az_a_Bahn_read;
	delete[] attr_az_motor_selection_1_read;
	delete[] attr_az_motor_selection_2_read;
	delete[] attr_az_brakes_selection_1_read;
	delete[] attr_az_brakes_selection_2_read;
	delete[] attr_az_brakes_open_1_read;
	delete[] attr_az_brakes_open_2_read;
	delete[] attr_az_brakes_command_1_read;
	delete[] attr_az_brakes_command_2_read;
	delete[] attr_el_abs_initOk_read;
	delete[] attr_el_abs_sim_read;
	delete[] attr_el_abs_reset_read;
	delete[] attr_el_abs_notStop_read;
	delete[] attr_el_abs_bereit_read;
	delete[] attr_el_abs_motEin_read;
	delete[] attr_el_abs_praez_read;
	delete[] attr_el_abs_lockAT_read;
	delete[] attr_el_abs_override_read;
	delete[] attr_el_abs_posOffset_read;
	delete[] attr_el_abs_active_read;
	delete[] attr_el_abs_parkPos_read;
	delete[] attr_el_abs_pointCorr_read;
	delete[] attr_el_abs_praezOk_read;
	delete[] attr_el_abs_inactive_read;
	delete[] attr_el_abs_deactivate_read;
	delete[] attr_el_abs_activate_read;
	delete[] attr_el_abs_encReset_read;
	delete[] attr_el_abs_encResetDone_read;
	delete[] attr_el_abs_encOp_read;
	delete[] attr_el_abs_confOk_read;
	delete[] attr_el_abs_sector_B_read;
	delete[] attr_el_abs_sector_A_read;
	delete[] attr_el_stow_posOk_read;
	delete[] attr_el_stow_preUp_read;
	delete[] attr_el_stow_preDn_read;
	delete[] attr_el_stow_dirDn_read;
	delete[] attr_el_stow_pin1_Extr_read;
	delete[] attr_el_stow_pin1_Retr_read;
	delete[] attr_el_stow_pin1_err_read;
	delete[] attr_el_stow_pin1_on_read;
	delete[] attr_el_stow_pin2_Extr_read;
	delete[] attr_el_stow_pin2_Retr_read;
	delete[] attr_el_stow_pin2_err_read;
	delete[] attr_el_stow_pin2_on_read;
	delete[] attr_el_stow_cmd1_Extr_read;
	delete[] attr_el_stow_cmd1_Retr_read;
	delete[] attr_el_stow_cmd2_Extr_read;
	delete[] attr_el_stow_cmd2_Retr_read;
	delete[] attr_el_err_Error_Active_read;
	delete[] attr_el_err_Rate_Loop_read;
	delete[] attr_el_err_Group_read;
	delete[] attr_el_err_Override_read;
	delete[] attr_el_err_Safety_Dev_read;
	delete[] attr_el_err_Extern_read;
	delete[] attr_el_err_Power_read;
	delete[] attr_el_err_Brake_read;
	delete[] attr_el_err_Mot_ready_read;
	delete[] attr_el_err_Motor_read;
	delete[] attr_el_err_Mot_Tacho_read;
	delete[] attr_el_err_Mot_Comm_read;
	delete[] attr_el_err_Mot_Timeout_read;
	delete[] attr_el_err_v_Mot_Exceed_read;
	delete[] attr_el_err_v_Dev_Exceed_read;
	delete[] attr_el_err_Mot_Overload_read;
	delete[] attr_el_err_Em_Limit_Dn_read;
	delete[] attr_el_err_Em_Limit_Up_read;
	delete[] attr_el_err_Em_Stop_read;
	delete[] attr_el_err_SW_InterLock_read;
	delete[] attr_el_err_p_Range_Exceed_read;
	delete[] attr_el_err_p_Dev_Exceed_read;
	delete[] attr_el_err_No_Pos_Enc_Sync_read;
	delete[] attr_el_err_Pos_Enc_Sync_read;
	delete[] attr_el_err_Pos_Enc_read;
	delete[] attr_el_err_Pos_Enc_Step_read;
	delete[] attr_el_err_Stow_read;
	delete[] attr_el_err_Stow_Timeout_read;
	delete[] attr_el_err_Handcrank_read;
	delete[] attr_el_err_Cmd_Timeout_read;
	delete[] attr_el_err_Field_Bus_read;
	delete[] attr_el_err_Lim_Err_read;
	delete[] attr_el_wa_Param_Fault_read;
	delete[] attr_el_wa_Rate_Mode_read;
	delete[] attr_el_wa_Degraded_Mode_read;
	delete[] attr_el_wa_Override_read;
	delete[] attr_el_wa_Heat_Up_Motors_read;
	delete[] attr_el_wa_extern_Stop_read;
	delete[] attr_el_wa_LubricationFault_read;
	delete[] attr_el_wa_Brake_openInaktiv_read;
	delete[] attr_el_wa_Mot_ready_read;
	delete[] attr_el_wa_MotFanFault_read;
	delete[] attr_el_wa_MotWarn_read;
	delete[] attr_el_wa_Mmax_reached_read;
	delete[] attr_el_wa_PreLimDn_inconsist_read;
	delete[] attr_el_wa_PreLimUp_inconsist_read;
	delete[] attr_el_wa_FinLimDn_inconsist_read;
	delete[] attr_el_wa_FinLimUp_inconsist_read;
	delete[] attr_el_wa_Pre_Limit_Up_read;
	delete[] attr_el_wa_Pre_Limit_Dn_read;
	delete[] attr_el_wa_Fin_Limit_Up_read;
	delete[] attr_el_wa_Fin_Limit_Dn_read;
	delete[] attr_el_wa_Pre_Pre_Limit_Up_read;
	delete[] attr_el_wa_Pre_Pre_Limit_Dn_read;
	delete[] attr_el_wa_EmLimitDn_inconsist_read;
	delete[] attr_el_wa_EmLimitUP_inconsist_read;
	delete[] attr_el_wa_Pos_Safe_Enc_Warn_read;
	delete[] attr_el_wa_Pos_Enc_Warn_read;
	delete[] attr_el_wa_Stow_Pin_Fault_read;
	delete[] attr_el_wa_Stowpins_Extr_read;
	delete[] attr_el_wa_lowPowerMode_read;
	delete[] attr_el_wa_Motor_Overload_read;
	delete[] attr_el_wa_Motor_Temp_read;
	delete[] attr_el_wa_Vel_Limit_read;
	delete[] attr_el_disc_initok_read;
	delete[] attr_el_disc_Ok_read;
	delete[] attr_el_disc_commErr_read;
	delete[] attr_el_disc_overflow_read;
	delete[] attr_el_disc_warning_read;
	delete[] attr_el_disc_operational_read;
	delete[] attr_el_disc_error_read;
	delete[] attr_el_axis_state_read;
	delete[] attr_el_axis_actual_mode_read;
	delete[] attr_el_axis_trajectory_state_read;
	delete[] attr_el_p_Soll_read;
	delete[] attr_el_p_Bahn_read;
	delete[] attr_el_p_Ist_read;
	delete[] attr_el_p_Offs_read;
	delete[] attr_el_p_Abw_read;
	delete[] attr_el_p_AbwFil_read;
	delete[] attr_el_p_pointCorr_read;
	delete[] attr_el_v_Bahn_read;
	delete[] attr_el_v_Soll_read;
	delete[] attr_el_v_Ist_read;
	delete[] attr_el_a_Bahn_read;
	delete[] attr_el_motor_selection_1_read;
	delete[] attr_el_motor_selection_2_read;
	delete[] attr_el_brakes_selection_1_read;
	delete[] attr_el_brakes_selection_2_read;
	delete[] attr_el_brakes_open_1_read;
	delete[] attr_el_brakes_open_2_read;
	delete[] attr_el_brakes_command_1_read;
	delete[] attr_el_brakes_command_2_read;
	delete[] attr_az1_mbs_initOk_read;
	delete[] attr_az1_mbs_bereit_read;
	delete[] attr_az1_mbs_aktiv_read;
	delete[] attr_az1_mbs_drzNull_read;
	delete[] attr_az1_mbs_drzOk_read;
	delete[] attr_az1_mbs_posOk_read;
	delete[] attr_az1_mbs_brOffen_read;
	delete[] attr_az1_mbs_errBus_read;
	delete[] attr_az1_mbs_errServo_read;
	delete[] attr_az1_mbs_errSensor_read;
	delete[] attr_az1_mbs_warn_read;
	delete[] attr_az1_mbs_warn_iQuad_t_read;
	delete[] attr_az1_mbs_warn_T_Ampl_read;
	delete[] attr_az1_mbs_warn_T_Mot_read;
	delete[] attr_az1_mbs_warn_Uzk_read;
	delete[] attr_az1_mbs_v_exceed_read;
	delete[] attr_az1_mbs_M_exceed_read;
	delete[] attr_az1_mbs_aktiv_intern_read;
	delete[] attr_az1_mbs_err_sts_RF_read;
	delete[] attr_az1_mbs_err_sts_EF_read;
	delete[] attr_az1_mbs_err_sts_SBM_read;
	delete[] attr_az1_mbs_M_mode_read;
	delete[] attr_az1_mbs_wrongMode_read;
	delete[] attr_az1_mbs_Pow_exceeded_read;
	delete[] attr_az1_mbs_warn_T_Cooling_read;
	delete[] attr_az1_mbs_warn_T_Extern_read;
	delete[] attr_az1_mbs_warn_T_PowerSupply_read;
	delete[] attr_az1_mbs_warn_T_ERModule_read;
	delete[] attr_az1_mbs_err_temp_read;
	delete[] attr_az1_mbs_err_iQuad_t_read;
	delete[] attr_az1_mbs_err_sts_M_read;
	delete[] attr_az1_mbs_V_Mode_read;
	delete[] attr_az1_actual_position_read;
	delete[] attr_az1_actual_velocity_read;
	delete[] attr_az1_actual_torque_read;
	delete[] attr_az1_rate_of_utilization_read;
	delete[] attr_az1_Motor_temperature_read;
	delete[] attr_az1_Motor_Overload_Inverter_read;
	delete[] attr_az1_Motor_overload_read;
	delete[] attr_az1_motErrorCode_read;
	delete[] attr_az1_EmLimDn_read;
	delete[] attr_az1_EmLimUp_read;
	delete[] attr_provaENUM_read;
	delete[] attr_azAxisStatus_read;
	delete[] attr_azAxisTrajectoryStatus_read;
	delete[] attr_azAxisActualModeString_read;
	delete[] attr_elAxisStatus_read;
	delete[] attr_elAxisTrajectoryStatus_read;
	delete[] attr_elAxisActualModeString_read;
	delete[] attr_az_actual_mode_read;
	delete[] attr_el_actual_mode_read;
	delete[] attr_fi_actual_mode_read;
	delete[] attr_poly_az_coeff_read;
	delete[] attr_poly_el_coeff_read;

	if (Tango::Util::instance()->is_svr_shutting_down()==false  &&
		Tango::Util::instance()->is_device_restarting(device_name)==false &&
		Tango::Util::instance()->is_svr_starting()==false)
	{
		//	If not shutting down call delete device for inherited object
		LMCDevice_ns::LMCDevice::delete_device();
	}
}

//--------------------------------------------------------
/**
 *	Method      : DSManager::init_device()
 *	Description : will be called at device initialization.
 */
//--------------------------------------------------------
void DSManager::init_device()
{
	DEBUG_STREAM << "DSManager::init_device() create device " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::init_device_before) ENABLED START -----*/
	
	//	Initialization before get_device_property() call
	
	//FIXME: necessary to execute but it should not be so
	mandatoryNotDefined=false;
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::init_device_before
	
	if (Tango::Util::instance()->is_svr_starting() == false  &&
		Tango::Util::instance()->is_device_restarting(device_name)==false)
	{
		//	If not starting up call init device for inherited object
		LMCDevice_ns::LMCDevice::init_device();
	}
	//	No device property to be read from database
	
	attr_ds_mode_read = new Tango::DevShort[1];
	attr_ds_pointState_read = new Tango::DevShort[1];
	attr_ds_powerState_read = new Tango::DevShort[1];
	attr_ds_controlState_read = new Tango::DevShort[1];
	attr_testMode_read = new Tango::DevBoolean[1];
	attr_powerCut_read = new Tango::DevBoolean[1];
	attr_powerRestored_read = new Tango::DevBoolean[1];
	attr_message_length_read = new Tango::DevULong[1];
	attr_version_read = new Tango::DevUShort[1];
	attr_diagnosis_signal_read = new Tango::DevDouble[1];
	attr_ps_P0_MainSwitch_Off_read = new Tango::DevBoolean[1];
	attr_ps_P0_UPS_MainSwitch_Off_read = new Tango::DevBoolean[1];
	attr_ps_P0_OVP_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_UPS_PhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_MainSwitch_Off_read = new Tango::DevBoolean[1];
	attr_ps_P1_InfraPhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_CntrlPowerA_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_CntrlPowerB_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_CntrlPowerC_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_CntrlPowerD_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_PowMeasureTerminal_fault_read = new Tango::DevBoolean[1];
	attr_ps_P1_OvervoltageProt_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_MainPow_I_PhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_MainPow_II_PhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_UPSPow_I_PhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_UPSPow_II_PhaseGuard_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_CntrlPowerA_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_CntrlPowerB_fault_read = new Tango::DevBoolean[1];
	attr_ps_P2_OvervoltageProt_fault_read = new Tango::DevBoolean[1];
	attr_ps_servoPowD1_fault_read = new Tango::DevBoolean[1];
	attr_ps_servoPowD2_fault_read = new Tango::DevBoolean[1];
	attr_ps_ACUPow_fault_read = new Tango::DevBoolean[1];
	attr_ps_error_active_read = new Tango::DevBoolean[1];
	attr_so_sysSim_read = new Tango::DevBoolean[1];
	attr_so_eStop_read = new Tango::DevBoolean[1];
	attr_so_swIntLock_read = new Tango::DevBoolean[1];
	attr_so_Power_Up_read = new Tango::DevBoolean[1];
	attr_so_sysWarn_read = new Tango::DevBoolean[1];
	attr_so_keyOverrideActive_read = new Tango::DevBoolean[1];
	attr_so_intLockAckActive_read = new Tango::DevBoolean[1];
	attr_so_esOverride_read = new Tango::DevBoolean[1];
	attr_so_service_read = new Tango::DevBoolean[1];
	attr_so_sysOn_read = new Tango::DevBoolean[1];
	attr_so_HHPon_read = new Tango::DevBoolean[1];
	attr_so_LCPon_read = new Tango::DevBoolean[1];
	attr_so_PCUon_read = new Tango::DevBoolean[1];
	attr_so_remote_read = new Tango::DevBoolean[1];
	attr_so_initOk_read = new Tango::DevBoolean[1];
	attr_so_confOk_read = new Tango::DevBoolean[1];
	attr_so_driveActive_read = new Tango::DevBoolean[1];
	attr_so_masterCntrl_read = new Tango::DevBoolean[1];
	attr_so_ACUon_read = new Tango::DevBoolean[1];
	attr_so_HCUon_read = new Tango::DevBoolean[1];
	attr_so_SCPon_read = new Tango::DevBoolean[1];
	attr_so_PCPon_read = new Tango::DevBoolean[1];
	attr_so_servoD1_notSel_read = new Tango::DevBoolean[1];
	attr_so_servoD2_notSel_read = new Tango::DevBoolean[1];
	attr_so_servoD1_on_read = new Tango::DevBoolean[1];
	attr_so_servoD2_on_read = new Tango::DevBoolean[1];
	attr_so_servoD1_Ok_read = new Tango::DevBoolean[1];
	attr_so_servoD2_Ok_read = new Tango::DevBoolean[1];
	attr_so_servoD1_Err_read = new Tango::DevBoolean[1];
	attr_so_servoD2_Err_read = new Tango::DevBoolean[1];
	attr_so_local_read = new Tango::DevBoolean[1];
	attr_sw_E2_smokeDetection_read = new Tango::DevBoolean[1];
	attr_sw_E3_smokeDetection_read = new Tango::DevBoolean[1];
	attr_sw_humidity_Base_read = new Tango::DevBoolean[1];
	attr_sw_humidity_AZC_read = new Tango::DevBoolean[1];
	attr_sw_humidity_P2_read = new Tango::DevBoolean[1];
	attr_sw_Temp_AZC_read = new Tango::DevBoolean[1];
	attr_sw_Temp_AEC_read = new Tango::DevBoolean[1];
	attr_sw_Temp_D1_read = new Tango::DevBoolean[1];
	attr_sw_Temp_AB_ground_read = new Tango::DevBoolean[1];
	attr_sw_Temp_M1_read = new Tango::DevBoolean[1];
	attr_sw_Temp_AB_first_read = new Tango::DevBoolean[1];
	attr_sw_Temp_outside_read = new Tango::DevBoolean[1];
	attr_sw_P1_cntrlPower_read = new Tango::DevBoolean[1];
	attr_sw_P2_cntrlPower_read = new Tango::DevBoolean[1];
	attr_sw_fieldBusErr_HCU_read = new Tango::DevBoolean[1];
	attr_sw_P2_OverVolFault_read = new Tango::DevBoolean[1];
	attr_sw_P1_OverVolFault_read = new Tango::DevBoolean[1];
	attr_sw_Invar_Fault_read = new Tango::DevBoolean[1];
	attr_sw_Temp_ELC_read = new Tango::DevBoolean[1];
	attr_sw_Temp_HXP_read = new Tango::DevBoolean[1];
	attr_sw_Hum_ELC_read = new Tango::DevBoolean[1];
	attr_sw_Hum_HXP_read = new Tango::DevBoolean[1];
	attr_sw_Temp_AZ_Bearing_read = new Tango::DevBoolean[1];
	attr_sw_commErrOvRide_read = new Tango::DevBoolean[1];
	attr_sw_File_Logging_read = new Tango::DevBoolean[1];
	attr_sw_Ring_Logging_read = new Tango::DevBoolean[1];
	attr_swi_overrideES_read = new Tango::DevBoolean[1];
	attr_swi_swIntLockCmd_read = new Tango::DevBoolean[1];
	attr_swi_sysOff_read = new Tango::DevBoolean[1];
	attr_swi_shutdown_read = new Tango::DevBoolean[1];
	attr_swi_mainPow_read = new Tango::DevBoolean[1];
	attr_swi_cntrlPow_read = new Tango::DevBoolean[1];
	attr_swi_safDevES_read = new Tango::DevBoolean[1];
	attr_swi_fieldbus_read = new Tango::DevBoolean[1];
	attr_swi_taskComm_read = new Tango::DevBoolean[1];
	attr_swi_startupFailed_read = new Tango::DevBoolean[1];
	attr_swi_init_az_read = new Tango::DevBoolean[1];
	attr_swi_init_el_read = new Tango::DevBoolean[1];
	attr_swi_init_track_read = new Tango::DevBoolean[1];
	attr_es_safDev_safe_read = new Tango::DevBoolean[1];
	attr_es_safDev_err_read = new Tango::DevBoolean[1];
	attr_es_eStop_TowerMainDoor_read = new Tango::DevBoolean[1];
	attr_es_eStop_ControlCabinet_read = new Tango::DevBoolean[1];
	attr_es_eStop_PCU_AZC_read = new Tango::DevBoolean[1];
	attr_es_door_HatchToRoof_read = new Tango::DevBoolean[1];
	attr_es_eStop_AZC_read = new Tango::DevBoolean[1];
	attr_es_door_Access_AZC_balcony_open_read = new Tango::DevBoolean[1];
	attr_es_door_Access_AZC_balcony_unlocked_read = new Tango::DevBoolean[1];
	attr_es_door_AZC_Access_ELC_open_read = new Tango::DevBoolean[1];
	attr_es_door_AZC_Access_ELC_unlocked_read = new Tango::DevBoolean[1];
	attr_es_door_Access_ELC_open_read = new Tango::DevBoolean[1];
	attr_es_door_Access_ELC_unlocked_read = new Tango::DevBoolean[1];
	attr_es_eStop_AEC_read = new Tango::DevBoolean[1];
	attr_es_eStop_PCU_AEC_read = new Tango::DevBoolean[1];
	attr_es_eStop_ELC_read = new Tango::DevBoolean[1];
	attr_es_GrpAz_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpAz_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpAz_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpAz2_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpAz2_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpAz2_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl2_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl2_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEl2_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEStop_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEStop_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpEStop_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecInput_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecInput_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecInput_OutErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecOutput_FbErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecOutput_comErr_read = new Tango::DevBoolean[1];
	attr_es_GrpDecOutput_OutErr_read = new Tango::DevBoolean[1];
	attr_es_EDM_Inkonsistent_read = new Tango::DevBoolean[1];
	attr_es_EStop_Inkonsistent_read = new Tango::DevBoolean[1];
	attr_es_OpEle_Inkonsistent_read = new Tango::DevBoolean[1];
	attr_es_EStop_MonErr_read = new Tango::DevBoolean[1];
	attr_es_Az_MonErr_read = new Tango::DevBoolean[1];
	attr_es_El_MonErr_read = new Tango::DevBoolean[1];
	attr_comm_E2_KF200_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E2_KF250_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E2_KF223_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E2_KF200_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_E2_KF250_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_E3_KF300_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E3_KF300_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_E3_KF349_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E3_KF_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_E4_KF400_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E4_KF455_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_E4_KF_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_C2_KF_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_P1_KF20_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_P1_KF20_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_P1_KF20_couplerStateErr_read = new Tango::DevBoolean[1];
	attr_comm_C2_KF600_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_JB_AZEC_KF500_stateErr_read = new Tango::DevBoolean[1];
	attr_comm_JB_AZEC_Terminal_wcStateErr_read = new Tango::DevBoolean[1];
	attr_comm_HxpDevState_read = new Tango::DevBoolean[1];
	attr_controlModeSts_LCP_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_LCP_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_SCP_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_SCP_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_PCP_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_PCP_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_Remote_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_Remote_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_HHP_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_HHP_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_Pcu_Sts_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_Pcu_Cmd_connect_read = new Tango::DevBoolean[1];
	attr_controlModeSts_HHP_connect_C1_read = new Tango::DevBoolean[1];
	attr_controlModeSts_HHP_connect_C2_read = new Tango::DevBoolean[1];
	attr_actual_time_read = new Tango::DevDouble[1];
	attr_actual_time_offset_read = new Tango::DevDouble[1];
	attr_time_source_read = new Tango::DevUShort[1];
	attr_no_PPS_signal_read = new Tango::DevUChar[1];
	attr_clock_online_read = new Tango::DevUChar[1];
	attr_clock_Ok_read = new Tango::DevUChar[1];
	attr_power_drive_cabinet_1_read = new Tango::DevDouble[1];
	attr_power_drive_cabinet_2_read = new Tango::DevDouble[1];
	attr_power_antenna_read = new Tango::DevDouble[1];
	attr_temperature_AEC_read = new Tango::DevFloat[1];
	attr_outdoor_temperature_read = new Tango::DevFloat[1];
	attr_temperature_D1_read = new Tango::DevFloat[1];
	attr_temperature_AB_ground_floor_read = new Tango::DevFloat[1];
	attr_temperature_AB_first_floor_read = new Tango::DevFloat[1];
	attr_temperature_AZC_read = new Tango::DevFloat[1];
	attr_temperature_ELC_read = new Tango::DevFloat[1];
	attr_temperature_hexapod_read = new Tango::DevFloat[1];
	attr_temperature_AZ_Bearing_read = new Tango::DevFloat[1];
	attr_temperature_M1_1_read = new Tango::DevFloat[1];
	attr_temperature_M1_2_read = new Tango::DevFloat[1];
	attr_temperature_M1_3_read = new Tango::DevFloat[1];
	attr_temperature_M1_4_read = new Tango::DevFloat[1];
	attr_humidity_Hexapod_read = new Tango::DevFloat[1];
	attr_humidity_ELC_read = new Tango::DevFloat[1];
	attr_humidity_Outside_read = new Tango::DevFloat[1];
	attr_az_abs_initOk_read = new Tango::DevBoolean[1];
	attr_az_abs_sim_read = new Tango::DevBoolean[1];
	attr_az_abs_reset_read = new Tango::DevBoolean[1];
	attr_az_abs_notStop_read = new Tango::DevBoolean[1];
	attr_az_abs_bereit_read = new Tango::DevBoolean[1];
	attr_az_abs_motEin_read = new Tango::DevBoolean[1];
	attr_az_abs_praez_read = new Tango::DevBoolean[1];
	attr_az_abs_lockAT_read = new Tango::DevBoolean[1];
	attr_az_abs_override_read = new Tango::DevBoolean[1];
	attr_az_abs_posOffset_read = new Tango::DevBoolean[1];
	attr_az_abs_active_read = new Tango::DevBoolean[1];
	attr_az_abs_parkPos_read = new Tango::DevBoolean[1];
	attr_az_abs_pointCorr_read = new Tango::DevBoolean[1];
	attr_az_abs_praezOk_read = new Tango::DevBoolean[1];
	attr_az_abs_inactive_read = new Tango::DevBoolean[1];
	attr_az_abs_deactivate_read = new Tango::DevBoolean[1];
	attr_az_abs_activate_read = new Tango::DevBoolean[1];
	attr_az_abs_encReset_read = new Tango::DevBoolean[1];
	attr_az_abs_encResetDone_read = new Tango::DevBoolean[1];
	attr_az_abs_encOp_read = new Tango::DevBoolean[1];
	attr_az_abs_confOk_read = new Tango::DevBoolean[1];
	attr_az_abs_sector_B_read = new Tango::DevBoolean[1];
	attr_az_abs_sector_A_read = new Tango::DevBoolean[1];
	attr_az_stow_posOk_read = new Tango::DevBoolean[1];
	attr_az_stow_preUp_read = new Tango::DevBoolean[1];
	attr_az_stow_preDn_read = new Tango::DevBoolean[1];
	attr_az_stow_dirDn_read = new Tango::DevBoolean[1];
	attr_az_stow_pin1_Extr_read = new Tango::DevBoolean[1];
	attr_az_stow_pin1_Retr_read = new Tango::DevBoolean[1];
	attr_az_stow_pin1_err_read = new Tango::DevBoolean[1];
	attr_az_stow_pin1_on_read = new Tango::DevBoolean[1];
	attr_az_stow_pin2_Extr_read = new Tango::DevBoolean[1];
	attr_az_stow_pin2_Retr_read = new Tango::DevBoolean[1];
	attr_az_stow_pin2_err_read = new Tango::DevBoolean[1];
	attr_az_stow_pin2_on_read = new Tango::DevBoolean[1];
	attr_az_stow_cmd1_Extr_read = new Tango::DevBoolean[1];
	attr_az_stow_cmd1_Retr_read = new Tango::DevBoolean[1];
	attr_az_stow_cmd2_Extr_read = new Tango::DevBoolean[1];
	attr_az_stow_cmd2_Retr_read = new Tango::DevBoolean[1];
	attr_az_err_Error_Active_read = new Tango::DevBoolean[1];
	attr_az_err_Rate_Loop_read = new Tango::DevBoolean[1];
	attr_az_err_Group_read = new Tango::DevBoolean[1];
	attr_az_err_Override_read = new Tango::DevBoolean[1];
	attr_az_err_Safety_Dev_read = new Tango::DevBoolean[1];
	attr_az_err_Extern_read = new Tango::DevBoolean[1];
	attr_az_err_Power_read = new Tango::DevBoolean[1];
	attr_az_err_Brake_read = new Tango::DevBoolean[1];
	attr_az_err_Mot_ready_read = new Tango::DevBoolean[1];
	attr_az_err_Motor_read = new Tango::DevBoolean[1];
	attr_az_err_Mot_Tacho_read = new Tango::DevBoolean[1];
	attr_az_err_Mot_Comm_read = new Tango::DevBoolean[1];
	attr_az_err_Mot_Timeout_read = new Tango::DevBoolean[1];
	attr_az_err_v_Mot_Exceed_read = new Tango::DevBoolean[1];
	attr_az_err_v_Dev_Exceed_read = new Tango::DevBoolean[1];
	attr_az_err_Mot_Overload_read = new Tango::DevBoolean[1];
	attr_az_err_Em_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_az_err_Em_Limit_Up_read = new Tango::DevBoolean[1];
	attr_az_err_Em_Stop_read = new Tango::DevBoolean[1];
	attr_az_err_SW_InterLock_read = new Tango::DevBoolean[1];
	attr_az_err_p_Range_Exceed_read = new Tango::DevBoolean[1];
	attr_az_err_p_Dev_Exceed_read = new Tango::DevBoolean[1];
	attr_az_err_No_Pos_Enc_Sync_read = new Tango::DevBoolean[1];
	attr_az_err_Pos_Enc_Sync_read = new Tango::DevBoolean[1];
	attr_az_err_Pos_Enc_read = new Tango::DevBoolean[1];
	attr_az_err_Pos_Enc_Step_read = new Tango::DevBoolean[1];
	attr_az_err_Stow_read = new Tango::DevBoolean[1];
	attr_az_err_Stow_Timeout_read = new Tango::DevBoolean[1];
	attr_az_err_Handcrank_read = new Tango::DevBoolean[1];
	attr_az_err_Cmd_Timeout_read = new Tango::DevBoolean[1];
	attr_az_err_Field_Bus_read = new Tango::DevBoolean[1];
	attr_az_err_Lim_Err_read = new Tango::DevBoolean[1];
	attr_az_wa_Param_Fault_read = new Tango::DevBoolean[1];
	attr_az_wa_Rate_Mode_read = new Tango::DevBoolean[1];
	attr_az_wa_Degraded_Mode_read = new Tango::DevBoolean[1];
	attr_az_wa_Override_read = new Tango::DevBoolean[1];
	attr_az_wa_Heat_Up_Motors_read = new Tango::DevBoolean[1];
	attr_az_wa_extern_Stop_read = new Tango::DevBoolean[1];
	attr_az_wa_LubricationFault_read = new Tango::DevBoolean[1];
	attr_az_wa_Brake_openInaktiv_read = new Tango::DevBoolean[1];
	attr_az_wa_Mot_ready_read = new Tango::DevBoolean[1];
	attr_az_wa_MotFanFault_read = new Tango::DevBoolean[1];
	attr_az_wa_MotWarn_read = new Tango::DevBoolean[1];
	attr_az_wa_Mmax_reached_read = new Tango::DevBoolean[1];
	attr_az_wa_PreLimDn_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_PreLimUp_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_FinLimDn_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_FinLimUp_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_Pre_Limit_Up_read = new Tango::DevBoolean[1];
	attr_az_wa_Pre_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_az_wa_Fin_Limit_Up_read = new Tango::DevBoolean[1];
	attr_az_wa_Fin_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_az_wa_Pre_Pre_Limit_Up_read = new Tango::DevBoolean[1];
	attr_az_wa_Pre_Pre_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_az_wa_EmLimitDn_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_EmLimitUP_inconsist_read = new Tango::DevBoolean[1];
	attr_az_wa_Pos_Safe_Enc_Warn_read = new Tango::DevBoolean[1];
	attr_az_wa_Pos_Enc_Warn_read = new Tango::DevBoolean[1];
	attr_az_wa_Stow_Pin_Fault_read = new Tango::DevBoolean[1];
	attr_az_wa_Stowpins_Extr_read = new Tango::DevBoolean[1];
	attr_az_wa_lowPowerMode_read = new Tango::DevBoolean[1];
	attr_az_wa_Motor_Overload_read = new Tango::DevBoolean[1];
	attr_az_wa_Motor_Temp_read = new Tango::DevBoolean[1];
	attr_az_wa_Vel_Limit_read = new Tango::DevBoolean[1];
	attr_az_disc_initok_read = new Tango::DevBoolean[1];
	attr_az_disc_Ok_read = new Tango::DevBoolean[1];
	attr_az_disc_commErr_read = new Tango::DevBoolean[1];
	attr_az_disc_overflow_read = new Tango::DevBoolean[1];
	attr_az_disc_warning_read = new Tango::DevBoolean[1];
	attr_az_disc_operational_read = new Tango::DevBoolean[1];
	attr_az_disc_error_read = new Tango::DevBoolean[1];
	attr_az_axis_state_read = new Tango::DevUShort[1];
	attr_az_axis_actual_mode_read = new Tango::DevUShort[1];
	attr_az_axis_trajectory_state_read = new Tango::DevUShort[1];
	attr_az_p_Soll_read = new Tango::DevDouble[1];
	attr_az_p_Bahn_read = new Tango::DevDouble[1];
	attr_az_p_Ist_read = new Tango::DevDouble[1];
	attr_az_p_Offs_read = new Tango::DevDouble[1];
	attr_az_p_Abw_read = new Tango::DevDouble[1];
	attr_az_p_AbwFil_read = new Tango::DevDouble[1];
	attr_az_p_pointCorr_read = new Tango::DevDouble[1];
	attr_az_v_Bahn_read = new Tango::DevDouble[1];
	attr_az_v_Soll_read = new Tango::DevDouble[1];
	attr_az_v_Ist_read = new Tango::DevDouble[1];
	attr_az_a_Bahn_read = new Tango::DevDouble[1];
	attr_az_motor_selection_1_read = new Tango::DevBoolean[1];
	attr_az_motor_selection_2_read = new Tango::DevBoolean[1];
	attr_az_brakes_selection_1_read = new Tango::DevBoolean[1];
	attr_az_brakes_selection_2_read = new Tango::DevBoolean[1];
	attr_az_brakes_open_1_read = new Tango::DevBoolean[1];
	attr_az_brakes_open_2_read = new Tango::DevBoolean[1];
	attr_az_brakes_command_1_read = new Tango::DevBoolean[1];
	attr_az_brakes_command_2_read = new Tango::DevBoolean[1];
	attr_el_abs_initOk_read = new Tango::DevBoolean[1];
	attr_el_abs_sim_read = new Tango::DevBoolean[1];
	attr_el_abs_reset_read = new Tango::DevBoolean[1];
	attr_el_abs_notStop_read = new Tango::DevBoolean[1];
	attr_el_abs_bereit_read = new Tango::DevBoolean[1];
	attr_el_abs_motEin_read = new Tango::DevBoolean[1];
	attr_el_abs_praez_read = new Tango::DevBoolean[1];
	attr_el_abs_lockAT_read = new Tango::DevBoolean[1];
	attr_el_abs_override_read = new Tango::DevBoolean[1];
	attr_el_abs_posOffset_read = new Tango::DevBoolean[1];
	attr_el_abs_active_read = new Tango::DevBoolean[1];
	attr_el_abs_parkPos_read = new Tango::DevBoolean[1];
	attr_el_abs_pointCorr_read = new Tango::DevBoolean[1];
	attr_el_abs_praezOk_read = new Tango::DevBoolean[1];
	attr_el_abs_inactive_read = new Tango::DevBoolean[1];
	attr_el_abs_deactivate_read = new Tango::DevBoolean[1];
	attr_el_abs_activate_read = new Tango::DevBoolean[1];
	attr_el_abs_encReset_read = new Tango::DevBoolean[1];
	attr_el_abs_encResetDone_read = new Tango::DevBoolean[1];
	attr_el_abs_encOp_read = new Tango::DevBoolean[1];
	attr_el_abs_confOk_read = new Tango::DevBoolean[1];
	attr_el_abs_sector_B_read = new Tango::DevBoolean[1];
	attr_el_abs_sector_A_read = new Tango::DevBoolean[1];
	attr_el_stow_posOk_read = new Tango::DevBoolean[1];
	attr_el_stow_preUp_read = new Tango::DevBoolean[1];
	attr_el_stow_preDn_read = new Tango::DevBoolean[1];
	attr_el_stow_dirDn_read = new Tango::DevBoolean[1];
	attr_el_stow_pin1_Extr_read = new Tango::DevBoolean[1];
	attr_el_stow_pin1_Retr_read = new Tango::DevBoolean[1];
	attr_el_stow_pin1_err_read = new Tango::DevBoolean[1];
	attr_el_stow_pin1_on_read = new Tango::DevBoolean[1];
	attr_el_stow_pin2_Extr_read = new Tango::DevBoolean[1];
	attr_el_stow_pin2_Retr_read = new Tango::DevBoolean[1];
	attr_el_stow_pin2_err_read = new Tango::DevBoolean[1];
	attr_el_stow_pin2_on_read = new Tango::DevBoolean[1];
	attr_el_stow_cmd1_Extr_read = new Tango::DevBoolean[1];
	attr_el_stow_cmd1_Retr_read = new Tango::DevBoolean[1];
	attr_el_stow_cmd2_Extr_read = new Tango::DevBoolean[1];
	attr_el_stow_cmd2_Retr_read = new Tango::DevBoolean[1];
	attr_el_err_Error_Active_read = new Tango::DevBoolean[1];
	attr_el_err_Rate_Loop_read = new Tango::DevBoolean[1];
	attr_el_err_Group_read = new Tango::DevBoolean[1];
	attr_el_err_Override_read = new Tango::DevBoolean[1];
	attr_el_err_Safety_Dev_read = new Tango::DevBoolean[1];
	attr_el_err_Extern_read = new Tango::DevBoolean[1];
	attr_el_err_Power_read = new Tango::DevBoolean[1];
	attr_el_err_Brake_read = new Tango::DevBoolean[1];
	attr_el_err_Mot_ready_read = new Tango::DevBoolean[1];
	attr_el_err_Motor_read = new Tango::DevBoolean[1];
	attr_el_err_Mot_Tacho_read = new Tango::DevBoolean[1];
	attr_el_err_Mot_Comm_read = new Tango::DevBoolean[1];
	attr_el_err_Mot_Timeout_read = new Tango::DevBoolean[1];
	attr_el_err_v_Mot_Exceed_read = new Tango::DevBoolean[1];
	attr_el_err_v_Dev_Exceed_read = new Tango::DevBoolean[1];
	attr_el_err_Mot_Overload_read = new Tango::DevBoolean[1];
	attr_el_err_Em_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_el_err_Em_Limit_Up_read = new Tango::DevBoolean[1];
	attr_el_err_Em_Stop_read = new Tango::DevBoolean[1];
	attr_el_err_SW_InterLock_read = new Tango::DevBoolean[1];
	attr_el_err_p_Range_Exceed_read = new Tango::DevBoolean[1];
	attr_el_err_p_Dev_Exceed_read = new Tango::DevBoolean[1];
	attr_el_err_No_Pos_Enc_Sync_read = new Tango::DevBoolean[1];
	attr_el_err_Pos_Enc_Sync_read = new Tango::DevBoolean[1];
	attr_el_err_Pos_Enc_read = new Tango::DevBoolean[1];
	attr_el_err_Pos_Enc_Step_read = new Tango::DevBoolean[1];
	attr_el_err_Stow_read = new Tango::DevBoolean[1];
	attr_el_err_Stow_Timeout_read = new Tango::DevBoolean[1];
	attr_el_err_Handcrank_read = new Tango::DevBoolean[1];
	attr_el_err_Cmd_Timeout_read = new Tango::DevBoolean[1];
	attr_el_err_Field_Bus_read = new Tango::DevBoolean[1];
	attr_el_err_Lim_Err_read = new Tango::DevBoolean[1];
	attr_el_wa_Param_Fault_read = new Tango::DevBoolean[1];
	attr_el_wa_Rate_Mode_read = new Tango::DevBoolean[1];
	attr_el_wa_Degraded_Mode_read = new Tango::DevBoolean[1];
	attr_el_wa_Override_read = new Tango::DevBoolean[1];
	attr_el_wa_Heat_Up_Motors_read = new Tango::DevBoolean[1];
	attr_el_wa_extern_Stop_read = new Tango::DevBoolean[1];
	attr_el_wa_LubricationFault_read = new Tango::DevBoolean[1];
	attr_el_wa_Brake_openInaktiv_read = new Tango::DevBoolean[1];
	attr_el_wa_Mot_ready_read = new Tango::DevBoolean[1];
	attr_el_wa_MotFanFault_read = new Tango::DevBoolean[1];
	attr_el_wa_MotWarn_read = new Tango::DevBoolean[1];
	attr_el_wa_Mmax_reached_read = new Tango::DevBoolean[1];
	attr_el_wa_PreLimDn_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_PreLimUp_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_FinLimDn_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_FinLimUp_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_Pre_Limit_Up_read = new Tango::DevBoolean[1];
	attr_el_wa_Pre_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_el_wa_Fin_Limit_Up_read = new Tango::DevBoolean[1];
	attr_el_wa_Fin_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_el_wa_Pre_Pre_Limit_Up_read = new Tango::DevBoolean[1];
	attr_el_wa_Pre_Pre_Limit_Dn_read = new Tango::DevBoolean[1];
	attr_el_wa_EmLimitDn_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_EmLimitUP_inconsist_read = new Tango::DevBoolean[1];
	attr_el_wa_Pos_Safe_Enc_Warn_read = new Tango::DevBoolean[1];
	attr_el_wa_Pos_Enc_Warn_read = new Tango::DevBoolean[1];
	attr_el_wa_Stow_Pin_Fault_read = new Tango::DevBoolean[1];
	attr_el_wa_Stowpins_Extr_read = new Tango::DevBoolean[1];
	attr_el_wa_lowPowerMode_read = new Tango::DevBoolean[1];
	attr_el_wa_Motor_Overload_read = new Tango::DevBoolean[1];
	attr_el_wa_Motor_Temp_read = new Tango::DevBoolean[1];
	attr_el_wa_Vel_Limit_read = new Tango::DevBoolean[1];
	attr_el_disc_initok_read = new Tango::DevBoolean[1];
	attr_el_disc_Ok_read = new Tango::DevBoolean[1];
	attr_el_disc_commErr_read = new Tango::DevBoolean[1];
	attr_el_disc_overflow_read = new Tango::DevBoolean[1];
	attr_el_disc_warning_read = new Tango::DevBoolean[1];
	attr_el_disc_operational_read = new Tango::DevBoolean[1];
	attr_el_disc_error_read = new Tango::DevBoolean[1];
	attr_el_axis_state_read = new Tango::DevUShort[1];
	attr_el_axis_actual_mode_read = new Tango::DevUShort[1];
	attr_el_axis_trajectory_state_read = new Tango::DevUShort[1];
	attr_el_p_Soll_read = new Tango::DevDouble[1];
	attr_el_p_Bahn_read = new Tango::DevDouble[1];
	attr_el_p_Ist_read = new Tango::DevDouble[1];
	attr_el_p_Offs_read = new Tango::DevDouble[1];
	attr_el_p_Abw_read = new Tango::DevDouble[1];
	attr_el_p_AbwFil_read = new Tango::DevDouble[1];
	attr_el_p_pointCorr_read = new Tango::DevDouble[1];
	attr_el_v_Bahn_read = new Tango::DevDouble[1];
	attr_el_v_Soll_read = new Tango::DevDouble[1];
	attr_el_v_Ist_read = new Tango::DevDouble[1];
	attr_el_a_Bahn_read = new Tango::DevDouble[1];
	attr_el_motor_selection_1_read = new Tango::DevBoolean[1];
	attr_el_motor_selection_2_read = new Tango::DevBoolean[1];
	attr_el_brakes_selection_1_read = new Tango::DevBoolean[1];
	attr_el_brakes_selection_2_read = new Tango::DevBoolean[1];
	attr_el_brakes_open_1_read = new Tango::DevBoolean[1];
	attr_el_brakes_open_2_read = new Tango::DevBoolean[1];
	attr_el_brakes_command_1_read = new Tango::DevBoolean[1];
	attr_el_brakes_command_2_read = new Tango::DevBoolean[1];
	attr_az1_mbs_initOk_read = new Tango::DevBoolean[1];
	attr_az1_mbs_bereit_read = new Tango::DevBoolean[1];
	attr_az1_mbs_aktiv_read = new Tango::DevBoolean[1];
	attr_az1_mbs_drzNull_read = new Tango::DevBoolean[1];
	attr_az1_mbs_drzOk_read = new Tango::DevBoolean[1];
	attr_az1_mbs_posOk_read = new Tango::DevBoolean[1];
	attr_az1_mbs_brOffen_read = new Tango::DevBoolean[1];
	attr_az1_mbs_errBus_read = new Tango::DevBoolean[1];
	attr_az1_mbs_errServo_read = new Tango::DevBoolean[1];
	attr_az1_mbs_errSensor_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_iQuad_t_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_Ampl_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_Mot_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_Uzk_read = new Tango::DevBoolean[1];
	attr_az1_mbs_v_exceed_read = new Tango::DevBoolean[1];
	attr_az1_mbs_M_exceed_read = new Tango::DevBoolean[1];
	attr_az1_mbs_aktiv_intern_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_sts_RF_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_sts_EF_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_sts_SBM_read = new Tango::DevBoolean[1];
	attr_az1_mbs_M_mode_read = new Tango::DevBoolean[1];
	attr_az1_mbs_wrongMode_read = new Tango::DevBoolean[1];
	attr_az1_mbs_Pow_exceeded_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_Cooling_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_Extern_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_PowerSupply_read = new Tango::DevBoolean[1];
	attr_az1_mbs_warn_T_ERModule_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_temp_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_iQuad_t_read = new Tango::DevBoolean[1];
	attr_az1_mbs_err_sts_M_read = new Tango::DevBoolean[1];
	attr_az1_mbs_V_Mode_read = new Tango::DevBoolean[1];
	attr_az1_actual_position_read = new Tango::DevDouble[1];
	attr_az1_actual_velocity_read = new Tango::DevDouble[1];
	attr_az1_actual_torque_read = new Tango::DevDouble[1];
	attr_az1_rate_of_utilization_read = new Tango::DevDouble[1];
	attr_az1_Motor_temperature_read = new Tango::DevDouble[1];
	attr_az1_Motor_Overload_Inverter_read = new Tango::DevDouble[1];
	attr_az1_Motor_overload_read = new Tango::DevDouble[1];
	attr_az1_motErrorCode_read = new Tango::DevUShort[1];
	attr_az1_EmLimDn_read = new Tango::DevUShort[1];
	attr_az1_EmLimUp_read = new Tango::DevUShort[1];
	attr_provaENUM_read = new provaENUMEnum[1];
	attr_azAxisStatus_read = new Tango::DevString[1];
	attr_azAxisTrajectoryStatus_read = new Tango::DevString[1];
	attr_azAxisActualModeString_read = new Tango::DevString[1];
	attr_elAxisStatus_read = new Tango::DevString[1];
	attr_elAxisTrajectoryStatus_read = new Tango::DevString[1];
	attr_elAxisActualModeString_read = new Tango::DevString[1];
	attr_az_actual_mode_read = new Tango::DevShort[1];
	attr_el_actual_mode_read = new Tango::DevUShort[1];
	attr_fi_actual_mode_read = new Tango::DevShort[1];
	attr_poly_az_coeff_read = new Tango::DevDouble[3];
	attr_poly_el_coeff_read = new Tango::DevDouble[3];
	//	No longer if mandatory property not set. 
	if (mandatoryNotDefined)
		return;

	/*----- PROTECTED REGION ID(DSManager::init_device) ENABLED START -----*/
	
	//	Initialize device 
	
	// Start monitoring thread
	std::thread mon_thread(&DSManager::monitor_loop,this);
	mon_thread.detach();
	
	//## Set init device state
	set_state(Tango::INIT);
	set_status("Device " + device_name + " is initializing");
	
	// Initialize attributes to UNKNOWN
	*attr_ds_mode_read=-1;
	*attr_ds_pointState_read=-1;
	*attr_az_actual_mode_read=-1;
	*attr_el_actual_mode_read=-1;
	*attr_fi_actual_mode_read=-1;
	
	// Set command port
  portno=DS_CMD_PORT;
  
  // Initialize command socket
  sockfd=socket(AF_INET, SOCK_STREAM, 0);
  if (sockfd < 0) 
    INFO_STREAM << "DSManager::init_device() - LMC-DS connection: socket opening failed" << endl; //FIXME: proper error handler needed

  DEBUG_STREAM << "DSManager::init_device() - LMC-DS connection: sockfd = " << sockfd << endl;
   
  // Socket connection
  server = gethostbyname(DS_ADDRESS);
  bzero((char *) &serv_addr, sizeof(serv_addr));
  serv_addr.sin_family = AF_INET;
  bcopy((char *) server->h_addr, (char *) &serv_addr.sin_addr.s_addr, server->h_length);
  serv_addr.sin_port = htons(portno);
  if (connect(sockfd,(struct sockaddr *) &serv_addr, sizeof(serv_addr))<0) 
    INFO_STREAM << "DSManager::init_device() - LMC-DS connection: connection error" << endl; //FIXME: proper error handler needed
  else
  	DEBUG_STREAM << "DSManager::init_device() - LMC-DS connection: connected" << endl;
	
	// Initializing some attributes
	*attr_azAxisStatus_read=new char[64];
	strcpy(*attr_azAxisStatus_read,"UNKNOWN");
	
	*attr_azAxisTrajectoryStatus_read=new char[64];
	strcpy(*attr_azAxisTrajectoryStatus_read,"UNKNOWN");
	
	*attr_azAxisActualModeString_read=new char[64];
	strcpy(*attr_azAxisActualModeString_read,"UNKNOWN");
	
	*attr_elAxisStatus_read=new char[64];
	strcpy(*attr_elAxisStatus_read,"UNKNOWN");
	
	*attr_elAxisTrajectoryStatus_read=new char[64];
	strcpy(*attr_elAxisTrajectoryStatus_read,"UNKNOWN");
	
	*attr_elAxisActualModeString_read=new char[64];
	strcpy(*attr_elAxisActualModeString_read,"UNKNOWN");

#if OLD_ICD	
	// Synchronize axes
	Tango::DevVarDoubleArray *eng_args=new Tango::DevVarDoubleArray();
	eng_args->length(4);
	// Common settings
	(*eng_args)[1]=2009; //Synchronize
	(*eng_args)[2]=0; //Ignored
	(*eng_args)[3]=0; //Ignored
	// Synchronize azimuth axis
	(*eng_args)[0]=1; //Azimuth
	eng_mode_command(eng_args);
	// Synchronize elevation axis
	(*eng_args)[0]=2; //Elevation
	eng_mode_command(eng_args);
#endif


	/*----- PROTECTED REGION END -----*/	//	DSManager::init_device
}


//--------------------------------------------------------
/**
 *	Method      : DSManager::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void DSManager::always_executed_hook()
{
	DEBUG_STREAM << "DSManager::always_executed_hook()  " << device_name << endl;
	if (mandatoryNotDefined)
	{
		string	status(get_status());
		Tango::Except::throw_exception(
					(const char *)"PROPERTY_NOT_SET",
					status.c_str(),
					(const char *)"DSManager::always_executed_hook()");
	}
	/*----- PROTECTED REGION ID(DSManager::always_executed_hook) ENABLED START -----*/
	
	//	code always executed before all requests
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::always_executed_hook
}

//--------------------------------------------------------
/**
 *	Method      : DSManager::read_attr_hardware()
 *	Description : Hardware acquisition for attributes
 */
//--------------------------------------------------------
void DSManager::read_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "DSManager::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_attr_hardware) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_attr_hardware
}
//--------------------------------------------------------
/**
 *	Method      : DSManager::write_attr_hardware()
 *	Description : Hardware writing for attributes
 */
//--------------------------------------------------------
void DSManager::write_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "DSManager::write_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::write_attr_hardware) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_attr_hardware
}

//--------------------------------------------------------
/**
 *	Read attribute ds_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ds_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ds_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ds_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ds_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ds_mode
}
//--------------------------------------------------------
/**
 *	Write attribute ds_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ds_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ds_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ds_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ds_mode
}
//--------------------------------------------------------
/**
 *	Read attribute ds_pointState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ds_pointState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ds_pointState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ds_pointState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ds_pointState_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ds_pointState
}
//--------------------------------------------------------
/**
 *	Write attribute ds_pointState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ds_pointState(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ds_pointState(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ds_pointState) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ds_pointState
}
//--------------------------------------------------------
/**
 *	Read attribute ds_powerState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ds_powerState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ds_powerState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ds_powerState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ds_powerState_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ds_powerState
}
//--------------------------------------------------------
/**
 *	Write attribute ds_powerState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ds_powerState(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ds_powerState(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ds_powerState) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ds_powerState
}
//--------------------------------------------------------
/**
 *	Read attribute ds_controlState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ds_controlState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ds_controlState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ds_controlState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ds_controlState_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ds_controlState
}
//--------------------------------------------------------
/**
 *	Write attribute ds_controlState related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ds_controlState(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ds_controlState(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ds_controlState) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ds_controlState
}
//--------------------------------------------------------
/**
 *	Read attribute testMode related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_testMode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_testMode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_testMode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_testMode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_testMode
}
//--------------------------------------------------------
/**
 *	Write attribute testMode related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_testMode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_testMode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_testMode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_testMode
}
//--------------------------------------------------------
/**
 *	Read attribute powerCut related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_powerCut(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_powerCut(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_powerCut) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_powerCut_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_powerCut
}
//--------------------------------------------------------
/**
 *	Write attribute powerCut related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_powerCut(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_powerCut(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_powerCut) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_powerCut
}
//--------------------------------------------------------
/**
 *	Read attribute powerRestored related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_powerRestored(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_powerRestored(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_powerRestored) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_powerRestored_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_powerRestored
}
//--------------------------------------------------------
/**
 *	Write attribute powerRestored related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_powerRestored(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_powerRestored(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_powerRestored) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_powerRestored
}
//--------------------------------------------------------
/**
 *	Read attribute message_length related method
 *	Description: Number of bytes including start and end flag.
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_message_length(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_message_length(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_message_length) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_message_length_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_message_length
}
//--------------------------------------------------------
/**
 *	Write attribute message_length related method
 *	Description: Number of bytes including start and end flag.
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_message_length(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_message_length(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevULong	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_message_length) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_message_length
}
//--------------------------------------------------------
/**
 *	Read attribute version related method
 *	Description: ACU software version (10 -> Version 1.0).
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_version(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_version(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_version) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_version_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_version
}
//--------------------------------------------------------
/**
 *	Write attribute version related method
 *	Description: ACU software version (10 -> Version 1.0).
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_version(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_version(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_version) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_version
}
//--------------------------------------------------------
/**
 *	Read attribute diagnosis_signal related method
 *	Description: Diagnosis signal (used for commissioning and tuning).
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_diagnosis_signal(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_diagnosis_signal(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_diagnosis_signal) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_diagnosis_signal_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_diagnosis_signal
}
//--------------------------------------------------------
/**
 *	Write attribute diagnosis_signal related method
 *	Description: Diagnosis signal (used for commissioning and tuning).
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_diagnosis_signal(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_diagnosis_signal(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_diagnosis_signal) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_diagnosis_signal
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P0_MainSwitch_Off related method
 *	Description: TMain power master switch +P0-QS1 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P0_MainSwitch_Off(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P0_MainSwitch_Off(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P0_MainSwitch_Off) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P0_MainSwitch_Off_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P0_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P0_MainSwitch_Off related method
 *	Description: TMain power master switch +P0-QS1 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P0_MainSwitch_Off(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P0_MainSwitch_Off(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P0_MainSwitch_Off) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P0_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P0_UPS_MainSwitch_Off related method
 *	Description: Main power master switch +P0-QS20 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P0_UPS_MainSwitch_Off(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P0_UPS_MainSwitch_Off(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P0_UPS_MainSwitch_Off) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P0_UPS_MainSwitch_Off_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P0_UPS_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P0_UPS_MainSwitch_Off related method
 *	Description: Main power master switch +P0-QS20 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P0_UPS_MainSwitch_Off(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P0_UPS_MainSwitch_Off(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P0_UPS_MainSwitch_Off) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P0_UPS_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P0_OVP_fault related method
 *	Description: At least one overvoltage protection (+P0-FO11 or +P0-FO20) is broken.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P0_OVP_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P0_OVP_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P0_OVP_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P0_OVP_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P0_OVP_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P0_OVP_fault related method
 *	Description: At least one overvoltage protection (+P0-FO11 or +P0-FO20) is broken.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P0_OVP_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P0_OVP_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P0_OVP_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P0_OVP_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_UPS_PhaseGuard_fault related method
 *	Description: Power cabinet +P1 UPS power fault +BB10.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_UPS_PhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_UPS_PhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_UPS_PhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_UPS_PhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_UPS_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_UPS_PhaseGuard_fault related method
 *	Description: Power cabinet +P1 UPS power fault +BB10.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_UPS_PhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_UPS_PhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_UPS_PhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_UPS_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_MainSwitch_Off related method
 *	Description: Main power master switch +P1-QS1 is switched off Phase guard module for infrastructure power detects power problems (+P1-BB10).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_MainSwitch_Off(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_MainSwitch_Off(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_MainSwitch_Off) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_MainSwitch_Off_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_MainSwitch_Off related method
 *	Description: Main power master switch +P1-QS1 is switched off Phase guard module for infrastructure power detects power problems (+P1-BB10).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_MainSwitch_Off(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_MainSwitch_Off(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_MainSwitch_Off) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_MainSwitch_Off
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_InfraPhaseGuard_fault related method
 *	Description: Phase guard module for infrastructure power detects power problems (+P1-BB10): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_InfraPhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_InfraPhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_InfraPhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_InfraPhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_InfraPhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_InfraPhaseGuard_fault related method
 *	Description: Phase guard module for infrastructure power detects power problems (+P1-BB10): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_InfraPhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_InfraPhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_InfraPhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_InfraPhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_CntrlPowerA_fault related method
 *	Description: 24VDC power supply module +P1-TB41 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_CntrlPowerA_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_CntrlPowerA_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_CntrlPowerA_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_CntrlPowerA_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_CntrlPowerA_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_CntrlPowerA_fault related method
 *	Description: 24VDC power supply module +P1-TB41 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_CntrlPowerA_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_CntrlPowerA_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_CntrlPowerA_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_CntrlPowerA_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_CntrlPowerB_fault related method
 *	Description: 24VDC power supply module +P1-TB42 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_CntrlPowerB_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_CntrlPowerB_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_CntrlPowerB_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_CntrlPowerB_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_CntrlPowerB_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_CntrlPowerB_fault related method
 *	Description: 24VDC power supply module +P1-TB42 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_CntrlPowerB_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_CntrlPowerB_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_CntrlPowerB_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_CntrlPowerB_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_CntrlPowerC_fault related method
 *	Description: 24VDC power supply module +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_CntrlPowerC_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_CntrlPowerC_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_CntrlPowerC_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_CntrlPowerC_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_CntrlPowerC_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_CntrlPowerC_fault related method
 *	Description: 24VDC power supply module +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_CntrlPowerC_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_CntrlPowerC_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_CntrlPowerC_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_CntrlPowerC_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_CntrlPowerD_fault related method
 *	Description: 24VDC power supply module +P1-TB44 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_CntrlPowerD_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_CntrlPowerD_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_CntrlPowerD_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_CntrlPowerD_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_CntrlPowerD_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_CntrlPowerD_fault related method
 *	Description: 24VDC power supply module +P1-TB44 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_CntrlPowerD_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_CntrlPowerD_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_CntrlPowerD_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_CntrlPowerD_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_PowMeasureTerminal_fault related method
 *	Description: Power Measurement terminal KL3403 detects power failure: voltage above 253V; voltage below 207V.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_PowMeasureTerminal_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_PowMeasureTerminal_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_PowMeasureTerminal_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_PowMeasureTerminal_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_PowMeasureTerminal_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_PowMeasureTerminal_fault related method
 *	Description: Power Measurement terminal KL3403 detects power failure: voltage above 253V; voltage below 207V.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_PowMeasureTerminal_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_PowMeasureTerminal_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_PowMeasureTerminal_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_PowMeasureTerminal_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P1_OvervoltageProt_fault related method
 *	Description: Phase guard module for main power detects power(UPS and NON UPS) problems (+P1-FO10 and FO 20): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P1_OvervoltageProt_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P1_OvervoltageProt_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P1_OvervoltageProt_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P1_OvervoltageProt_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P1_OvervoltageProt_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P1_OvervoltageProt_fault related method
 *	Description: Phase guard module for main power detects power(UPS and NON UPS) problems (+P1-FO10 and FO 20): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P1_OvervoltageProt_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P1_OvervoltageProt_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P1_OvervoltageProt_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P1_OvervoltageProt_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_MainPow_I_PhaseGuard_fault related method
 *	Description: Phase guard module for main power I detects power problems (+P2-BB112): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_MainPow_I_PhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_MainPow_I_PhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_MainPow_I_PhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_MainPow_I_PhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_MainPow_I_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_MainPow_I_PhaseGuard_fault related method
 *	Description: Phase guard module for main power I detects power problems (+P2-BB112): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_MainPow_I_PhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_MainPow_I_PhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_MainPow_I_PhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_MainPow_I_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_MainPow_II_PhaseGuard_fault related method
 *	Description: Phase guard module for main power II detects power problems (+P2-BB113): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_MainPow_II_PhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_MainPow_II_PhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_MainPow_II_PhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_MainPow_II_PhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_MainPow_II_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_MainPow_II_PhaseGuard_fault related method
 *	Description: Phase guard module for main power II detects power problems (+P2-BB113): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_MainPow_II_PhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_MainPow_II_PhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_MainPow_II_PhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_MainPow_II_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_UPSPow_I_PhaseGuard_fault related method
 *	Description: Phase guard module for UPS power I detects power problems (+P2-BB122): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_UPSPow_I_PhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_UPSPow_I_PhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_UPSPow_I_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_UPSPow_I_PhaseGuard_fault related method
 *	Description: Phase guard module for UPS power I detects power problems (+P2-BB122): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_UPSPow_I_PhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_UPSPow_I_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_UPSPow_II_PhaseGuard_fault related method
 *	Description: Phase guard module for UPS power II detects power problems (+P2-BB123): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_UPSPow_II_PhaseGuard_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_UPSPow_II_PhaseGuard_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_UPSPow_II_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_UPSPow_II_PhaseGuard_fault related method
 *	Description: Phase guard module for UPS power II detects power problems (+P2-BB123): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_UPSPow_II_PhaseGuard_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_UPSPow_II_PhaseGuard_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_CntrlPowerA_fault related method
 *	Description: 24VDC power supply module +P2-TB31 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_CntrlPowerA_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_CntrlPowerA_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_CntrlPowerA_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_CntrlPowerA_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_CntrlPowerA_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_CntrlPowerA_fault related method
 *	Description: 24VDC power supply module +P2-TB31 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_CntrlPowerA_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_CntrlPowerA_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_CntrlPowerA_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_CntrlPowerA_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_CntrlPowerB_fault related method
 *	Description: 24VDC power supply module +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_CntrlPowerB_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_CntrlPowerB_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_CntrlPowerB_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_CntrlPowerB_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_CntrlPowerB_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_CntrlPowerB_fault related method
 *	Description: 24VDC power supply module +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_CntrlPowerB_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_CntrlPowerB_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_CntrlPowerB_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_CntrlPowerB_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_P2_OvervoltageProt_fault related method
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_P2_OvervoltageProt_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_P2_OvervoltageProt_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_P2_OvervoltageProt_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_P2_OvervoltageProt_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_P2_OvervoltageProt_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_P2_OvervoltageProt_fault related method
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_P2_OvervoltageProt_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_P2_OvervoltageProt_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_P2_OvervoltageProt_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_P2_OvervoltageProt_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_servoPowD1_fault related method
 *	Description: Main power supply of D1 is faulty. - The phase guard device +D1???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D1-FT30 is disconnected. - At least one of the following fuses is triggered: +D1-FL1; +D1-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_servoPowD1_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_servoPowD1_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_servoPowD1_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_servoPowD1_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_servoPowD1_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_servoPowD1_fault related method
 *	Description: Main power supply of D1 is faulty. - The phase guard device +D1???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D1-FT30 is disconnected. - At least one of the following fuses is triggered: +D1-FL1; +D1-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_servoPowD1_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_servoPowD1_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_servoPowD1_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_servoPowD1_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_servoPowD2_fault related method
 *	Description: Main power supply of D2 is faulty. - The phase guard device +D2???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D2-FT30 is disconnected. - At least one of the following fuses is triggered: +D2-FL1; +D2-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_servoPowD2_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_servoPowD2_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_servoPowD2_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_servoPowD2_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_servoPowD2_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_servoPowD2_fault related method
 *	Description: Main power supply of D2 is faulty. - The phase guard device +D2???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D2-FT30 is disconnected. - At least one of the following fuses is triggered: +D2-FL1; +D2-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_servoPowD2_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_servoPowD2_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_servoPowD2_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_servoPowD2_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_ACUPow_fault related method
 *	Description: ACU power supply is faulty; the ACU is running with UPS Power and discharging the battery; ACU UPS battery pack is defect.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_ACUPow_fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_ACUPow_fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_ACUPow_fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_ACUPow_fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_ACUPow_fault
}
//--------------------------------------------------------
/**
 *	Write attribute ps_ACUPow_fault related method
 *	Description: ACU power supply is faulty; the ACU is running with UPS Power and discharging the battery; ACU UPS battery pack is defect.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_ACUPow_fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_ACUPow_fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_ACUPow_fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_ACUPow_fault
}
//--------------------------------------------------------
/**
 *	Read attribute ps_error_active related method
 *	Description: Any power error is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_ps_error_active(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_ps_error_active(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_ps_error_active) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ps_error_active_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_ps_error_active
}
//--------------------------------------------------------
/**
 *	Write attribute ps_error_active related method
 *	Description: Any power error is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_ps_error_active(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_ps_error_active(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_ps_error_active) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_ps_error_active
}
//--------------------------------------------------------
/**
 *	Read attribute so_sysSim related method
 *	Description: The ACU system is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_sysSim(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_sysSim(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_sysSim) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_sysSim_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_sysSim
}
//--------------------------------------------------------
/**
 *	Write attribute so_sysSim related method
 *	Description: The ACU system is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_sysSim(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_sysSim(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_sysSim) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_sysSim
}
//--------------------------------------------------------
/**
 *	Read attribute so_eStop related method
 *	Description: At least one emergency stop button is activated. The information about
 *               the active emergency buttons can be found in chapter 4.2.7 Bit mode
 *               coded emergency.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_eStop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_eStop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_eStop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_eStop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_eStop
}
//--------------------------------------------------------
/**
 *	Write attribute so_eStop related method
 *	Description: At least one emergency stop button is activated. The information about
 *               the active emergency buttons can be found in chapter 4.2.7 Bit mode
 *               coded emergency.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_eStop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_eStop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_eStop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_eStop
}
//--------------------------------------------------------
/**
 *	Read attribute so_swIntLock related method
 *	Description: At least one interlock is activated. The information about the active
 *               interlocks can be found in chapter 4.2.6 Bit mode coded interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_swIntLock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_swIntLock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_swIntLock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_swIntLock_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_swIntLock
}
//--------------------------------------------------------
/**
 *	Write attribute so_swIntLock related method
 *	Description: At least one interlock is activated. The information about the active
 *               interlocks can be found in chapter 4.2.6 Bit mode coded interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_swIntLock(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_swIntLock(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_swIntLock) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_swIntLock
}
//--------------------------------------------------------
/**
 *	Read attribute so_Power_Up related method
 *	Description: ACU drive system is powered up.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_Power_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_Power_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_Power_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_Power_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_Power_Up
}
//--------------------------------------------------------
/**
 *	Write attribute so_Power_Up related method
 *	Description: ACU drive system is powered up.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_Power_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_Power_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_Power_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_Power_Up
}
//--------------------------------------------------------
/**
 *	Read attribute so_sysWarn related method
 *	Description: At least one system warning is activated. The information about the active system warning can be found in chapter 4.2.5 Bit mode coded system faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_sysWarn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_sysWarn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_sysWarn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_sysWarn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_sysWarn
}
//--------------------------------------------------------
/**
 *	Write attribute so_sysWarn related method
 *	Description: At least one system warning is activated. The information about the active system warning can be found in chapter 4.2.5 Bit mode coded system faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_sysWarn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_sysWarn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_sysWarn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_sysWarn
}
//--------------------------------------------------------
/**
 *	Read attribute so_keyOverrideActive related method
 *	Description: Reports the status of the override key switch.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_keyOverrideActive(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_keyOverrideActive(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_keyOverrideActive) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_keyOverrideActive_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_keyOverrideActive
}
//--------------------------------------------------------
/**
 *	Write attribute so_keyOverrideActive related method
 *	Description: Reports the status of the override key switch.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_keyOverrideActive(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_keyOverrideActive(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_keyOverrideActive) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_keyOverrideActive
}
//--------------------------------------------------------
/**
 *	Read attribute so_intLockAckActive related method
 *	Description: Interlock acknowledgement is active. Though also the hardware devices as well as the hexapod will be reset, an interlock acknowledge can last about 20 up to 30 seconds.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_intLockAckActive(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_intLockAckActive(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_intLockAckActive) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_intLockAckActive_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_intLockAckActive
}
//--------------------------------------------------------
/**
 *	Write attribute so_intLockAckActive related method
 *	Description: Interlock acknowledgement is active. Though also the hardware devices as well as the hexapod will be reset, an interlock acknowledge can last about 20 up to 30 seconds.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_intLockAckActive(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_intLockAckActive(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_intLockAckActive) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_intLockAckActive
}
//--------------------------------------------------------
/**
 *	Read attribute so_esOverride related method
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_esOverride(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_esOverride(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_esOverride) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_esOverride_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_esOverride
}
//--------------------------------------------------------
/**
 *	Write attribute so_esOverride related method
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_esOverride(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_esOverride(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_esOverride) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_esOverride
}
//--------------------------------------------------------
/**
 *	Read attribute so_service related method
 *	Description: The service mode is activated, additional functions are available, the hand held panel can be used in this mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_service(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_service(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_service) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_service_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_service
}
//--------------------------------------------------------
/**
 *	Write attribute so_service related method
 *	Description: The service mode is activated, additional functions are available, the hand held panel can be used in this mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_service(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_service(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_service) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_service
}
//--------------------------------------------------------
/**
 *	Read attribute so_sysOn related method
 *	Description: The ACU control system is switched on.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_sysOn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_sysOn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_sysOn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_sysOn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_sysOn
}
//--------------------------------------------------------
/**
 *	Write attribute so_sysOn related method
 *	Description: The ACU control system is switched on.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_sysOn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_sysOn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_sysOn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_sysOn
}
//--------------------------------------------------------
/**
 *	Read attribute so_HHPon related method
 *	Description: The antenna can be controlled exclusively from the hand held panel, if appicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_HHPon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_HHPon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_HHPon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_HHPon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_HHPon
}
//--------------------------------------------------------
/**
 *	Write attribute so_HHPon related method
 *	Description: The antenna can be controlled exclusively from the hand held panel, if appicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_HHPon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_HHPon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_HHPon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_HHPon
}
//--------------------------------------------------------
/**
 *	Read attribute so_LCPon related method
 *	Description: The antenna can be controlled exclusively from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_LCPon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_LCPon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_LCPon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_LCPon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_LCPon
}
//--------------------------------------------------------
/**
 *	Write attribute so_LCPon related method
 *	Description: The antenna can be controlled exclusively from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_LCPon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_LCPon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_LCPon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_LCPon
}
//--------------------------------------------------------
/**
 *	Read attribute so_PCUon related method
 *	Description: The antenna can be controlled exclusively from the portable control unit (Keba), if applicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_PCUon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_PCUon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_PCUon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_PCUon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_PCUon
}
//--------------------------------------------------------
/**
 *	Write attribute so_PCUon related method
 *	Description: The antenna can be controlled exclusively from the portable control unit (Keba), if applicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_PCUon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_PCUon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_PCUon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_PCUon
}
//--------------------------------------------------------
/**
 *	Read attribute so_remote related method
 *	Description: The antenna can be controlled exclusively from the remote control system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_remote(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_remote(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_remote) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_remote_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_remote
}
//--------------------------------------------------------
/**
 *	Write attribute so_remote related method
 *	Description: The antenna can be controlled exclusively from the remote control system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_remote(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_remote(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_remote) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_remote
}
//--------------------------------------------------------
/**
 *	Read attribute so_initOk related method
 *	Description: The initialization of the facility control is done. If this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_initOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_initOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_initOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_initOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_initOk
}
//--------------------------------------------------------
/**
 *	Write attribute so_initOk related method
 *	Description: The initialization of the facility control is done. If this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_initOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_initOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_initOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_initOk
}
//--------------------------------------------------------
/**
 *	Read attribute so_confOk related method
 *	Description: The configuration file W30_FacCtrlConfParam.bin could be read correctly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_confOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_confOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_confOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_confOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_confOk
}
//--------------------------------------------------------
/**
 *	Write attribute so_confOk related method
 *	Description: The configuration file W30_FacCtrlConfParam.bin could be read correctly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_confOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_confOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_confOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_confOk
}
//--------------------------------------------------------
/**
 *	Read attribute so_driveActive related method
 *	Description: At least one axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_driveActive(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_driveActive(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_driveActive) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_driveActive_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_driveActive
}
//--------------------------------------------------------
/**
 *	Write attribute so_driveActive related method
 *	Description: At least one axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_driveActive(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_driveActive(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_driveActive) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_driveActive
}
//--------------------------------------------------------
/**
 *	Read attribute so_masterCntrl related method
 *	Description: The master control is active - used only for maintenance.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_masterCntrl(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_masterCntrl(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_masterCntrl) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_masterCntrl_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_masterCntrl
}
//--------------------------------------------------------
/**
 *	Write attribute so_masterCntrl related method
 *	Description: The master control is active - used only for maintenance.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_masterCntrl(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_masterCntrl(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_masterCntrl) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_masterCntrl
}
//--------------------------------------------------------
/**
 *	Read attribute so_ACUon related method
 *	Description: The HCU can be controlled exclusively from the ACU (either local or remote).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_ACUon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_ACUon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_ACUon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_ACUon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_ACUon
}
//--------------------------------------------------------
/**
 *	Write attribute so_ACUon related method
 *	Description: The HCU can be controlled exclusively from the ACU (either local or remote).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_ACUon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_ACUon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_ACUon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_ACUon
}
//--------------------------------------------------------
/**
 *	Read attribute so_HCUon related method
 *	Description: The HCU can be controlled exclusively from the HCU service panel (service functions can be used).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_HCUon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_HCUon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_HCUon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_HCUon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_HCUon
}
//--------------------------------------------------------
/**
 *	Write attribute so_HCUon related method
 *	Description: The HCU can be controlled exclusively from the HCU service panel (service functions can be used).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_HCUon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_HCUon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_HCUon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_HCUon
}
//--------------------------------------------------------
/**
 *	Read attribute so_SCPon related method
 *	Description: The antenna can be controlled exclusively from the secondary controkl panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_SCPon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_SCPon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_SCPon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_SCPon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_SCPon
}
//--------------------------------------------------------
/**
 *	Write attribute so_SCPon related method
 *	Description: The antenna can be controlled exclusively from the secondary controkl panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_SCPon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_SCPon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_SCPon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_SCPon
}
//--------------------------------------------------------
/**
 *	Read attribute so_PCPon related method
 *	Description: The antenna can be controlled exclusively from the portable control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_PCPon(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_PCPon(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_PCPon) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_PCPon_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_PCPon
}
//--------------------------------------------------------
/**
 *	Write attribute so_PCPon related method
 *	Description: The antenna can be controlled exclusively from the portable control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_PCPon(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_PCPon(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_PCPon) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_PCPon
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD1_notSel related method
 *	Description: The control cabinet D1 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD1_notSel(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD1_notSel(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD1_notSel) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD1_notSel_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD1_notSel
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD1_notSel related method
 *	Description: The control cabinet D1 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD1_notSel(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD1_notSel(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD1_notSel) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD1_notSel
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD2_notSel related method
 *	Description: The control cabinet D2 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD2_notSel(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD2_notSel(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD2_notSel) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD2_notSel_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD2_notSel
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD2_notSel related method
 *	Description: The control cabinet D2 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD2_notSel(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD2_notSel(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD2_notSel) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD2_notSel
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD1_on related method
 *	Description: The AMK KE module of the control cabinet D1 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD1_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD1_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD1_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD1_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD1_on
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD1_on related method
 *	Description: The AMK KE module of the control cabinet D1 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD1_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD1_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD1_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD1_on
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD2_on related method
 *	Description: The AMK KE module of the control cabinet D2 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD2_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD2_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD2_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD2_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD2_on
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD2_on related method
 *	Description: The AMK KE module of the control cabinet D2 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD2_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD2_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD2_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD2_on
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD1_Ok related method
 *	Description: The AMK KE module of the control cabinet D1 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD1_Ok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD1_Ok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD1_Ok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD1_Ok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD1_Ok
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD1_Ok related method
 *	Description: The AMK KE module of the control cabinet D1 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD1_Ok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD1_Ok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD1_Ok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD1_Ok
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD2_Ok related method
 *	Description: The AMK KE module of the control cabinet D2 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD2_Ok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD2_Ok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD2_Ok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD2_Ok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD2_Ok
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD2_Ok related method
 *	Description: The AMK KE module of the control cabinet D2 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD2_Ok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD2_Ok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD2_Ok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD2_Ok
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD1_Err related method
 *	Description: The AMK KE module of the control cabinet D1 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD1_Err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD1_Err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD1_Err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD1_Err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD1_Err
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD1_Err related method
 *	Description: The AMK KE module of the control cabinet D1 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD1_Err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD1_Err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD1_Err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD1_Err
}
//--------------------------------------------------------
/**
 *	Read attribute so_servoD2_Err related method
 *	Description: The AMK KE module of the control cabinet D2 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_servoD2_Err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_servoD2_Err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_servoD2_Err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_servoD2_Err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_servoD2_Err
}
//--------------------------------------------------------
/**
 *	Write attribute so_servoD2_Err related method
 *	Description: The AMK KE module of the control cabinet D2 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_servoD2_Err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_servoD2_Err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_servoD2_Err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_servoD2_Err
}
//--------------------------------------------------------
/**
 *	Read attribute so_local related method
 *	Description: The antenna can be controlled exclusively from any local control interface.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_so_local(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_so_local(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_so_local) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_so_local_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_so_local
}
//--------------------------------------------------------
/**
 *	Write attribute so_local related method
 *	Description: The antenna can be controlled exclusively from any local control interface.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_so_local(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_so_local(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_so_local) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_so_local
}
//--------------------------------------------------------
/**
 *	Read attribute sw_E2_smokeDetection related method
 *	Description: The smoke detection module located in the AEC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_E2_smokeDetection(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_E2_smokeDetection(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_E2_smokeDetection) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_E2_smokeDetection_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_E2_smokeDetection
}
//--------------------------------------------------------
/**
 *	Write attribute sw_E2_smokeDetection related method
 *	Description: The smoke detection module located in the AEC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_E2_smokeDetection(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_E2_smokeDetection(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_E2_smokeDetection) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_E2_smokeDetection
}
//--------------------------------------------------------
/**
 *	Read attribute sw_E3_smokeDetection related method
 *	Description: The smoke detection module located in the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_E3_smokeDetection(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_E3_smokeDetection(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_E3_smokeDetection) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_E3_smokeDetection_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_E3_smokeDetection
}
//--------------------------------------------------------
/**
 *	Write attribute sw_E3_smokeDetection related method
 *	Description: The smoke detection module located in the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_E3_smokeDetection(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_E3_smokeDetection(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_E3_smokeDetection) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_E3_smokeDetection
}
//--------------------------------------------------------
/**
 *	Read attribute sw_humidity_Base related method
 *	Description: The humidity sensor -BH141 at AB is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_humidity_Base(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_humidity_Base(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_humidity_Base) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_humidity_Base_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_humidity_Base
}
//--------------------------------------------------------
/**
 *	Write attribute sw_humidity_Base related method
 *	Description: The humidity sensor -BH141 at AB is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_humidity_Base(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_humidity_Base(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_humidity_Base) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_humidity_Base
}
//--------------------------------------------------------
/**
 *	Read attribute sw_humidity_AZC related method
 *	Description: The humidity sensor inside the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_humidity_AZC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_humidity_AZC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_humidity_AZC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_humidity_AZC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_humidity_AZC
}
//--------------------------------------------------------
/**
 *	Write attribute sw_humidity_AZC related method
 *	Description: The humidity sensor inside the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_humidity_AZC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_humidity_AZC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_humidity_AZC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_humidity_AZC
}
//--------------------------------------------------------
/**
 *	Read attribute sw_humidity_P2 related method
 *	Description: The humidity sensor inside the P2 is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_humidity_P2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_humidity_P2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_humidity_P2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_humidity_P2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_humidity_P2
}
//--------------------------------------------------------
/**
 *	Write attribute sw_humidity_P2 related method
 *	Description: The humidity sensor inside the P2 is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_humidity_P2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_humidity_P2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_humidity_P2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_humidity_P2
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_AZC related method
 *	Description: The temperature of the AZC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_AZC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_AZC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_AZC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_AZC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_AZC
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_AZC related method
 *	Description: The temperature of the AZC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_AZC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_AZC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_AZC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_AZC
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_AEC related method
 *	Description: The temperature of the AEC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_AEC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_AEC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_AEC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_AEC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_AEC
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_AEC related method
 *	Description: The temperature of the AEC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_AEC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_AEC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_AEC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_AEC
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_D1 related method
 *	Description: The temperature inside the cabinets located in the AEC (P1, D1 and D2) is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_D1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_D1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_D1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_D1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_D1
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_D1 related method
 *	Description: The temperature inside the cabinets located in the AEC (P1, D1 and D2) is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_D1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_D1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_D1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_D1
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_AB_ground related method
 *	Description: The temperature of the antenna basement ground floor is outside the specified temperature (facility control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_AB_ground(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_AB_ground(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_AB_ground) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_AB_ground_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_AB_ground
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_AB_ground related method
 *	Description: The temperature of the antenna basement ground floor is outside the specified temperature (facility control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_AB_ground(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_AB_ground(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_AB_ground) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_AB_ground
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_M1 related method
 *	Description: Temperature of at least one M1 sensor is out of range [P082_tempMinM1 ... P083_tempMaxM1].
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_M1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_M1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_M1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_M1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_M1
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_M1 related method
 *	Description: Temperature of at least one M1 sensor is out of range [P082_tempMinM1 ... P083_tempMaxM1].
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_M1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_M1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_M1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_M1
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_AB_first related method
 *	Description: The temperature of the antenna basement first floor is outside the specified temperature (facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_AB_first(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_AB_first(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_AB_first) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_AB_first_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_AB_first
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_AB_first related method
 *	Description: The temperature of the antenna basement first floor is outside the specified temperature (facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_AB_first(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_AB_first(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_AB_first) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_AB_first
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_outside related method
 *	Description: The temperature outside of the antenna is out of the specified temperature (facillity control configuration parameter P082_tempMinM1 and P083_tempMaxM1).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_outside(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_outside(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_outside) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_outside_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_outside
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_outside related method
 *	Description: The temperature outside of the antenna is out of the specified temperature (facillity control configuration parameter P082_tempMinM1 and P083_tempMaxM1).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_outside(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_outside(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_outside) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_outside
}
//--------------------------------------------------------
/**
 *	Read attribute sw_P1_cntrlPower related method
 *	Description: 24VDC power supply module +P1-TB41 or +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_P1_cntrlPower(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_P1_cntrlPower(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_P1_cntrlPower) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_P1_cntrlPower_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_P1_cntrlPower
}
//--------------------------------------------------------
/**
 *	Write attribute sw_P1_cntrlPower related method
 *	Description: 24VDC power supply module +P1-TB41 or +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_P1_cntrlPower(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_P1_cntrlPower(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_P1_cntrlPower) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_P1_cntrlPower
}
//--------------------------------------------------------
/**
 *	Read attribute sw_P2_cntrlPower related method
 *	Description: 24VDC power supply module +P2-TB31 or +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_P2_cntrlPower(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_P2_cntrlPower(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_P2_cntrlPower) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_P2_cntrlPower_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_P2_cntrlPower
}
//--------------------------------------------------------
/**
 *	Write attribute sw_P2_cntrlPower related method
 *	Description: 24VDC power supply module +P2-TB31 or +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_P2_cntrlPower(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_P2_cntrlPower(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_P2_cntrlPower) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_P2_cntrlPower
}
//--------------------------------------------------------
/**
 *	Read attribute sw_fieldBusErr_HCU related method
 *	Description: No data exchange between ACU and HCU, control and monitoring of the hexapod system is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_fieldBusErr_HCU(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_fieldBusErr_HCU(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_fieldBusErr_HCU) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_fieldBusErr_HCU_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_fieldBusErr_HCU
}
//--------------------------------------------------------
/**
 *	Write attribute sw_fieldBusErr_HCU related method
 *	Description: No data exchange between ACU and HCU, control and monitoring of the hexapod system is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_fieldBusErr_HCU(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_fieldBusErr_HCU(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_fieldBusErr_HCU) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_fieldBusErr_HCU
}
//--------------------------------------------------------
/**
 *	Read attribute sw_P2_OverVolFault related method
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO70.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_P2_OverVolFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_P2_OverVolFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_P2_OverVolFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_P2_OverVolFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_P2_OverVolFault
}
//--------------------------------------------------------
/**
 *	Write attribute sw_P2_OverVolFault related method
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO70.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_P2_OverVolFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_P2_OverVolFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_P2_OverVolFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_P2_OverVolFault
}
//--------------------------------------------------------
/**
 *	Read attribute sw_P1_OverVolFault related method
 *	Description: At least one overvoltage protection is broken: +P1-FO10; +P1-FO20.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_P1_OverVolFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_P1_OverVolFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_P1_OverVolFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_P1_OverVolFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_P1_OverVolFault
}
//--------------------------------------------------------
/**
 *	Write attribute sw_P1_OverVolFault related method
 *	Description: At least one overvoltage protection is broken: +P1-FO10; +P1-FO20.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_P1_OverVolFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_P1_OverVolFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_P1_OverVolFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_P1_OverVolFault
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Invar_Fault related method
 *	Description: The invariance measurement system fault.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Invar_Fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Invar_Fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Invar_Fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Invar_Fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Invar_Fault
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Invar_Fault related method
 *	Description: The invariance measurement system fault.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Invar_Fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Invar_Fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Invar_Fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Invar_Fault
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_ELC related method
 *	Description: Temperature measurement fault of the ELC (facility control configuration parameter P090_tempMinELC and P091_tempMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_ELC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_ELC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_ELC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_ELC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_ELC
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_ELC related method
 *	Description: Temperature measurement fault of the ELC (facility control configuration parameter P090_tempMinELC and P091_tempMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_ELC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_ELC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_ELC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_ELC
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_HXP related method
 *	Description: Temperature measurement fault of the HXP (facility control configuration parameter P086_tempMinHXP and P087_tempMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_HXP(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_HXP(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_HXP) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_HXP_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_HXP
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_HXP related method
 *	Description: Temperature measurement fault of the HXP (facility control configuration parameter P086_tempMinHXP and P087_tempMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_HXP(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_HXP(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_HXP) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_HXP
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Hum_ELC related method
 *	Description: Humidity measurement fault of the ELC (facility control configuration parameter P088_humMinELC and P089_humMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Hum_ELC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Hum_ELC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Hum_ELC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Hum_ELC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Hum_ELC
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Hum_ELC related method
 *	Description: Humidity measurement fault of the ELC (facility control configuration parameter P088_humMinELC and P089_humMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Hum_ELC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Hum_ELC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Hum_ELC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Hum_ELC
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Hum_HXP related method
 *	Description: Humidity measurement fault of the HXP (facility control configuration parameter P084_humMinHXP and P085_humMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Hum_HXP(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Hum_HXP(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Hum_HXP) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Hum_HXP_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Hum_HXP
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Hum_HXP related method
 *	Description: Humidity measurement fault of the HXP (facility control configuration parameter P084_humMinHXP and P085_humMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Hum_HXP(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Hum_HXP(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Hum_HXP) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Hum_HXP
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Temp_AZ_Bearing related method
 *	Description: Temperature measurement fault of the AZ bearing (facility control configuration parameter P092_tempMinAZBaring and P093_tempMaxAZBearing).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Temp_AZ_Bearing(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Temp_AZ_Bearing(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Temp_AZ_Bearing) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Temp_AZ_Bearing_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Temp_AZ_Bearing
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Temp_AZ_Bearing related method
 *	Description: Temperature measurement fault of the AZ bearing (facility control configuration parameter P092_tempMinAZBaring and P093_tempMaxAZBearing).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Temp_AZ_Bearing(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Temp_AZ_Bearing(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Temp_AZ_Bearing) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Temp_AZ_Bearing
}
//--------------------------------------------------------
/**
 *	Read attribute sw_commErrOvRide related method
 *	Description: Override field bus communication errors.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_commErrOvRide(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_commErrOvRide(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_commErrOvRide) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_commErrOvRide_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_commErrOvRide
}
//--------------------------------------------------------
/**
 *	Write attribute sw_commErrOvRide related method
 *	Description: Override field bus communication errors.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_commErrOvRide(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_commErrOvRide(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_commErrOvRide) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_commErrOvRide
}
//--------------------------------------------------------
/**
 *	Read attribute sw_File_Logging related method
 *	Description: Warning file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_File_Logging(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_File_Logging(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_File_Logging) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_File_Logging_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_File_Logging
}
//--------------------------------------------------------
/**
 *	Write attribute sw_File_Logging related method
 *	Description: Warning file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_File_Logging(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_File_Logging(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_File_Logging) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_File_Logging
}
//--------------------------------------------------------
/**
 *	Read attribute sw_Ring_Logging related method
 *	Description: Warning ring buffer file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_sw_Ring_Logging(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_sw_Ring_Logging(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_sw_Ring_Logging) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sw_Ring_Logging_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_sw_Ring_Logging
}
//--------------------------------------------------------
/**
 *	Write attribute sw_Ring_Logging related method
 *	Description: Warning ring buffer file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_sw_Ring_Logging(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_sw_Ring_Logging(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_sw_Ring_Logging) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_sw_Ring_Logging
}
//--------------------------------------------------------
/**
 *	Read attribute swi_overrideES related method
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the antenna has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_overrideES(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_overrideES(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_overrideES) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_overrideES_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_overrideES
}
//--------------------------------------------------------
/**
 *	Write attribute swi_overrideES related method
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the antenna has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_overrideES(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_overrideES(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_overrideES) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_overrideES
}
//--------------------------------------------------------
/**
 *	Read attribute swi_swIntLockCmd related method
 *	Description: An interlock command is sent from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_swIntLockCmd(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_swIntLockCmd(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_swIntLockCmd) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_swIntLockCmd_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_swIntLockCmd
}
//--------------------------------------------------------
/**
 *	Write attribute swi_swIntLockCmd related method
 *	Description: An interlock command is sent from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_swIntLockCmd(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_swIntLockCmd(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_swIntLockCmd) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_swIntLockCmd
}
//--------------------------------------------------------
/**
 *	Read attribute swi_sysOff related method
 *	Description: ACU control system is switched off. The software of the control system is running, but control of the telescope is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_sysOff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_sysOff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_sysOff) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_sysOff_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_sysOff
}
//--------------------------------------------------------
/**
 *	Write attribute swi_sysOff related method
 *	Description: ACU control system is switched off. The software of the control system is running, but control of the telescope is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_sysOff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_sysOff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_sysOff) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_sysOff
}
//--------------------------------------------------------
/**
 *	Read attribute swi_shutdown related method
 *	Description: A shutdown of the control computer will be executed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_shutdown(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_shutdown(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_shutdown) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_shutdown_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_shutdown
}
//--------------------------------------------------------
/**
 *	Write attribute swi_shutdown related method
 *	Description: A shutdown of the control computer will be executed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_shutdown(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_shutdown(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_shutdown) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_shutdown
}
//--------------------------------------------------------
/**
 *	Read attribute swi_mainPow related method
 *	Description: At least one of the following signals is triggered. - Power master switch is switched off: +P0-QS1; +P0-QS20; +P1-QS1. - Phase guard modules detects power problems: +P1-BB10; +P2-BB112; +P2-BB122. - Overvoltage modules is broken: +P0-FO11; +P0-FO20; +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_mainPow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_mainPow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_mainPow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_mainPow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_mainPow
}
//--------------------------------------------------------
/**
 *	Write attribute swi_mainPow related method
 *	Description: At least one of the following signals is triggered. - Power master switch is switched off: +P0-QS1; +P0-QS20; +P1-QS1. - Phase guard modules detects power problems: +P1-BB10; +P2-BB112; +P2-BB122. - Overvoltage modules is broken: +P0-FO11; +P0-FO20; +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_mainPow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_mainPow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_mainPow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_mainPow
}
//--------------------------------------------------------
/**
 *	Read attribute swi_cntrlPow related method
 *	Description: 24V DC power supply +P1-TB41 and +P1-TB43 failed or/and 24V DC power supply +P2-TB31 and +P2-TB32 failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_cntrlPow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_cntrlPow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_cntrlPow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_cntrlPow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_cntrlPow
}
//--------------------------------------------------------
/**
 *	Write attribute swi_cntrlPow related method
 *	Description: 24V DC power supply +P1-TB41 and +P1-TB43 failed or/and 24V DC power supply +P2-TB31 and +P2-TB32 failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_cntrlPow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_cntrlPow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_cntrlPow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_cntrlPow
}
//--------------------------------------------------------
/**
 *	Read attribute swi_safDevES related method
 *	Description: Safety project error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_safDevES(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_safDevES(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_safDevES) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_safDevES_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_safDevES
}
//--------------------------------------------------------
/**
 *	Write attribute swi_safDevES related method
 *	Description: Safety project error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_safDevES(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_safDevES(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_safDevES) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_safDevES
}
//--------------------------------------------------------
/**
 *	Read attribute swi_fieldbus related method
 *	Description: Fieldbus communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_fieldbus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_fieldbus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_fieldbus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_fieldbus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_fieldbus
}
//--------------------------------------------------------
/**
 *	Write attribute swi_fieldbus related method
 *	Description: Fieldbus communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_fieldbus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_fieldbus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_fieldbus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_fieldbus
}
//--------------------------------------------------------
/**
 *	Read attribute swi_taskComm related method
 *	Description: Internal task communication problems.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_taskComm(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_taskComm(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_taskComm) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_taskComm_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_taskComm
}
//--------------------------------------------------------
/**
 *	Write attribute swi_taskComm related method
 *	Description: Internal task communication problems.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_taskComm(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_taskComm(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_taskComm) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_taskComm
}
//--------------------------------------------------------
/**
 *	Read attribute swi_startupFailed related method
 *	Description: Startup routine failed, ACU must be switched off and on again.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_startupFailed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_startupFailed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_startupFailed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_startupFailed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_startupFailed
}
//--------------------------------------------------------
/**
 *	Write attribute swi_startupFailed related method
 *	Description: Startup routine failed, ACU must be switched off and on again.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_startupFailed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_startupFailed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_startupFailed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_startupFailed
}
//--------------------------------------------------------
/**
 *	Read attribute swi_init_az related method
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_init_az(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_init_az(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_init_az) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_init_az_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_init_az
}
//--------------------------------------------------------
/**
 *	Write attribute swi_init_az related method
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_init_az(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_init_az(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_init_az) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_init_az
}
//--------------------------------------------------------
/**
 *	Read attribute swi_init_el related method
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_init_el(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_init_el(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_init_el) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_init_el_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_init_el
}
//--------------------------------------------------------
/**
 *	Write attribute swi_init_el related method
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_init_el(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_init_el(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_init_el) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_init_el
}
//--------------------------------------------------------
/**
 *	Read attribute swi_init_track related method
 *	Description: Initialisation of the tracking program failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_swi_init_track(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_swi_init_track(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_swi_init_track) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_swi_init_track_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_swi_init_track
}
//--------------------------------------------------------
/**
 *	Write attribute swi_init_track related method
 *	Description: Initialisation of the tracking program failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_swi_init_track(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_swi_init_track(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_swi_init_track) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_swi_init_track
}
//--------------------------------------------------------
/**
 *	Read attribute es_safDev_safe related method
 *	Description: Project deactivated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_safDev_safe(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_safDev_safe(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_safDev_safe) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_safDev_safe_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_safDev_safe
}
//--------------------------------------------------------
/**
 *	Write attribute es_safDev_safe related method
 *	Description: Project deactivated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_safDev_safe(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_safDev_safe(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_safDev_safe) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_safDev_safe
}
//--------------------------------------------------------
/**
 *	Read attribute es_safDev_err related method
 *	Description: Safety Project Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_safDev_err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_safDev_err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_safDev_err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_safDev_err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_safDev_err
}
//--------------------------------------------------------
/**
 *	Write attribute es_safDev_err related method
 *	Description: Safety Project Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_safDev_err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_safDev_err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_safDev_err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_safDev_err
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_TowerMainDoor related method
 *	Description: E-Stop located at the antenna tower door is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_TowerMainDoor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_TowerMainDoor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_TowerMainDoor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_TowerMainDoor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_TowerMainDoor
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_TowerMainDoor related method
 *	Description: E-Stop located at the antenna tower door is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_TowerMainDoor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_TowerMainDoor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_TowerMainDoor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_TowerMainDoor
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_ControlCabinet related method
 *	Description: E-Stop located at the control cabinet is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_ControlCabinet(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_ControlCabinet(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_ControlCabinet) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_ControlCabinet_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_ControlCabinet
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_ControlCabinet related method
 *	Description: E-Stop located at the control cabinet is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_ControlCabinet(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_ControlCabinet(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_ControlCabinet) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_ControlCabinet
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_PCU_AZC related method
 *	Description: E-Stop located at the Handheldpanel, connected to the control cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_PCU_AZC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_PCU_AZC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_PCU_AZC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_PCU_AZC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_PCU_AZC
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_PCU_AZC related method
 *	Description: E-Stop located at the Handheldpanel, connected to the control cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_PCU_AZC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_PCU_AZC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_PCU_AZC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_PCU_AZC
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_HatchToRoof related method
 *	Description: The hatch to roof is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_HatchToRoof(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_HatchToRoof(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_HatchToRoof) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_HatchToRoof_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_HatchToRoof
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_HatchToRoof related method
 *	Description: The hatch to roof is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_HatchToRoof(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_HatchToRoof(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_HatchToRoof) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_HatchToRoof
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_AZC related method
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_AZC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_AZC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_AZC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_AZC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_AZC
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_AZC related method
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_AZC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_AZC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_AZC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_AZC
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_Access_AZC_balcony_open related method
 *	Description: The access door to the azimuth balcony is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_Access_AZC_balcony_open(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_Access_AZC_balcony_open(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_Access_AZC_balcony_open) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_Access_AZC_balcony_open_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_Access_AZC_balcony_open
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_Access_AZC_balcony_open related method
 *	Description: The access door to the azimuth balcony is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_Access_AZC_balcony_open(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_Access_AZC_balcony_open(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_Access_AZC_balcony_open) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_Access_AZC_balcony_open
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_Access_AZC_balcony_unlocked related method
 *	Description: The access door to the azimuth balcony is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_Access_AZC_balcony_unlocked(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_Access_AZC_balcony_unlocked(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_Access_AZC_balcony_unlocked) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_Access_AZC_balcony_unlocked_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_Access_AZC_balcony_unlocked
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_Access_AZC_balcony_unlocked related method
 *	Description: The access door to the azimuth balcony is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_Access_AZC_balcony_unlocked(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_Access_AZC_balcony_unlocked(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_Access_AZC_balcony_unlocked) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_Access_AZC_balcony_unlocked
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_AZC_Access_ELC_open related method
 *	Description: The azimuth cabin door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_AZC_Access_ELC_open(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_AZC_Access_ELC_open(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_AZC_Access_ELC_open) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_AZC_Access_ELC_open_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_AZC_Access_ELC_open
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_AZC_Access_ELC_open related method
 *	Description: The azimuth cabin door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_AZC_Access_ELC_open(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_AZC_Access_ELC_open(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_AZC_Access_ELC_open) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_AZC_Access_ELC_open
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_AZC_Access_ELC_unlocked related method
 *	Description: The azimuth cabin door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_AZC_Access_ELC_unlocked(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_AZC_Access_ELC_unlocked(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_AZC_Access_ELC_unlocked) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_AZC_Access_ELC_unlocked_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_AZC_Access_ELC_unlocked
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_AZC_Access_ELC_unlocked related method
 *	Description: The azimuth cabin door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_AZC_Access_ELC_unlocked(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_AZC_Access_ELC_unlocked(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_AZC_Access_ELC_unlocked) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_AZC_Access_ELC_unlocked
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_Access_ELC_open related method
 *	Description: The access door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_Access_ELC_open(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_Access_ELC_open(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_Access_ELC_open) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_Access_ELC_open_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_Access_ELC_open
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_Access_ELC_open related method
 *	Description: The access door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_Access_ELC_open(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_Access_ELC_open(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_Access_ELC_open) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_Access_ELC_open
}
//--------------------------------------------------------
/**
 *	Read attribute es_door_Access_ELC_unlocked related method
 *	Description: The access door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_door_Access_ELC_unlocked(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_door_Access_ELC_unlocked(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_door_Access_ELC_unlocked) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_door_Access_ELC_unlocked_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_door_Access_ELC_unlocked
}
//--------------------------------------------------------
/**
 *	Write attribute es_door_Access_ELC_unlocked related method
 *	Description: The access door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_door_Access_ELC_unlocked(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_door_Access_ELC_unlocked(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_door_Access_ELC_unlocked) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_door_Access_ELC_unlocked
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_AEC related method
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_AEC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_AEC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_AEC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_AEC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_AEC
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_AEC related method
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_AEC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_AEC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_AEC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_AEC
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_PCU_AEC related method
 *	Description: E-Stop located at the Handheldpanel, connected in the azimuth cabin.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_PCU_AEC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_PCU_AEC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_PCU_AEC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_PCU_AEC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_PCU_AEC
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_PCU_AEC related method
 *	Description: E-Stop located at the Handheldpanel, connected in the azimuth cabin.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_PCU_AEC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_PCU_AEC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_PCU_AEC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_PCU_AEC
}
//--------------------------------------------------------
/**
 *	Read attribute es_eStop_ELC related method
 *	Description: E-Stop located in the elevation cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_eStop_ELC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_eStop_ELC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_eStop_ELC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_eStop_ELC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_eStop_ELC
}
//--------------------------------------------------------
/**
 *	Write attribute es_eStop_ELC related method
 *	Description: E-Stop located in the elevation cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_eStop_ELC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_eStop_ELC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_eStop_ELC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_eStop_ELC
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz_FbErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz_FbErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz_comErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz_comErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz_OutErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz_OutErr related method
 *	Description: TwinSAFE safety system group azimuth. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz2_FbErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz2_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz2_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz2_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz2_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz2_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz2_FbErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz2_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz2_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz2_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz2_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz2_comErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz2_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz2_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz2_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz2_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz2_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz2_comErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz2_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz2_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz2_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz2_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpAz2_OutErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpAz2_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpAz2_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpAz2_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpAz2_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpAz2_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpAz2_OutErr related method
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpAz2_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpAz2_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpAz2_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpAz2_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl_FbErr related method
 *	Description: TwinSAFE safety system group elevation. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl_FbErr related method
 *	Description: TwinSAFE safety system group elevation. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl_comErr related method
 *	Description: TwinSAFE safety system group elevation. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl_comErr related method
 *	Description: TwinSAFE safety system group elevation. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl_OutErr related method
 *	Description: TwinSAFE safety system group elevation. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl_OutErr related method
 *	Description: TwinSAFE safety system group elevation. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl2_FbErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl2_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl2_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl2_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl2_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl2_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl2_FbErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl2_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl2_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl2_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl2_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl2_comErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl2_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl2_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl2_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl2_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl2_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl2_comErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl2_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl2_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl2_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl2_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEl2_OutErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEl2_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEl2_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEl2_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEl2_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEl2_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEl2_OutErr related method
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEl2_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEl2_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEl2_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEl2_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEStop_FbErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEStop_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEStop_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEStop_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEStop_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEStop_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEStop_FbErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEStop_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEStop_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEStop_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEStop_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEStop_comErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEStop_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEStop_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEStop_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEStop_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEStop_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEStop_comErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEStop_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEStop_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEStop_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEStop_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpEStop_OutErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpEStop_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpEStop_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpEStop_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpEStop_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpEStop_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpEStop_OutErr related method
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpEStop_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpEStop_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpEStop_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpEStop_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecInput_FbErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecInput_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecInput_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecInput_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecInput_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecInput_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecInput_FbErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecInput_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecInput_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecInput_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecInput_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecInput_comErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecInput_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecInput_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecInput_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecInput_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecInput_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecInput_comErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecInput_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecInput_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecInput_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecInput_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecInput_OutErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecInput_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecInput_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecInput_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecInput_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecInput_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecInput_OutErr related method
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecInput_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecInput_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecInput_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecInput_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecOutput_FbErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecOutput_FbErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecOutput_FbErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecOutput_FbErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecOutput_FbErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecOutput_FbErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecOutput_FbErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecOutput_FbErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecOutput_FbErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecOutput_FbErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecOutput_FbErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecOutput_comErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecOutput_comErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecOutput_comErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecOutput_comErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecOutput_comErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecOutput_comErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecOutput_comErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecOutput_comErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecOutput_comErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecOutput_comErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecOutput_comErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_GrpDecOutput_OutErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_GrpDecOutput_OutErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_GrpDecOutput_OutErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_GrpDecOutput_OutErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_GrpDecOutput_OutErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_GrpDecOutput_OutErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_GrpDecOutput_OutErr related method
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_GrpDecOutput_OutErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_GrpDecOutput_OutErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_GrpDecOutput_OutErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_GrpDecOutput_OutErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_EDM_Inkonsistent related method
 *	Description: Coincidence check of signals of the safety controller failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_EDM_Inkonsistent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_EDM_Inkonsistent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_EDM_Inkonsistent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_EDM_Inkonsistent_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_EDM_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Write attribute es_EDM_Inkonsistent related method
 *	Description: Coincidence check of signals of the safety controller failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_EDM_Inkonsistent(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_EDM_Inkonsistent(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_EDM_Inkonsistent) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_EDM_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Read attribute es_EStop_Inkonsistent related method
 *	Description: Coincidence check of the E-Stop signals failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_EStop_Inkonsistent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_EStop_Inkonsistent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_EStop_Inkonsistent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_EStop_Inkonsistent_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_EStop_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Write attribute es_EStop_Inkonsistent related method
 *	Description: Coincidence check of the E-Stop signals failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_EStop_Inkonsistent(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_EStop_Inkonsistent(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_EStop_Inkonsistent) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_EStop_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Read attribute es_OpEle_Inkonsistent related method
 *	Description: Coincidence check of the operation elements service or override failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_OpEle_Inkonsistent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_OpEle_Inkonsistent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_OpEle_Inkonsistent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_OpEle_Inkonsistent_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_OpEle_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Write attribute es_OpEle_Inkonsistent related method
 *	Description: Coincidence check of the operation elements service or override failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_OpEle_Inkonsistent(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_OpEle_Inkonsistent(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_OpEle_Inkonsistent) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_OpEle_Inkonsistent
}
//--------------------------------------------------------
/**
 *	Read attribute es_EStop_MonErr related method
 *	Description: Safety Project E-Stop Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_EStop_MonErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_EStop_MonErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_EStop_MonErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_EStop_MonErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_EStop_MonErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_EStop_MonErr related method
 *	Description: Safety Project E-Stop Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_EStop_MonErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_EStop_MonErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_EStop_MonErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_EStop_MonErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_Az_MonErr related method
 *	Description: Safety Project Azimuth Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_Az_MonErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_Az_MonErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_Az_MonErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_Az_MonErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_Az_MonErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_Az_MonErr related method
 *	Description: Safety Project Azimuth Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_Az_MonErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_Az_MonErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_Az_MonErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_Az_MonErr
}
//--------------------------------------------------------
/**
 *	Read attribute es_El_MonErr related method
 *	Description: Safety Project Elevation Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_es_El_MonErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_es_El_MonErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_es_El_MonErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_es_El_MonErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_es_El_MonErr
}
//--------------------------------------------------------
/**
 *	Write attribute es_El_MonErr related method
 *	Description: Safety Project Elevation Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_es_El_MonErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_es_El_MonErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_es_El_MonErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_es_El_MonErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E2_KF200_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF200 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E2_KF200_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E2_KF200_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E2_KF200_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E2_KF200_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E2_KF200_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E2_KF200_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF200 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E2_KF200_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E2_KF200_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E2_KF200_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E2_KF200_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E2_KF250_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF250 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E2_KF250_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E2_KF250_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E2_KF250_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E2_KF250_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E2_KF250_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E2_KF250_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF250 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E2_KF250_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E2_KF250_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E2_KF250_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E2_KF250_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E2_KF223_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF223 (EK1521) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E2_KF223_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E2_KF223_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E2_KF223_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E2_KF223_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E2_KF223_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E2_KF223_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF223 (EK1521) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E2_KF223_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E2_KF223_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E2_KF223_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E2_KF223_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E2_KF200_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF200 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E2_KF200_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E2_KF200_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E2_KF200_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E2_KF200_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E2_KF200_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E2_KF200_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF200 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E2_KF200_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E2_KF200_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E2_KF200_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E2_KF200_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E2_KF250_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF250 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E2_KF250_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E2_KF250_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E2_KF250_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E2_KF250_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E2_KF250_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E2_KF250_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF250 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E2_KF250_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E2_KF250_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E2_KF250_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E2_KF250_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E3_KF300_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF300 (EK1501) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E3_KF300_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E3_KF300_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E3_KF300_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E3_KF300_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E3_KF300_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E3_KF300_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF300 (EK1501) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E3_KF300_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E3_KF300_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E3_KF300_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E3_KF300_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E3_KF300_wcStateErr related method
 *	Description: EtherCAT coupler KF300 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E3_KF300_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E3_KF300_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E3_KF300_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E3_KF300_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E3_KF300_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E3_KF300_wcStateErr related method
 *	Description: EtherCAT coupler KF300 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E3_KF300_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E3_KF300_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E3_KF300_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E3_KF300_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E3_KF349_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF349 (EK1100) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E3_KF349_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E3_KF349_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E3_KF349_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E3_KF349_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E3_KF349_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E3_KF349_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF349 (EK1100) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E3_KF349_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E3_KF349_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E3_KF349_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E3_KF349_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E3_KF_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF300 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E3_KF_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E3_KF_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E3_KF_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E3_KF_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E3_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E3_KF_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF300 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E3_KF_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E3_KF_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E3_KF_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E3_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E4_KF400_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF400 (EK1100) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E4_KF400_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E4_KF400_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E4_KF400_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E4_KF400_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E4_KF400_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E4_KF400_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF400 (EK1100) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E4_KF400_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E4_KF400_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E4_KF400_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E4_KF400_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E4_KF455_stateErr related method
 *	Description: EtherCAT state error of the Ethernet switch port terminal KF455 (EL6614) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E4_KF455_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E4_KF455_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E4_KF455_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E4_KF455_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E4_KF455_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E4_KF455_stateErr related method
 *	Description: EtherCAT state error of the Ethernet switch port terminal KF455 (EL6614) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E4_KF455_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E4_KF455_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E4_KF455_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E4_KF455_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_E4_KF_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF400 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_E4_KF_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_E4_KF_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_E4_KF_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_E4_KF_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_E4_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_E4_KF_Terminal_wcStateErr related method
 *	Description: At least one of the terminals connected to the KF400 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_E4_KF_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_E4_KF_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_E4_KF_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_E4_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_C2_KF_Terminal_wcStateErr related method
 *	Description: Either terminal +C2-KF452 or +C2-KF453 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_C2_KF_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_C2_KF_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_C2_KF_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_C2_KF_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_C2_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_C2_KF_Terminal_wcStateErr related method
 *	Description: Either terminal +C2-KF452 or +C2-KF453 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_C2_KF_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_C2_KF_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_C2_KF_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_C2_KF_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_P1_KF20_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF20 (BK1100) inside the +P1 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_P1_KF20_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_P1_KF20_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_P1_KF20_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_P1_KF20_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_P1_KF20_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_P1_KF20_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF20 (BK1100) inside the +P1 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_P1_KF20_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_P1_KF20_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_P1_KF20_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_P1_KF20_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_P1_KF20_wcStateErr related method
 *	Description: Terminal KF20 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_P1_KF20_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_P1_KF20_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_P1_KF20_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_P1_KF20_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_P1_KF20_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_P1_KF20_wcStateErr related method
 *	Description: Terminal KF20 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_P1_KF20_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_P1_KF20_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_P1_KF20_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_P1_KF20_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_P1_KF20_couplerStateErr related method
 *	Description: K-Bus state error of the EtherCAT coupler KF20 (BK1100).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_P1_KF20_couplerStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_P1_KF20_couplerStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_P1_KF20_couplerStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_P1_KF20_couplerStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_P1_KF20_couplerStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_P1_KF20_couplerStateErr related method
 *	Description: K-Bus state error of the EtherCAT coupler KF20 (BK1100).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_P1_KF20_couplerStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_P1_KF20_couplerStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_P1_KF20_couplerStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_P1_KF20_couplerStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_C2_KF600_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF600 (EK1100) inside the +C2 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_C2_KF600_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_C2_KF600_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_C2_KF600_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_C2_KF600_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_C2_KF600_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_C2_KF600_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF600 (EK1100) inside the +C2 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_C2_KF600_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_C2_KF600_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_C2_KF600_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_C2_KF600_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_JB_AZEC_KF500_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF500 (EK1100) inside the encoder box located in the tower.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_JB_AZEC_KF500_stateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_JB_AZEC_KF500_stateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_JB_AZEC_KF500_stateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_JB_AZEC_KF500_stateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_JB_AZEC_KF500_stateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_JB_AZEC_KF500_stateErr related method
 *	Description: EtherCAT state error of the EtherCAT coupler KF500 (EK1100) inside the encoder box located in the tower.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_JB_AZEC_KF500_stateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_JB_AZEC_KF500_stateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_JB_AZEC_KF500_stateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_JB_AZEC_KF500_stateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_JB_AZEC_Terminal_wcStateErr related method
 *	Description: Encoder terminals receive no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_JB_AZEC_Terminal_wcStateErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_JB_AZEC_Terminal_wcStateErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_JB_AZEC_Terminal_wcStateErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_JB_AZEC_Terminal_wcStateErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_JB_AZEC_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Write attribute comm_JB_AZEC_Terminal_wcStateErr related method
 *	Description: Encoder terminals receive no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_JB_AZEC_Terminal_wcStateErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_JB_AZEC_Terminal_wcStateErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_JB_AZEC_Terminal_wcStateErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_JB_AZEC_Terminal_wcStateErr
}
//--------------------------------------------------------
/**
 *	Read attribute comm_HxpDevState related method
 *	Description: ACU - HCU communication failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_comm_HxpDevState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_comm_HxpDevState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_comm_HxpDevState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_comm_HxpDevState_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_comm_HxpDevState
}
//--------------------------------------------------------
/**
 *	Write attribute comm_HxpDevState related method
 *	Description: ACU - HCU communication failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_comm_HxpDevState(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_comm_HxpDevState(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_comm_HxpDevState) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_comm_HxpDevState
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_LCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_LCP_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_LCP_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_LCP_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_LCP_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_LCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_LCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_LCP_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_LCP_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_LCP_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_LCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_LCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_LCP_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_LCP_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_LCP_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_LCP_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_LCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_LCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_LCP_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_LCP_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_LCP_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_LCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_SCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_SCP_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_SCP_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_SCP_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_SCP_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_SCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_SCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_SCP_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_SCP_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_SCP_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_SCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_SCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_SCP_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_SCP_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_SCP_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_SCP_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_SCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_SCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_SCP_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_SCP_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_SCP_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_SCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_PCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_PCP_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_PCP_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_PCP_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_PCP_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_PCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_PCP_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_PCP_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_PCP_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_PCP_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_PCP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_PCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_PCP_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_PCP_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_PCP_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_PCP_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_PCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_PCP_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_PCP_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_PCP_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_PCP_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_PCP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_Remote_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_Remote_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_Remote_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_Remote_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_Remote_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_Remote_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_Remote_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_Remote_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_Remote_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_Remote_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_Remote_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_Remote_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_Remote_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_Remote_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_Remote_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_Remote_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_Remote_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_Remote_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_Remote_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_Remote_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_Remote_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_Remote_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_HHP_Sts_connect related method
 *	Description: Status connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_HHP_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_HHP_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_HHP_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_HHP_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_HHP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_HHP_Sts_connect related method
 *	Description: Status connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_HHP_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_HHP_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_HHP_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_HHP_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_HHP_Cmd_connect related method
 *	Description: Command connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_HHP_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_HHP_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_HHP_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_HHP_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_HHP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_HHP_Cmd_connect related method
 *	Description: Command connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_HHP_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_HHP_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_HHP_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_HHP_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_Pcu_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_Pcu_Sts_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_Pcu_Sts_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_Pcu_Sts_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_Pcu_Sts_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_Pcu_Sts_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_Pcu_Sts_connect related method
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_Pcu_Sts_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_Pcu_Sts_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_Pcu_Sts_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_Pcu_Sts_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_Pcu_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_Pcu_Cmd_connect(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_Pcu_Cmd_connect(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_Pcu_Cmd_connect) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_Pcu_Cmd_connect_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_Pcu_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_Pcu_Cmd_connect related method
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_Pcu_Cmd_connect(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_Pcu_Cmd_connect(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_Pcu_Cmd_connect) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_Pcu_Cmd_connect
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_HHP_connect_C1 related method
 *	Description: HHP connected at +C1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_HHP_connect_C1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_HHP_connect_C1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_HHP_connect_C1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_HHP_connect_C1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_HHP_connect_C1
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_HHP_connect_C1 related method
 *	Description: HHP connected at +C1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_HHP_connect_C1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_HHP_connect_C1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_HHP_connect_C1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_HHP_connect_C1
}
//--------------------------------------------------------
/**
 *	Read attribute controlModeSts_HHP_connect_C2 related method
 *	Description: HHP connected at +C2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_controlModeSts_HHP_connect_C2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_controlModeSts_HHP_connect_C2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_controlModeSts_HHP_connect_C2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_controlModeSts_HHP_connect_C2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_controlModeSts_HHP_connect_C2
}
//--------------------------------------------------------
/**
 *	Write attribute controlModeSts_HHP_connect_C2 related method
 *	Description: HHP connected at +C2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_controlModeSts_HHP_connect_C2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_controlModeSts_HHP_connect_C2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_controlModeSts_HHP_connect_C2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_controlModeSts_HHP_connect_C2
}
//--------------------------------------------------------
/**
 *	Read attribute actual_time related method
 *	Description: Actual time in modified julian day format.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_actual_time(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_actual_time(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_actual_time) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_actual_time_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_actual_time
}
//--------------------------------------------------------
/**
 *	Write attribute actual_time related method
 *	Description: Actual time in modified julian day format.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_actual_time(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_actual_time(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_actual_time) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_actual_time
}
//--------------------------------------------------------
/**
 *	Read attribute actual_time_offset related method
 *	Description: Actual time offset.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_actual_time_offset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_actual_time_offset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_actual_time_offset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_actual_time_offset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_actual_time_offset
}
//--------------------------------------------------------
/**
 *	Write attribute actual_time_offset related method
 *	Description: Actual time offset.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_actual_time_offset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_actual_time_offset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_actual_time_offset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_actual_time_offset
}
//--------------------------------------------------------
/**
 *	Read attribute time_source related method
 *	Description: 1 = internal time of the ACU computer is used
 *               2 = time received from GPS module is used
 *               3 = time is set external via LCP or host computer
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_time_source(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_time_source(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_time_source) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_time_source_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_time_source
}
//--------------------------------------------------------
/**
 *	Write attribute time_source related method
 *	Description: 1 = internal time of the ACU computer is used
 *               2 = time received from GPS module is used
 *               3 = time is set external via LCP or host computer
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_time_source(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_time_source(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_time_source) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_time_source
}
//--------------------------------------------------------
/**
 *	Read attribute no_PPS_signal related method
 *	Description: 0 = PPS signal Ok
 *               1 = no PPS signal received
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_no_PPS_signal(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_no_PPS_signal(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_no_PPS_signal) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_no_PPS_signal_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_no_PPS_signal
}
//--------------------------------------------------------
/**
 *	Write attribute no_PPS_signal related method
 *	Description: 0 = PPS signal Ok
 *               1 = no PPS signal received
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_no_PPS_signal(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_no_PPS_signal(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUChar	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_no_PPS_signal) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_no_PPS_signal
}
//--------------------------------------------------------
/**
 *	Read attribute clock_online related method
 *	Description: 0 = no IRIG-B signal is received
 *               1 = IRIG-B signal Ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_clock_online(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_clock_online(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_clock_online) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_clock_online_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_clock_online
}
//--------------------------------------------------------
/**
 *	Write attribute clock_online related method
 *	Description: 0 = no IRIG-B signal is received
 *               1 = IRIG-B signal Ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_clock_online(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_clock_online(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUChar	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_clock_online) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_clock_online
}
//--------------------------------------------------------
/**
 *	Read attribute clock_Ok related method
 *	Description: 0 = clock module sends error
 *               1 = clock module ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_clock_Ok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_clock_Ok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_clock_Ok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_clock_Ok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_clock_Ok
}
//--------------------------------------------------------
/**
 *	Write attribute clock_Ok related method
 *	Description: 0 = clock module sends error
 *               1 = clock module ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_clock_Ok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_clock_Ok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUChar	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_clock_Ok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_clock_Ok
}
//--------------------------------------------------------
/**
 *	Read attribute power_drive_cabinet_1 related method
 *	Description: Actual power consumption drive cabinet 1.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_power_drive_cabinet_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_power_drive_cabinet_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_power_drive_cabinet_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_power_drive_cabinet_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_power_drive_cabinet_1
}
//--------------------------------------------------------
/**
 *	Write attribute power_drive_cabinet_1 related method
 *	Description: Actual power consumption drive cabinet 1.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_power_drive_cabinet_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_power_drive_cabinet_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_power_drive_cabinet_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_power_drive_cabinet_1
}
//--------------------------------------------------------
/**
 *	Read attribute power_drive_cabinet_2 related method
 *	Description: Actual power consumption drive cabinet 2.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_power_drive_cabinet_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_power_drive_cabinet_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_power_drive_cabinet_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_power_drive_cabinet_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_power_drive_cabinet_2
}
//--------------------------------------------------------
/**
 *	Write attribute power_drive_cabinet_2 related method
 *	Description: Actual power consumption drive cabinet 2.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_power_drive_cabinet_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_power_drive_cabinet_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_power_drive_cabinet_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_power_drive_cabinet_2
}
//--------------------------------------------------------
/**
 *	Read attribute power_antenna related method
 *	Description: Actual power consumption of antenna.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_power_antenna(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_power_antenna(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_power_antenna) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_power_antenna_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_power_antenna
}
//--------------------------------------------------------
/**
 *	Write attribute power_antenna related method
 *	Description: Actual power consumption of antenna.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_power_antenna(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_power_antenna(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_power_antenna) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_power_antenna
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_AEC related method
 *	Description: Not used spare.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_AEC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_AEC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_AEC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_AEC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_AEC
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_AEC related method
 *	Description: Not used spare.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_AEC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_AEC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_AEC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_AEC
}
//--------------------------------------------------------
/**
 *	Read attribute outdoor_temperature related method
 *	Description: The absolute outdoor temperature.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_outdoor_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_outdoor_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_outdoor_temperature) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_outdoor_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_outdoor_temperature
}
//--------------------------------------------------------
/**
 *	Write attribute outdoor_temperature related method
 *	Description: The absolute outdoor temperature.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_outdoor_temperature(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_outdoor_temperature(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_outdoor_temperature) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_outdoor_temperature
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_D1 related method
 *	Description: The absolute temperature inside of the P1, D1 and D2.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_D1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_D1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_D1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_D1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_D1
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_D1 related method
 *	Description: The absolute temperature inside of the P1, D1 and D2.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_D1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_D1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_D1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_D1
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_AB_ground_floor related method
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_AB_ground_floor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_AB_ground_floor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_AB_ground_floor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_AB_ground_floor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_AB_ground_floor
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_AB_ground_floor related method
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_AB_ground_floor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_AB_ground_floor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_AB_ground_floor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_AB_ground_floor
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_AB_first_floor related method
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_AB_first_floor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_AB_first_floor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_AB_first_floor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_AB_first_floor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_AB_first_floor
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_AB_first_floor related method
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_AB_first_floor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_AB_first_floor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_AB_first_floor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_AB_first_floor
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_AZC related method
 *	Description: The absolute temperature inside the azimuth cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_AZC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_AZC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_AZC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_AZC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_AZC
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_AZC related method
 *	Description: The absolute temperature inside the azimuth cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_AZC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_AZC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_AZC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_AZC
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_ELC related method
 *	Description: The absolute temperature inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_ELC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_ELC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_ELC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_ELC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_ELC
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_ELC related method
 *	Description: The absolute temperature inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_ELC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_ELC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_ELC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_ELC
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_hexapod related method
 *	Description: The absolute temperature inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_hexapod(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_hexapod(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_hexapod) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_hexapod_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_hexapod
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_hexapod related method
 *	Description: The absolute temperature inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_hexapod(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_hexapod(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_hexapod) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_hexapod
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_AZ_Bearing related method
 *	Description: The absolute temperature inside the azimuth bearing.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_AZ_Bearing(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_AZ_Bearing(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_AZ_Bearing) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_AZ_Bearing_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_AZ_Bearing
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_AZ_Bearing related method
 *	Description: The absolute temperature inside the azimuth bearing.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_AZ_Bearing(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_AZ_Bearing(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_AZ_Bearing) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_AZ_Bearing
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_M1_1 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_M1_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_M1_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_M1_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_M1_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_M1_1
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_M1_1 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_M1_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_M1_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_M1_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_M1_1
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_M1_2 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_M1_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_M1_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_M1_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_M1_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_M1_2
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_M1_2 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_M1_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_M1_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_M1_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_M1_2
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_M1_3 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_M1_3(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_M1_3(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_M1_3) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_M1_3_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_M1_3
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_M1_3 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_M1_3(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_M1_3(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_M1_3) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_M1_3
}
//--------------------------------------------------------
/**
 *	Read attribute temperature_M1_4 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_temperature_M1_4(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_temperature_M1_4(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_temperature_M1_4) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_temperature_M1_4_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_temperature_M1_4
}
//--------------------------------------------------------
/**
 *	Write attribute temperature_M1_4 related method
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_temperature_M1_4(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_temperature_M1_4(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_temperature_M1_4) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_temperature_M1_4
}
//--------------------------------------------------------
/**
 *	Read attribute humidity_Hexapod related method
 *	Description: The humidity inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_humidity_Hexapod(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_humidity_Hexapod(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_humidity_Hexapod) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_humidity_Hexapod_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_humidity_Hexapod
}
//--------------------------------------------------------
/**
 *	Write attribute humidity_Hexapod related method
 *	Description: The humidity inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_humidity_Hexapod(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_humidity_Hexapod(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_humidity_Hexapod) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_humidity_Hexapod
}
//--------------------------------------------------------
/**
 *	Read attribute humidity_ELC related method
 *	Description: The humidity inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_humidity_ELC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_humidity_ELC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_humidity_ELC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_humidity_ELC_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_humidity_ELC
}
//--------------------------------------------------------
/**
 *	Write attribute humidity_ELC related method
 *	Description: The humidity inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_humidity_ELC(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_humidity_ELC(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_humidity_ELC) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_humidity_ELC
}
//--------------------------------------------------------
/**
 *	Read attribute humidity_Outside related method
 *	Description: The humidity outside the antenna.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_humidity_Outside(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_humidity_Outside(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_humidity_Outside) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_humidity_Outside_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_humidity_Outside
}
//--------------------------------------------------------
/**
 *	Write attribute humidity_Outside related method
 *	Description: The humidity outside the antenna.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_humidity_Outside(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_humidity_Outside(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_humidity_Outside) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_humidity_Outside
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_initOk related method
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_initOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_initOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_initOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_initOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_initOk
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_initOk related method
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_initOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_initOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_initOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_initOk
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_sim related method
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_sim(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_sim(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_sim) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_sim_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_sim
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_sim related method
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_sim(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_sim(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_sim) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_sim
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_reset related method
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_reset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_reset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_reset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_reset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_reset
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_reset related method
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_reset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_reset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_reset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_reset
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_notStop related method
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_notStop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_notStop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_notStop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_notStop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_notStop
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_notStop related method
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_notStop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_notStop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_notStop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_notStop
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_bereit related method
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_bereit(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_bereit(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_bereit) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_bereit_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_bereit
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_bereit related method
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_bereit(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_bereit(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_bereit) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_bereit
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_motEin related method
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_motEin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_motEin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_motEin) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_motEin_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_motEin
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_motEin related method
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_motEin(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_motEin(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_motEin) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_motEin
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_praez related method
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_praez(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_praez(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_praez) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_praez_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_praez
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_praez related method
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_praez(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_praez(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_praez) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_praez
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_lockAT related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_lockAT(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_lockAT(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_lockAT) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_lockAT_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_lockAT
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_lockAT related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_lockAT(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_lockAT(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_lockAT) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_lockAT
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_override related method
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_override
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_override related method
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_override
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_posOffset related method
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_posOffset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_posOffset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_posOffset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_posOffset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_posOffset
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_posOffset related method
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_posOffset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_posOffset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_posOffset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_posOffset
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_active related method
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_active(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_active(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_active) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_active_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_active
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_active related method
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_active(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_active(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_active) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_active
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_parkPos related method
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_parkPos(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_parkPos(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_parkPos) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_parkPos_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_parkPos
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_parkPos related method
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_parkPos(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_parkPos(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_parkPos) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_parkPos
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_pointCorr related method
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_pointCorr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_pointCorr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_pointCorr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_pointCorr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_pointCorr
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_pointCorr related method
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_pointCorr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_pointCorr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_pointCorr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_pointCorr
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_praezOk related method
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_praezOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_praezOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_praezOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_praezOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_praezOk
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_praezOk related method
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_praezOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_praezOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_praezOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_praezOk
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_inactive related method
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_inactive(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_inactive(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_inactive) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_inactive_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_inactive
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_inactive related method
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_inactive(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_inactive(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_inactive) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_inactive
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_deactivate related method
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_deactivate(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_deactivate(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_deactivate) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_deactivate_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_deactivate
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_deactivate related method
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_deactivate(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_deactivate(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_deactivate) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_deactivate
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_activate related method
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_activate(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_activate(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_activate) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_activate_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_activate
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_activate related method
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_activate(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_activate(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_activate) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_activate
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_encReset related method
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_encReset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_encReset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_encReset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_encReset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_encReset
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_encReset related method
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_encReset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_encReset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_encReset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_encReset
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_encResetDone related method
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_encResetDone(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_encResetDone(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_encResetDone) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_encResetDone_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_encResetDone
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_encResetDone related method
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_encResetDone(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_encResetDone(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_encResetDone) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_encResetDone
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_encOp related method
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_encOp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_encOp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_encOp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_encOp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_encOp
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_encOp related method
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_encOp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_encOp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_encOp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_encOp
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_confOk related method
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_confOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_confOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_confOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_confOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_confOk
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_confOk related method
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_confOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_confOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_confOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_confOk
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_sector_B related method
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_sector_B(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_sector_B(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_sector_B) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_sector_B_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_sector_B
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_sector_B related method
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_sector_B(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_sector_B(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_sector_B) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_sector_B
}
//--------------------------------------------------------
/**
 *	Read attribute az_abs_sector_A related method
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_abs_sector_A(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_abs_sector_A(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_abs_sector_A) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_abs_sector_A_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_abs_sector_A
}
//--------------------------------------------------------
/**
 *	Write attribute az_abs_sector_A related method
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_abs_sector_A(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_abs_sector_A(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_abs_sector_A) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_abs_sector_A
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_posOk related method
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_posOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_posOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_posOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_posOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_posOk
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_posOk related method
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_posOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_posOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_posOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_posOk
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_preUp related method
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_preUp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_preUp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_preUp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_preUp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_preUp
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_preUp related method
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_preUp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_preUp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_preUp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_preUp
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_preDn related method
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_preDn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_preDn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_preDn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_preDn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_preDn
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_preDn related method
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_preDn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_preDn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_preDn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_preDn
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_dirDn related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_dirDn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_dirDn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_dirDn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_dirDn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_dirDn
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_dirDn related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_dirDn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_dirDn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_dirDn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_dirDn
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin1_Extr related method
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin1_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin1_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin1_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin1_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin1_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin1_Extr related method
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin1_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin1_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin1_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin1_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin1_Retr related method
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin1_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin1_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin1_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin1_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin1_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin1_Retr related method
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin1_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin1_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin1_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin1_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin1_err related method
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin1_err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin1_err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin1_err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin1_err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin1_err
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin1_err related method
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin1_err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin1_err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin1_err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin1_err
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin1_on related method
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin1_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin1_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin1_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin1_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin1_on
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin1_on related method
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin1_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin1_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin1_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin1_on
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin2_Extr related method
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin2_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin2_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin2_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin2_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin2_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin2_Extr related method
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin2_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin2_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin2_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin2_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin2_Retr related method
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin2_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin2_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin2_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin2_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin2_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin2_Retr related method
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin2_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin2_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin2_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin2_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin2_err related method
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin2_err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin2_err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin2_err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin2_err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin2_err
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin2_err related method
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin2_err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin2_err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin2_err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin2_err
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_pin2_on related method
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_pin2_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_pin2_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_pin2_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_pin2_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_pin2_on
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_pin2_on related method
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_pin2_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_pin2_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_pin2_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_pin2_on
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_cmd1_Extr related method
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_cmd1_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_cmd1_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_cmd1_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_cmd1_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_cmd1_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_cmd1_Extr related method
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_cmd1_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_cmd1_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_cmd1_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_cmd1_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_cmd1_Retr related method
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_cmd1_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_cmd1_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_cmd1_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_cmd1_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_cmd1_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_cmd1_Retr related method
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_cmd1_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_cmd1_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_cmd1_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_cmd1_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_cmd2_Extr related method
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_cmd2_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_cmd2_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_cmd2_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_cmd2_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_cmd2_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_cmd2_Extr related method
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_cmd2_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_cmd2_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_cmd2_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_cmd2_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute az_stow_cmd2_Retr related method
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_stow_cmd2_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_stow_cmd2_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_stow_cmd2_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_stow_cmd2_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_stow_cmd2_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute az_stow_cmd2_Retr related method
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_stow_cmd2_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_stow_cmd2_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_stow_cmd2_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_stow_cmd2_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Error_Active related method
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Error_Active(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Error_Active(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Error_Active) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Error_Active_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Error_Active
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Error_Active related method
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Error_Active(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Error_Active(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Error_Active) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Error_Active
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Rate_Loop related method
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Rate_Loop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Rate_Loop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Rate_Loop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Rate_Loop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Rate_Loop
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Rate_Loop related method
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Rate_Loop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Rate_Loop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Rate_Loop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Rate_Loop
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Group related method
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Group(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Group(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Group) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Group_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Group
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Group related method
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Group(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Group(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Group) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Group
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Override related method
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Override
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Override related method
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Override
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Safety_Dev related method
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Safety_Dev(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Safety_Dev(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Safety_Dev) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Safety_Dev_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Safety_Dev
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Safety_Dev related method
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Safety_Dev(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Safety_Dev(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Safety_Dev) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Safety_Dev
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Extern related method
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Extern(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Extern(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Extern) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Extern_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Extern
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Extern related method
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Extern(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Extern(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Extern) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Extern
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Power related method
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Power(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Power(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Power) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Power_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Power
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Power related method
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Power(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Power(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Power) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Power
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Brake related method
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Brake(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Brake(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Brake) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Brake_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Brake
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Brake related method
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Brake(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Brake(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Brake) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Brake
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Mot_ready(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Mot_ready(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Mot_ready) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Mot_ready_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Mot_ready
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Mot_ready(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Mot_ready(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Mot_ready) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Mot_ready
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Motor related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Motor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Motor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Motor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Motor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Motor
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Motor related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Motor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Motor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Motor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Motor
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Mot_Tacho related method
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Mot_Tacho(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Mot_Tacho(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Mot_Tacho) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Mot_Tacho_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Mot_Tacho
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Mot_Tacho related method
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Mot_Tacho(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Mot_Tacho(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Mot_Tacho) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Mot_Tacho
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Mot_Comm related method
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Mot_Comm(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Mot_Comm(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Mot_Comm) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Mot_Comm_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Mot_Comm
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Mot_Comm related method
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Mot_Comm(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Mot_Comm(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Mot_Comm) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Mot_Comm
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Mot_Timeout related method
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Mot_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Mot_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Mot_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Mot_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Mot_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Mot_Timeout related method
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Mot_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Mot_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Mot_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Mot_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_v_Mot_Exceed related method
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_v_Mot_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_v_Mot_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_v_Mot_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_v_Mot_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_v_Mot_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_v_Mot_Exceed related method
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_v_Mot_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_v_Mot_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_v_Mot_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_v_Mot_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_v_Dev_Exceed related method
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_v_Dev_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_v_Dev_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_v_Dev_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_v_Dev_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_v_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_v_Dev_Exceed related method
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_v_Dev_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_v_Dev_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_v_Dev_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_v_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Mot_Overload related method
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Mot_Overload(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Mot_Overload(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Mot_Overload) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Mot_Overload_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Mot_Overload
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Mot_Overload related method
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Mot_Overload(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Mot_Overload(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Mot_Overload) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Mot_Overload
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Em_Limit_Dn related method
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Em_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Em_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Em_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Em_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Em_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Em_Limit_Dn related method
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Em_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Em_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Em_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Em_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Em_Limit_Up related method
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Em_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Em_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Em_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Em_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Em_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Em_Limit_Up related method
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Em_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Em_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Em_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Em_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Em_Stop related method
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Em_Stop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Em_Stop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Em_Stop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Em_Stop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Em_Stop
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Em_Stop related method
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Em_Stop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Em_Stop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Em_Stop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Em_Stop
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_SW_InterLock related method
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_SW_InterLock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_SW_InterLock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_SW_InterLock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_SW_InterLock_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_SW_InterLock
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_SW_InterLock related method
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_SW_InterLock(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_SW_InterLock(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_SW_InterLock) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_SW_InterLock
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_p_Range_Exceed related method
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_p_Range_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_p_Range_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_p_Range_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_p_Range_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_p_Range_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_p_Range_Exceed related method
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_p_Range_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_p_Range_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_p_Range_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_p_Range_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_p_Dev_Exceed related method
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_p_Dev_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_p_Dev_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_p_Dev_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_p_Dev_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_p_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_p_Dev_Exceed related method
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_p_Dev_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_p_Dev_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_p_Dev_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_p_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_No_Pos_Enc_Sync related method
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_No_Pos_Enc_Sync(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_No_Pos_Enc_Sync(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_No_Pos_Enc_Sync) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_No_Pos_Enc_Sync_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_No_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_No_Pos_Enc_Sync related method
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_No_Pos_Enc_Sync(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_No_Pos_Enc_Sync(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_No_Pos_Enc_Sync) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_No_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Pos_Enc_Sync related method
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Pos_Enc_Sync(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Pos_Enc_Sync(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Pos_Enc_Sync) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Pos_Enc_Sync_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Pos_Enc_Sync related method
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Pos_Enc_Sync(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Pos_Enc_Sync(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Pos_Enc_Sync) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Pos_Enc related method
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Pos_Enc(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Pos_Enc(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Pos_Enc) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Pos_Enc_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Pos_Enc
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Pos_Enc related method
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Pos_Enc(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Pos_Enc(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Pos_Enc) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Pos_Enc
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Pos_Enc_Step related method
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Pos_Enc_Step(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Pos_Enc_Step(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Pos_Enc_Step) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Pos_Enc_Step_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Pos_Enc_Step
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Pos_Enc_Step related method
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Pos_Enc_Step(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Pos_Enc_Step(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Pos_Enc_Step) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Pos_Enc_Step
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Stow related method
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Stow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Stow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Stow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Stow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Stow
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Stow related method
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Stow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Stow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Stow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Stow
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Stow_Timeout related method
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Stow_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Stow_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Stow_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Stow_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Stow_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Stow_Timeout related method
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Stow_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Stow_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Stow_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Stow_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Handcrank related method
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Handcrank(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Handcrank(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Handcrank) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Handcrank_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Handcrank
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Handcrank related method
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Handcrank(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Handcrank(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Handcrank) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Handcrank
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Cmd_Timeout related method
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Cmd_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Cmd_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Cmd_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Cmd_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Cmd_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Cmd_Timeout related method
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Cmd_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Cmd_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Cmd_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Cmd_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Field_Bus related method
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Field_Bus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Field_Bus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Field_Bus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Field_Bus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Field_Bus
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Field_Bus related method
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Field_Bus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Field_Bus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Field_Bus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Field_Bus
}
//--------------------------------------------------------
/**
 *	Read attribute az_err_Lim_Err related method
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_err_Lim_Err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_err_Lim_Err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_err_Lim_Err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_err_Lim_Err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_err_Lim_Err
}
//--------------------------------------------------------
/**
 *	Write attribute az_err_Lim_Err related method
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_err_Lim_Err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_err_Lim_Err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_err_Lim_Err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_err_Lim_Err
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Param_Fault related method
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Param_Fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Param_Fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Param_Fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Param_Fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Param_Fault
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Param_Fault related method
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Param_Fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Param_Fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Param_Fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Param_Fault
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Rate_Mode related method
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Rate_Mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Rate_Mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Rate_Mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Rate_Mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Rate_Mode
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Rate_Mode related method
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Rate_Mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Rate_Mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Rate_Mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Rate_Mode
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Degraded_Mode related method
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Degraded_Mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Degraded_Mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Degraded_Mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Degraded_Mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Degraded_Mode
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Degraded_Mode related method
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Degraded_Mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Degraded_Mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Degraded_Mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Degraded_Mode
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Override related method
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Override
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Override related method
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Override
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Heat_Up_Motors related method
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Heat_Up_Motors(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Heat_Up_Motors(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Heat_Up_Motors) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Heat_Up_Motors_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Heat_Up_Motors
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Heat_Up_Motors related method
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Heat_Up_Motors(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Heat_Up_Motors(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Heat_Up_Motors) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Heat_Up_Motors
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_extern_Stop related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_extern_Stop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_extern_Stop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_extern_Stop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_extern_Stop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_extern_Stop
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_extern_Stop related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_extern_Stop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_extern_Stop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_extern_Stop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_extern_Stop
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_LubricationFault related method
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_LubricationFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_LubricationFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_LubricationFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_LubricationFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_LubricationFault
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_LubricationFault related method
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_LubricationFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_LubricationFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_LubricationFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_LubricationFault
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Brake_openInaktiv related method
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Brake_openInaktiv(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Brake_openInaktiv(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Brake_openInaktiv) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Brake_openInaktiv_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Brake_openInaktiv
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Brake_openInaktiv related method
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Brake_openInaktiv(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Brake_openInaktiv(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Brake_openInaktiv) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Brake_openInaktiv
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Mot_ready(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Mot_ready(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Mot_ready) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Mot_ready_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Mot_ready
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Mot_ready(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Mot_ready(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Mot_ready) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Mot_ready
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_MotFanFault related method
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_MotFanFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_MotFanFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_MotFanFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_MotFanFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_MotFanFault
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_MotFanFault related method
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_MotFanFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_MotFanFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_MotFanFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_MotFanFault
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_MotWarn related method
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_MotWarn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_MotWarn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_MotWarn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_MotWarn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_MotWarn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_MotWarn related method
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_MotWarn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_MotWarn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_MotWarn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_MotWarn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Mmax_reached related method
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Mmax_reached(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Mmax_reached(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Mmax_reached) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Mmax_reached_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Mmax_reached
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Mmax_reached related method
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Mmax_reached(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Mmax_reached(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Mmax_reached) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Mmax_reached
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_PreLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_PreLimDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_PreLimDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_PreLimDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_PreLimDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_PreLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_PreLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_PreLimDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_PreLimDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_PreLimDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_PreLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_PreLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_PreLimUp_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_PreLimUp_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_PreLimUp_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_PreLimUp_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_PreLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_PreLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_PreLimUp_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_PreLimUp_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_PreLimUp_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_PreLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_FinLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_FinLimDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_FinLimDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_FinLimDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_FinLimDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_FinLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_FinLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_FinLimDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_FinLimDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_FinLimDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_FinLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_FinLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_FinLimUp_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_FinLimUp_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_FinLimUp_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_FinLimUp_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_FinLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_FinLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_FinLimUp_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_FinLimUp_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_FinLimUp_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_FinLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pre_Limit_Up related method
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pre_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pre_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pre_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pre_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pre_Limit_Up related method
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pre_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pre_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pre_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pre_Limit_Dn related method
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pre_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pre_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pre_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pre_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pre_Limit_Dn related method
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pre_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pre_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pre_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Fin_Limit_Up related method
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Fin_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Fin_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Fin_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Fin_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Fin_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Fin_Limit_Up related method
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Fin_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Fin_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Fin_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Fin_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Fin_Limit_Dn related method
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Fin_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Fin_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Fin_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Fin_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Fin_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Fin_Limit_Dn related method
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Fin_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Fin_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Fin_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Fin_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pre_Pre_Limit_Up related method
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pre_Pre_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pre_Pre_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pre_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pre_Pre_Limit_Up related method
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pre_Pre_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pre_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pre_Pre_Limit_Dn related method
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pre_Pre_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pre_Pre_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pre_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pre_Pre_Limit_Dn related method
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pre_Pre_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pre_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_EmLimitDn_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_EmLimitDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_EmLimitDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_EmLimitDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_EmLimitDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_EmLimitDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_EmLimitDn_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_EmLimitDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_EmLimitDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_EmLimitDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_EmLimitDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_EmLimitUP_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_EmLimitUP_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_EmLimitUP_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_EmLimitUP_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_EmLimitUP_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_EmLimitUP_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_EmLimitUP_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_EmLimitUP_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_EmLimitUP_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_EmLimitUP_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_EmLimitUP_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pos_Safe_Enc_Warn related method
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pos_Safe_Enc_Warn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pos_Safe_Enc_Warn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pos_Safe_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pos_Safe_Enc_Warn related method
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pos_Safe_Enc_Warn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pos_Safe_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Pos_Enc_Warn related method
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Pos_Enc_Warn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Pos_Enc_Warn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Pos_Enc_Warn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Pos_Enc_Warn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Pos_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Pos_Enc_Warn related method
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Pos_Enc_Warn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Pos_Enc_Warn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Pos_Enc_Warn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Pos_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Stow_Pin_Fault related method
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Stow_Pin_Fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Stow_Pin_Fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Stow_Pin_Fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Stow_Pin_Fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Stow_Pin_Fault
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Stow_Pin_Fault related method
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Stow_Pin_Fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Stow_Pin_Fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Stow_Pin_Fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Stow_Pin_Fault
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Stowpins_Extr related method
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Stowpins_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Stowpins_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Stowpins_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Stowpins_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Stowpins_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Stowpins_Extr related method
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Stowpins_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Stowpins_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Stowpins_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Stowpins_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_lowPowerMode related method
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_lowPowerMode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_lowPowerMode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_lowPowerMode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_lowPowerMode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_lowPowerMode
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_lowPowerMode related method
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_lowPowerMode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_lowPowerMode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_lowPowerMode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_lowPowerMode
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Motor_Overload related method
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Motor_Overload(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Motor_Overload(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Motor_Overload) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Motor_Overload_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Motor_Overload
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Motor_Overload related method
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Motor_Overload(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Motor_Overload(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Motor_Overload) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Motor_Overload
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Motor_Temp related method
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Motor_Temp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Motor_Temp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Motor_Temp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Motor_Temp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Motor_Temp
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Motor_Temp related method
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Motor_Temp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Motor_Temp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Motor_Temp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Motor_Temp
}
//--------------------------------------------------------
/**
 *	Read attribute az_wa_Vel_Limit related method
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_wa_Vel_Limit(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_wa_Vel_Limit(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_wa_Vel_Limit) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_wa_Vel_Limit_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_wa_Vel_Limit
}
//--------------------------------------------------------
/**
 *	Write attribute az_wa_Vel_Limit related method
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_wa_Vel_Limit(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_wa_Vel_Limit(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_wa_Vel_Limit) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_wa_Vel_Limit
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_initok related method
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_initok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_initok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_initok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_initok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_initok
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_initok related method
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_initok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_initok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_initok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_initok
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_Ok related method
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_Ok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_Ok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_Ok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_Ok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_Ok
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_Ok related method
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_Ok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_Ok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_Ok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_Ok
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_commErr related method
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_commErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_commErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_commErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_commErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_commErr
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_commErr related method
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_commErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_commErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_commErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_commErr
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_overflow related method
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_overflow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_overflow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_overflow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_overflow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_overflow
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_overflow related method
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_overflow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_overflow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_overflow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_overflow
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_warning related method
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_warning(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_warning(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_warning) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_warning_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_warning
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_warning related method
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_warning(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_warning(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_warning) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_warning
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_operational related method
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_operational(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_operational(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_operational) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_operational_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_operational
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_operational related method
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_operational(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_operational(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_operational) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_operational
}
//--------------------------------------------------------
/**
 *	Read attribute az_disc_error related method
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_disc_error(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_disc_error(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_disc_error) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_disc_error_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_disc_error
}
//--------------------------------------------------------
/**
 *	Write attribute az_disc_error related method
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_disc_error(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_disc_error(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_disc_error) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_disc_error
}
//--------------------------------------------------------
/**
 *	Read attribute az_axis_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_axis_state(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_axis_state(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_axis_state) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_axis_state_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_axis_state
}
//--------------------------------------------------------
/**
 *	Write attribute az_axis_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_axis_state(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_axis_state(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_axis_state) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_axis_state
}
//--------------------------------------------------------
/**
 *	Read attribute az_axis_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_axis_actual_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_axis_actual_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_axis_actual_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_axis_actual_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_axis_actual_mode
}
//--------------------------------------------------------
/**
 *	Write attribute az_axis_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_axis_actual_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_axis_actual_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_axis_actual_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_axis_actual_mode
}
//--------------------------------------------------------
/**
 *	Read attribute az_axis_trajectory_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_axis_trajectory_state(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_axis_trajectory_state(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_axis_trajectory_state) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_axis_trajectory_state_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_axis_trajectory_state
}
//--------------------------------------------------------
/**
 *	Write attribute az_axis_trajectory_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_axis_trajectory_state(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_axis_trajectory_state(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_axis_trajectory_state) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_axis_trajectory_state
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_Soll related method
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_Soll(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_Soll(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_Soll) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_Soll_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_Soll
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_Soll related method
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_Soll(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_Soll(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_Soll) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_Soll
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_Bahn related method
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_Bahn related method
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_Ist related method
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_Ist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_Ist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_Ist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_Ist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_Ist
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_Ist related method
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_Ist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_Ist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_Ist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_Ist
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_Offs related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_Offs(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_Offs(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_Offs) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_Offs_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_Offs
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_Offs related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_Offs(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_Offs(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_Offs) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_Offs
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_Abw related method
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_Abw(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_Abw(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_Abw) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_Abw_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_Abw
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_Abw related method
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_Abw(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_Abw(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_Abw) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_Abw
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_AbwFil related method
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_AbwFil(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_AbwFil(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_AbwFil) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_AbwFil_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_AbwFil
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_AbwFil related method
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_AbwFil(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_AbwFil(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_AbwFil) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_AbwFil
}
//--------------------------------------------------------
/**
 *	Read attribute az_p_pointCorr related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_p_pointCorr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_p_pointCorr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_p_pointCorr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_p_pointCorr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_p_pointCorr
}
//--------------------------------------------------------
/**
 *	Write attribute az_p_pointCorr related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_p_pointCorr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_p_pointCorr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_p_pointCorr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_p_pointCorr
}
//--------------------------------------------------------
/**
 *	Read attribute az_v_Bahn related method
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_v_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_v_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_v_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_v_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_v_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute az_v_Bahn related method
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_v_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_v_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_v_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_v_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute az_v_Soll related method
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_v_Soll(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_v_Soll(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_v_Soll) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_v_Soll_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_v_Soll
}
//--------------------------------------------------------
/**
 *	Write attribute az_v_Soll related method
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_v_Soll(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_v_Soll(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_v_Soll) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_v_Soll
}
//--------------------------------------------------------
/**
 *	Read attribute az_v_Ist related method
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_v_Ist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_v_Ist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_v_Ist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_v_Ist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_v_Ist
}
//--------------------------------------------------------
/**
 *	Write attribute az_v_Ist related method
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_v_Ist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_v_Ist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_v_Ist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_v_Ist
}
//--------------------------------------------------------
/**
 *	Read attribute az_a_Bahn related method
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_a_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_a_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_a_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_a_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_a_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute az_a_Bahn related method
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_a_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_a_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_a_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_a_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute az_motor_selection_1 related method
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_motor_selection_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_motor_selection_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_motor_selection_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_motor_selection_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_motor_selection_1
}
//--------------------------------------------------------
/**
 *	Write attribute az_motor_selection_1 related method
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_motor_selection_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_motor_selection_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_motor_selection_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_motor_selection_1
}
//--------------------------------------------------------
/**
 *	Read attribute az_motor_selection_2 related method
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_motor_selection_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_motor_selection_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_motor_selection_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_motor_selection_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_motor_selection_2
}
//--------------------------------------------------------
/**
 *	Write attribute az_motor_selection_2 related method
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_motor_selection_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_motor_selection_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_motor_selection_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_motor_selection_2
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_selection_1 related method
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_selection_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_selection_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_selection_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_selection_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_selection_1
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_selection_1 related method
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_selection_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_selection_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_selection_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_selection_1
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_selection_2 related method
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_selection_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_selection_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_selection_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_selection_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_selection_2
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_selection_2 related method
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_selection_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_selection_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_selection_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_selection_2
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_open_1 related method
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_open_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_open_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_open_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_open_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_open_1
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_open_1 related method
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_open_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_open_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_open_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_open_1
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_open_2 related method
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_open_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_open_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_open_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_open_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_open_2
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_open_2 related method
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_open_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_open_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_open_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_open_2
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_command_1 related method
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_command_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_command_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_command_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_command_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_command_1
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_command_1 related method
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_command_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_command_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_command_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_command_1
}
//--------------------------------------------------------
/**
 *	Read attribute az_brakes_command_2 related method
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_brakes_command_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_brakes_command_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_brakes_command_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_brakes_command_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_brakes_command_2
}
//--------------------------------------------------------
/**
 *	Write attribute az_brakes_command_2 related method
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_brakes_command_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_brakes_command_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_brakes_command_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_brakes_command_2
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_initOk related method
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_initOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_initOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_initOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_initOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_initOk
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_initOk related method
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_initOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_initOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_initOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_initOk
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_sim related method
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_sim(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_sim(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_sim) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_sim_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_sim
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_sim related method
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_sim(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_sim(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_sim) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_sim
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_reset related method
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_reset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_reset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_reset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_reset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_reset
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_reset related method
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_reset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_reset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_reset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_reset
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_notStop related method
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_notStop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_notStop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_notStop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_notStop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_notStop
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_notStop related method
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_notStop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_notStop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_notStop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_notStop
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_bereit related method
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_bereit(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_bereit(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_bereit) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_bereit_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_bereit
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_bereit related method
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_bereit(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_bereit(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_bereit) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_bereit
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_motEin related method
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_motEin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_motEin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_motEin) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_motEin_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_motEin
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_motEin related method
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_motEin(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_motEin(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_motEin) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_motEin
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_praez related method
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_praez(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_praez(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_praez) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_praez_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_praez
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_praez related method
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_praez(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_praez(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_praez) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_praez
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_lockAT related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_lockAT(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_lockAT(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_lockAT) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_lockAT_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_lockAT
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_lockAT related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_lockAT(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_lockAT(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_lockAT) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_lockAT
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_override related method
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_override
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_override related method
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_override
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_posOffset related method
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_posOffset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_posOffset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_posOffset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_posOffset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_posOffset
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_posOffset related method
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_posOffset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_posOffset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_posOffset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_posOffset
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_active related method
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_active(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_active(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_active) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_active_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_active
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_active related method
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_active(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_active(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_active) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_active
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_parkPos related method
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_parkPos(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_parkPos(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_parkPos) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_parkPos_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_parkPos
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_parkPos related method
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_parkPos(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_parkPos(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_parkPos) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_parkPos
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_pointCorr related method
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_pointCorr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_pointCorr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_pointCorr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_pointCorr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_pointCorr
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_pointCorr related method
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_pointCorr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_pointCorr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_pointCorr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_pointCorr
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_praezOk related method
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_praezOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_praezOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_praezOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_praezOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_praezOk
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_praezOk related method
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_praezOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_praezOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_praezOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_praezOk
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_inactive related method
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_inactive(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_inactive(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_inactive) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_inactive_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_inactive
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_inactive related method
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_inactive(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_inactive(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_inactive) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_inactive
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_deactivate related method
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_deactivate(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_deactivate(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_deactivate) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_deactivate_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_deactivate
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_deactivate related method
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_deactivate(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_deactivate(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_deactivate) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_deactivate
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_activate related method
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_activate(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_activate(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_activate) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_activate_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_activate
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_activate related method
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_activate(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_activate(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_activate) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_activate
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_encReset related method
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_encReset(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_encReset(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_encReset) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_encReset_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_encReset
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_encReset related method
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_encReset(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_encReset(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_encReset) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_encReset
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_encResetDone related method
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_encResetDone(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_encResetDone(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_encResetDone) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_encResetDone_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_encResetDone
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_encResetDone related method
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_encResetDone(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_encResetDone(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_encResetDone) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_encResetDone
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_encOp related method
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_encOp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_encOp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_encOp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_encOp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_encOp
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_encOp related method
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_encOp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_encOp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_encOp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_encOp
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_confOk related method
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_confOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_confOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_confOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_confOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_confOk
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_confOk related method
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_confOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_confOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_confOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_confOk
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_sector_B related method
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_sector_B(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_sector_B(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_sector_B) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_sector_B_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_sector_B
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_sector_B related method
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_sector_B(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_sector_B(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_sector_B) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_sector_B
}
//--------------------------------------------------------
/**
 *	Read attribute el_abs_sector_A related method
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_abs_sector_A(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_abs_sector_A(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_abs_sector_A) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_abs_sector_A_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_abs_sector_A
}
//--------------------------------------------------------
/**
 *	Write attribute el_abs_sector_A related method
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_abs_sector_A(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_abs_sector_A(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_abs_sector_A) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_abs_sector_A
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_posOk related method
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_posOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_posOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_posOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_posOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_posOk
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_posOk related method
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_posOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_posOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_posOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_posOk
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_preUp related method
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_preUp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_preUp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_preUp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_preUp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_preUp
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_preUp related method
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_preUp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_preUp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_preUp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_preUp
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_preDn related method
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_preDn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_preDn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_preDn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_preDn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_preDn
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_preDn related method
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_preDn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_preDn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_preDn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_preDn
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_dirDn related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_dirDn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_dirDn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_dirDn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_dirDn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_dirDn
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_dirDn related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_dirDn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_dirDn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_dirDn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_dirDn
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin1_Extr related method
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin1_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin1_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin1_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin1_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin1_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin1_Extr related method
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin1_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin1_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin1_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin1_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin1_Retr related method
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin1_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin1_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin1_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin1_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin1_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin1_Retr related method
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin1_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin1_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin1_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin1_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin1_err related method
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin1_err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin1_err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin1_err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin1_err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin1_err
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin1_err related method
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin1_err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin1_err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin1_err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin1_err
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin1_on related method
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin1_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin1_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin1_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin1_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin1_on
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin1_on related method
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin1_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin1_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin1_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin1_on
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin2_Extr related method
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin2_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin2_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin2_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin2_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin2_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin2_Extr related method
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin2_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin2_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin2_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin2_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin2_Retr related method
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin2_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin2_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin2_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin2_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin2_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin2_Retr related method
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin2_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin2_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin2_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin2_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin2_err related method
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin2_err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin2_err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin2_err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin2_err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin2_err
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin2_err related method
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin2_err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin2_err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin2_err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin2_err
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_pin2_on related method
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_pin2_on(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_pin2_on(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_pin2_on) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_pin2_on_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_pin2_on
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_pin2_on related method
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_pin2_on(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_pin2_on(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_pin2_on) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_pin2_on
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_cmd1_Extr related method
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_cmd1_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_cmd1_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_cmd1_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_cmd1_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_cmd1_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_cmd1_Extr related method
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_cmd1_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_cmd1_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_cmd1_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_cmd1_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_cmd1_Retr related method
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_cmd1_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_cmd1_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_cmd1_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_cmd1_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_cmd1_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_cmd1_Retr related method
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_cmd1_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_cmd1_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_cmd1_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_cmd1_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_cmd2_Extr related method
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_cmd2_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_cmd2_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_cmd2_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_cmd2_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_cmd2_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_cmd2_Extr related method
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_cmd2_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_cmd2_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_cmd2_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_cmd2_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute el_stow_cmd2_Retr related method
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_stow_cmd2_Retr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_stow_cmd2_Retr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_stow_cmd2_Retr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_stow_cmd2_Retr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_stow_cmd2_Retr
}
//--------------------------------------------------------
/**
 *	Write attribute el_stow_cmd2_Retr related method
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_stow_cmd2_Retr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_stow_cmd2_Retr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_stow_cmd2_Retr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_stow_cmd2_Retr
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Error_Active related method
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Error_Active(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Error_Active(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Error_Active) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Error_Active_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Error_Active
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Error_Active related method
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Error_Active(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Error_Active(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Error_Active) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Error_Active
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Rate_Loop related method
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Rate_Loop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Rate_Loop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Rate_Loop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Rate_Loop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Rate_Loop
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Rate_Loop related method
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Rate_Loop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Rate_Loop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Rate_Loop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Rate_Loop
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Group related method
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Group(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Group(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Group) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Group_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Group
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Group related method
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Group(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Group(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Group) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Group
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Override related method
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Override
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Override related method
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Override
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Safety_Dev related method
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Safety_Dev(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Safety_Dev(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Safety_Dev) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Safety_Dev_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Safety_Dev
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Safety_Dev related method
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Safety_Dev(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Safety_Dev(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Safety_Dev) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Safety_Dev
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Extern related method
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Extern(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Extern(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Extern) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Extern_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Extern
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Extern related method
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Extern(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Extern(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Extern) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Extern
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Power related method
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Power(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Power(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Power) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Power_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Power
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Power related method
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Power(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Power(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Power) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Power
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Brake related method
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Brake(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Brake(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Brake) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Brake_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Brake
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Brake related method
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Brake(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Brake(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Brake) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Brake
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Mot_ready(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Mot_ready(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Mot_ready) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Mot_ready_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Mot_ready
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Mot_ready(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Mot_ready(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Mot_ready) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Mot_ready
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Motor related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Motor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Motor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Motor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Motor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Motor
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Motor related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Motor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Motor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Motor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Motor
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Mot_Tacho related method
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Mot_Tacho(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Mot_Tacho(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Mot_Tacho) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Mot_Tacho_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Mot_Tacho
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Mot_Tacho related method
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Mot_Tacho(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Mot_Tacho(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Mot_Tacho) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Mot_Tacho
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Mot_Comm related method
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Mot_Comm(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Mot_Comm(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Mot_Comm) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Mot_Comm_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Mot_Comm
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Mot_Comm related method
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Mot_Comm(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Mot_Comm(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Mot_Comm) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Mot_Comm
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Mot_Timeout related method
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Mot_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Mot_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Mot_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Mot_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Mot_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Mot_Timeout related method
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Mot_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Mot_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Mot_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Mot_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_v_Mot_Exceed related method
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_v_Mot_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_v_Mot_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_v_Mot_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_v_Mot_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_v_Mot_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_v_Mot_Exceed related method
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_v_Mot_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_v_Mot_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_v_Mot_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_v_Mot_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_v_Dev_Exceed related method
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_v_Dev_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_v_Dev_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_v_Dev_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_v_Dev_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_v_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_v_Dev_Exceed related method
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_v_Dev_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_v_Dev_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_v_Dev_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_v_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Mot_Overload related method
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Mot_Overload(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Mot_Overload(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Mot_Overload) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Mot_Overload_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Mot_Overload
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Mot_Overload related method
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Mot_Overload(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Mot_Overload(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Mot_Overload) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Mot_Overload
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Em_Limit_Dn related method
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Em_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Em_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Em_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Em_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Em_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Em_Limit_Dn related method
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Em_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Em_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Em_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Em_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Em_Limit_Up related method
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Em_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Em_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Em_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Em_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Em_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Em_Limit_Up related method
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Em_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Em_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Em_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Em_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Em_Stop related method
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Em_Stop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Em_Stop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Em_Stop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Em_Stop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Em_Stop
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Em_Stop related method
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Em_Stop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Em_Stop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Em_Stop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Em_Stop
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_SW_InterLock related method
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_SW_InterLock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_SW_InterLock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_SW_InterLock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_SW_InterLock_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_SW_InterLock
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_SW_InterLock related method
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_SW_InterLock(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_SW_InterLock(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_SW_InterLock) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_SW_InterLock
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_p_Range_Exceed related method
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_p_Range_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_p_Range_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_p_Range_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_p_Range_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_p_Range_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_p_Range_Exceed related method
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_p_Range_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_p_Range_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_p_Range_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_p_Range_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_p_Dev_Exceed related method
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_p_Dev_Exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_p_Dev_Exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_p_Dev_Exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_p_Dev_Exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_p_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_p_Dev_Exceed related method
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_p_Dev_Exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_p_Dev_Exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_p_Dev_Exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_p_Dev_Exceed
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_No_Pos_Enc_Sync related method
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_No_Pos_Enc_Sync(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_No_Pos_Enc_Sync(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_No_Pos_Enc_Sync) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_No_Pos_Enc_Sync_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_No_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_No_Pos_Enc_Sync related method
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_No_Pos_Enc_Sync(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_No_Pos_Enc_Sync(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_No_Pos_Enc_Sync) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_No_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Pos_Enc_Sync related method
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Pos_Enc_Sync(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Pos_Enc_Sync(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Pos_Enc_Sync) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Pos_Enc_Sync_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Pos_Enc_Sync related method
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Pos_Enc_Sync(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Pos_Enc_Sync(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Pos_Enc_Sync) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Pos_Enc_Sync
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Pos_Enc related method
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Pos_Enc(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Pos_Enc(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Pos_Enc) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Pos_Enc_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Pos_Enc
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Pos_Enc related method
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Pos_Enc(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Pos_Enc(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Pos_Enc) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Pos_Enc
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Pos_Enc_Step related method
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Pos_Enc_Step(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Pos_Enc_Step(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Pos_Enc_Step) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Pos_Enc_Step_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Pos_Enc_Step
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Pos_Enc_Step related method
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Pos_Enc_Step(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Pos_Enc_Step(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Pos_Enc_Step) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Pos_Enc_Step
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Stow related method
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Stow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Stow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Stow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Stow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Stow
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Stow related method
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Stow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Stow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Stow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Stow
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Stow_Timeout related method
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Stow_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Stow_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Stow_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Stow_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Stow_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Stow_Timeout related method
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Stow_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Stow_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Stow_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Stow_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Handcrank related method
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Handcrank(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Handcrank(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Handcrank) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Handcrank_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Handcrank
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Handcrank related method
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Handcrank(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Handcrank(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Handcrank) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Handcrank
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Cmd_Timeout related method
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Cmd_Timeout(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Cmd_Timeout(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Cmd_Timeout) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Cmd_Timeout_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Cmd_Timeout
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Cmd_Timeout related method
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Cmd_Timeout(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Cmd_Timeout(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Cmd_Timeout) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Cmd_Timeout
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Field_Bus related method
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Field_Bus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Field_Bus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Field_Bus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Field_Bus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Field_Bus
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Field_Bus related method
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Field_Bus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Field_Bus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Field_Bus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Field_Bus
}
//--------------------------------------------------------
/**
 *	Read attribute el_err_Lim_Err related method
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_err_Lim_Err(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_err_Lim_Err(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_err_Lim_Err) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_err_Lim_Err_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_err_Lim_Err
}
//--------------------------------------------------------
/**
 *	Write attribute el_err_Lim_Err related method
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_err_Lim_Err(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_err_Lim_Err(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_err_Lim_Err) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_err_Lim_Err
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Param_Fault related method
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Param_Fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Param_Fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Param_Fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Param_Fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Param_Fault
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Param_Fault related method
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Param_Fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Param_Fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Param_Fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Param_Fault
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Rate_Mode related method
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Rate_Mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Rate_Mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Rate_Mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Rate_Mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Rate_Mode
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Rate_Mode related method
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Rate_Mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Rate_Mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Rate_Mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Rate_Mode
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Degraded_Mode related method
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Degraded_Mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Degraded_Mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Degraded_Mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Degraded_Mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Degraded_Mode
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Degraded_Mode related method
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Degraded_Mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Degraded_Mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Degraded_Mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Degraded_Mode
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Override related method
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Override(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Override(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Override) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Override_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Override
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Override related method
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Override(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Override(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Override) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Override
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Heat_Up_Motors related method
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Heat_Up_Motors(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Heat_Up_Motors(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Heat_Up_Motors) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Heat_Up_Motors_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Heat_Up_Motors
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Heat_Up_Motors related method
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Heat_Up_Motors(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Heat_Up_Motors(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Heat_Up_Motors) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Heat_Up_Motors
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_extern_Stop related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_extern_Stop(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_extern_Stop(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_extern_Stop) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_extern_Stop_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_extern_Stop
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_extern_Stop related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_extern_Stop(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_extern_Stop(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_extern_Stop) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_extern_Stop
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_LubricationFault related method
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_LubricationFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_LubricationFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_LubricationFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_LubricationFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_LubricationFault
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_LubricationFault related method
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_LubricationFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_LubricationFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_LubricationFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_LubricationFault
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Brake_openInaktiv related method
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Brake_openInaktiv(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Brake_openInaktiv(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Brake_openInaktiv) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Brake_openInaktiv_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Brake_openInaktiv
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Brake_openInaktiv related method
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Brake_openInaktiv(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Brake_openInaktiv(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Brake_openInaktiv) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Brake_openInaktiv
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Mot_ready(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Mot_ready(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Mot_ready) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Mot_ready_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Mot_ready
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Mot_ready related method
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Mot_ready(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Mot_ready(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Mot_ready) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Mot_ready
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_MotFanFault related method
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_MotFanFault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_MotFanFault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_MotFanFault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_MotFanFault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_MotFanFault
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_MotFanFault related method
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_MotFanFault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_MotFanFault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_MotFanFault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_MotFanFault
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_MotWarn related method
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_MotWarn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_MotWarn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_MotWarn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_MotWarn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_MotWarn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_MotWarn related method
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_MotWarn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_MotWarn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_MotWarn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_MotWarn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Mmax_reached related method
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Mmax_reached(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Mmax_reached(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Mmax_reached) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Mmax_reached_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Mmax_reached
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Mmax_reached related method
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Mmax_reached(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Mmax_reached(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Mmax_reached) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Mmax_reached
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_PreLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_PreLimDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_PreLimDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_PreLimDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_PreLimDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_PreLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_PreLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_PreLimDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_PreLimDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_PreLimDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_PreLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_PreLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_PreLimUp_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_PreLimUp_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_PreLimUp_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_PreLimUp_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_PreLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_PreLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_PreLimUp_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_PreLimUp_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_PreLimUp_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_PreLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_FinLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_FinLimDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_FinLimDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_FinLimDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_FinLimDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_FinLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_FinLimDn_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_FinLimDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_FinLimDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_FinLimDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_FinLimDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_FinLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_FinLimUp_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_FinLimUp_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_FinLimUp_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_FinLimUp_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_FinLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_FinLimUp_inconsist related method
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_FinLimUp_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_FinLimUp_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_FinLimUp_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_FinLimUp_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pre_Limit_Up related method
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pre_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pre_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pre_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pre_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pre_Limit_Up related method
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pre_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pre_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pre_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pre_Limit_Dn related method
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pre_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pre_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pre_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pre_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pre_Limit_Dn related method
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pre_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pre_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pre_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Fin_Limit_Up related method
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Fin_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Fin_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Fin_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Fin_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Fin_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Fin_Limit_Up related method
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Fin_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Fin_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Fin_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Fin_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Fin_Limit_Dn related method
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Fin_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Fin_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Fin_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Fin_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Fin_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Fin_Limit_Dn related method
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Fin_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Fin_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Fin_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Fin_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pre_Pre_Limit_Up related method
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pre_Pre_Limit_Up) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pre_Pre_Limit_Up_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pre_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pre_Pre_Limit_Up related method
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pre_Pre_Limit_Up) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pre_Pre_Limit_Up
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pre_Pre_Limit_Dn related method
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pre_Pre_Limit_Dn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pre_Pre_Limit_Dn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pre_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pre_Pre_Limit_Dn related method
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pre_Pre_Limit_Dn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pre_Pre_Limit_Dn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_EmLimitDn_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_EmLimitDn_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_EmLimitDn_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_EmLimitDn_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_EmLimitDn_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_EmLimitDn_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_EmLimitDn_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_EmLimitDn_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_EmLimitDn_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_EmLimitDn_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_EmLimitDn_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_EmLimitUP_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_EmLimitUP_inconsist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_EmLimitUP_inconsist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_EmLimitUP_inconsist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_EmLimitUP_inconsist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_EmLimitUP_inconsist
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_EmLimitUP_inconsist related method
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_EmLimitUP_inconsist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_EmLimitUP_inconsist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_EmLimitUP_inconsist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_EmLimitUP_inconsist
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pos_Safe_Enc_Warn related method
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pos_Safe_Enc_Warn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pos_Safe_Enc_Warn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pos_Safe_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pos_Safe_Enc_Warn related method
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pos_Safe_Enc_Warn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pos_Safe_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Pos_Enc_Warn related method
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Pos_Enc_Warn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Pos_Enc_Warn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Pos_Enc_Warn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Pos_Enc_Warn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Pos_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Pos_Enc_Warn related method
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Pos_Enc_Warn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Pos_Enc_Warn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Pos_Enc_Warn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Pos_Enc_Warn
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Stow_Pin_Fault related method
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Stow_Pin_Fault(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Stow_Pin_Fault(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Stow_Pin_Fault) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Stow_Pin_Fault_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Stow_Pin_Fault
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Stow_Pin_Fault related method
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Stow_Pin_Fault(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Stow_Pin_Fault(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Stow_Pin_Fault) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Stow_Pin_Fault
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Stowpins_Extr related method
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Stowpins_Extr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Stowpins_Extr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Stowpins_Extr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Stowpins_Extr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Stowpins_Extr
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Stowpins_Extr related method
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Stowpins_Extr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Stowpins_Extr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Stowpins_Extr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Stowpins_Extr
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_lowPowerMode related method
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_lowPowerMode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_lowPowerMode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_lowPowerMode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_lowPowerMode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_lowPowerMode
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_lowPowerMode related method
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_lowPowerMode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_lowPowerMode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_lowPowerMode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_lowPowerMode
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Motor_Overload related method
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Motor_Overload(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Motor_Overload(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Motor_Overload) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Motor_Overload_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Motor_Overload
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Motor_Overload related method
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Motor_Overload(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Motor_Overload(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Motor_Overload) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Motor_Overload
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Motor_Temp related method
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Motor_Temp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Motor_Temp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Motor_Temp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Motor_Temp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Motor_Temp
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Motor_Temp related method
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Motor_Temp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Motor_Temp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Motor_Temp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Motor_Temp
}
//--------------------------------------------------------
/**
 *	Read attribute el_wa_Vel_Limit related method
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_wa_Vel_Limit(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_wa_Vel_Limit(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_wa_Vel_Limit) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_wa_Vel_Limit_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_wa_Vel_Limit
}
//--------------------------------------------------------
/**
 *	Write attribute el_wa_Vel_Limit related method
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_wa_Vel_Limit(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_wa_Vel_Limit(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_wa_Vel_Limit) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_wa_Vel_Limit
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_initok related method
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_initok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_initok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_initok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_initok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_initok
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_initok related method
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_initok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_initok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_initok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_initok
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_Ok related method
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_Ok(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_Ok(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_Ok) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_Ok_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_Ok
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_Ok related method
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_Ok(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_Ok(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_Ok) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_Ok
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_commErr related method
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_commErr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_commErr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_commErr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_commErr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_commErr
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_commErr related method
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_commErr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_commErr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_commErr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_commErr
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_overflow related method
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_overflow(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_overflow(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_overflow) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_overflow_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_overflow
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_overflow related method
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_overflow(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_overflow(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_overflow) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_overflow
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_warning related method
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_warning(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_warning(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_warning) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_warning_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_warning
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_warning related method
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_warning(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_warning(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_warning) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_warning
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_operational related method
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_operational(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_operational(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_operational) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_operational_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_operational
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_operational related method
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_operational(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_operational(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_operational) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_operational
}
//--------------------------------------------------------
/**
 *	Read attribute el_disc_error related method
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_disc_error(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_disc_error(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_disc_error) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_disc_error_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_disc_error
}
//--------------------------------------------------------
/**
 *	Write attribute el_disc_error related method
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_disc_error(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_disc_error(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_disc_error) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_disc_error
}
//--------------------------------------------------------
/**
 *	Read attribute el_axis_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_axis_state(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_axis_state(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_axis_state) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_axis_state_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_axis_state
}
//--------------------------------------------------------
/**
 *	Write attribute el_axis_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_axis_state(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_axis_state(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_axis_state) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_axis_state
}
//--------------------------------------------------------
/**
 *	Read attribute el_axis_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_axis_actual_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_axis_actual_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_axis_actual_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_axis_actual_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_axis_actual_mode
}
//--------------------------------------------------------
/**
 *	Write attribute el_axis_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_axis_actual_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_axis_actual_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_axis_actual_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_axis_actual_mode
}
//--------------------------------------------------------
/**
 *	Read attribute el_axis_trajectory_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_axis_trajectory_state(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_axis_trajectory_state(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_axis_trajectory_state) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_axis_trajectory_state_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_axis_trajectory_state
}
//--------------------------------------------------------
/**
 *	Write attribute el_axis_trajectory_state related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_axis_trajectory_state(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_axis_trajectory_state(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_axis_trajectory_state) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_axis_trajectory_state
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_Soll related method
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_Soll(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_Soll(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_Soll) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_Soll_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_Soll
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_Soll related method
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_Soll(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_Soll(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_Soll) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_Soll
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_Bahn related method
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_Bahn related method
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_Ist related method
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_Ist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_Ist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_Ist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_Ist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_Ist
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_Ist related method
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_Ist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_Ist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_Ist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_Ist
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_Offs related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_Offs(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_Offs(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_Offs) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_Offs_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_Offs
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_Offs related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_Offs(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_Offs(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_Offs) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_Offs
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_Abw related method
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_Abw(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_Abw(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_Abw) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_Abw_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_Abw
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_Abw related method
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_Abw(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_Abw(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_Abw) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_Abw
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_AbwFil related method
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_AbwFil(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_AbwFil(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_AbwFil) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_AbwFil_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_AbwFil
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_AbwFil related method
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_AbwFil(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_AbwFil(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_AbwFil) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_AbwFil
}
//--------------------------------------------------------
/**
 *	Read attribute el_p_pointCorr related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_p_pointCorr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_p_pointCorr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_p_pointCorr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_p_pointCorr_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_p_pointCorr
}
//--------------------------------------------------------
/**
 *	Write attribute el_p_pointCorr related method
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_p_pointCorr(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_p_pointCorr(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_p_pointCorr) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_p_pointCorr
}
//--------------------------------------------------------
/**
 *	Read attribute el_v_Bahn related method
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_v_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_v_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_v_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_v_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_v_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute el_v_Bahn related method
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_v_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_v_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_v_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_v_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute el_v_Soll related method
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_v_Soll(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_v_Soll(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_v_Soll) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_v_Soll_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_v_Soll
}
//--------------------------------------------------------
/**
 *	Write attribute el_v_Soll related method
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_v_Soll(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_v_Soll(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_v_Soll) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_v_Soll
}
//--------------------------------------------------------
/**
 *	Read attribute el_v_Ist related method
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_v_Ist(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_v_Ist(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_v_Ist) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_v_Ist_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_v_Ist
}
//--------------------------------------------------------
/**
 *	Write attribute el_v_Ist related method
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_v_Ist(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_v_Ist(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_v_Ist) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_v_Ist
}
//--------------------------------------------------------
/**
 *	Read attribute el_a_Bahn related method
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_a_Bahn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_a_Bahn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_a_Bahn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_a_Bahn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_a_Bahn
}
//--------------------------------------------------------
/**
 *	Write attribute el_a_Bahn related method
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_a_Bahn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_a_Bahn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_a_Bahn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_a_Bahn
}
//--------------------------------------------------------
/**
 *	Read attribute el_motor_selection_1 related method
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_motor_selection_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_motor_selection_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_motor_selection_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_motor_selection_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_motor_selection_1
}
//--------------------------------------------------------
/**
 *	Write attribute el_motor_selection_1 related method
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_motor_selection_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_motor_selection_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_motor_selection_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_motor_selection_1
}
//--------------------------------------------------------
/**
 *	Read attribute el_motor_selection_2 related method
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_motor_selection_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_motor_selection_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_motor_selection_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_motor_selection_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_motor_selection_2
}
//--------------------------------------------------------
/**
 *	Write attribute el_motor_selection_2 related method
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_motor_selection_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_motor_selection_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_motor_selection_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_motor_selection_2
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_selection_1 related method
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_selection_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_selection_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_selection_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_selection_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_selection_1
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_selection_1 related method
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_selection_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_selection_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_selection_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_selection_1
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_selection_2 related method
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_selection_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_selection_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_selection_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_selection_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_selection_2
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_selection_2 related method
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_selection_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_selection_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_selection_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_selection_2
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_open_1 related method
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_open_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_open_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_open_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_open_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_open_1
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_open_1 related method
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_open_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_open_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_open_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_open_1
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_open_2 related method
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_open_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_open_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_open_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_open_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_open_2
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_open_2 related method
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_open_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_open_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_open_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_open_2
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_command_1 related method
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_command_1(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_command_1(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_command_1) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_command_1_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_command_1
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_command_1 related method
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_command_1(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_command_1(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_command_1) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_command_1
}
//--------------------------------------------------------
/**
 *	Read attribute el_brakes_command_2 related method
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_brakes_command_2(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_brakes_command_2(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_brakes_command_2) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_brakes_command_2_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_brakes_command_2
}
//--------------------------------------------------------
/**
 *	Write attribute el_brakes_command_2 related method
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_brakes_command_2(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_brakes_command_2(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_brakes_command_2) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_brakes_command_2
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_initOk related method
 *	Description: The inizialization of the motor/amplifier system is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_initOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_initOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_initOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_initOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_initOk
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_initOk related method
 *	Description: The inizialization of the motor/amplifier system is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_initOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_initOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_initOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_initOk
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_bereit related method
 *	Description: The motor is faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_bereit(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_bereit(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_bereit) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_bereit_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_bereit
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_bereit related method
 *	Description: The motor is faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_bereit(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_bereit(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_bereit) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_bereit
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_aktiv related method
 *	Description: The motor is active and ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_aktiv(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_aktiv(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_aktiv) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_aktiv_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_aktiv
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_aktiv related method
 *	Description: The motor is active and ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_aktiv(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_aktiv(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_aktiv) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_aktiv
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_drzNull related method
 *	Description: The motor rotation is less than 25 rot/min.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_drzNull(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_drzNull(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_drzNull) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_drzNull_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_drzNull
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_drzNull related method
 *	Description: The motor rotation is less than 25 rot/min.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_drzNull(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_drzNull(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_drzNull) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_drzNull
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_drzOk related method
 *	Description: The actual rotation of the motor is correct (v_commanded = v_actual).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_drzOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_drzOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_drzOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_drzOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_drzOk
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_drzOk related method
 *	Description: The actual rotation of the motor is correct (v_commanded = v_actual).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_drzOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_drzOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_drzOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_drzOk
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_posOk related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_posOk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_posOk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_posOk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_posOk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_posOk
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_posOk related method
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_posOk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_posOk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_posOk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_posOk
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_brOffen related method
 *	Description: Amplifier reports the brake is open.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_brOffen(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_brOffen(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_brOffen) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_brOffen_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_brOffen
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_brOffen related method
 *	Description: Amplifier reports the brake is open.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_brOffen(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_brOffen(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_brOffen) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_brOffen
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_errBus related method
 *	Description: The communication ACU amplifier is faulty; possible errors are: EtherCAT communication error; working counter state reports invalid data; service channel communication error; the Amplifier system is not on torque mode; while the ACU software commands torque set points; KW module (ID11 - Status class 1-errors) reports communication error (please refer to AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_errBus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_errBus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_errBus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_errBus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_errBus
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_errBus related method
 *	Description: The communication ACU amplifier is faulty; possible errors are: EtherCAT communication error; working counter state reports invalid data; service channel communication error; the Amplifier system is not on torque mode; while the ACU software commands torque set points; KW module (ID11 - Status class 1-errors) reports communication error (please refer to AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_errBus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_errBus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_errBus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_errBus
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_errServo related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports an motor error (speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready message is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (Status class 1-errors) is set (please refer to the AMK documentation); ID181 (diagnosis manufacturer class 2) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_errServo(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_errServo(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_errServo) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_errServo_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_errServo
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_errServo related method
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports an motor error (speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready message is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (Status class 1-errors) is set (please refer to the AMK documentation); ID181 (diagnosis manufacturer class 2) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_errServo(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_errServo(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_errServo) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_errServo
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_errSensor related method
 *	Description: Error in the signal feedback of the motor encoder, e.g. break of encoder cable or encoder error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_errSensor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_errSensor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_errSensor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_errSensor_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_errSensor
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_errSensor related method
 *	Description: Error in the signal feedback of the motor encoder, e.g. break of encoder cable or encoder error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_errSensor(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_errSensor(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_errSensor) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_errSensor
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn related method
 *	Description: Motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports an motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn related method
 *	Description: Motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports an motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_iQuad_t related method
 *	Description: Power limit warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_iQuad_t(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_iQuad_t(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_iQuad_t) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_iQuad_t_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_iQuad_t
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_iQuad_t related method
 *	Description: Power limit warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_iQuad_t(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_iQuad_t(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_iQuad_t) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_iQuad_t
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_Ampl related method
 *	Description: Amplifier temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_Ampl(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_Ampl(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_Ampl) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_Ampl_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_Ampl
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_Ampl related method
 *	Description: Amplifier temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_Ampl(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_Ampl(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_Ampl) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_Ampl
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_Mot related method
 *	Description: Motor over temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_Mot(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_Mot(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_Mot) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_Mot_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_Mot
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_Mot related method
 *	Description: Motor over temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_Mot(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_Mot(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_Mot) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_Mot
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_Uzk related method
 *	Description: The intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_Uzk(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_Uzk(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_Uzk) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_Uzk_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_Uzk
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_Uzk related method
 *	Description: The intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_Uzk(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_Uzk(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_Uzk) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_Uzk
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_v_exceed related method
 *	Description: Speed of rotation not in valid ranges.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_v_exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_v_exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_v_exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_v_exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_v_exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_v_exceed related method
 *	Description: Speed of rotation not in valid ranges.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_v_exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_v_exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_v_exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_v_exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_M_exceed related method
 *	Description: Maximum torque exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_M_exceed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_M_exceed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_M_exceed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_M_exceed_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_M_exceed
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_M_exceed related method
 *	Description: Maximum torque exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_M_exceed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_M_exceed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_M_exceed) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_M_exceed
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_aktiv_intern related method
 *	Description: Amplifier message axis active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_aktiv_intern(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_aktiv_intern(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_aktiv_intern) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_aktiv_intern_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_aktiv_intern
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_aktiv_intern related method
 *	Description: Amplifier message axis active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_aktiv_intern(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_aktiv_intern(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_aktiv_intern) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_aktiv_intern
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_sts_RF related method
 *	Description: The motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_sts_RF(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_sts_RF(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_sts_RF) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_sts_RF_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_sts_RF
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_sts_RF related method
 *	Description: The motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_sts_RF(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_sts_RF(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_sts_RF) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_sts_RF
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_sts_EF related method
 *	Description: The amplifier enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_sts_EF(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_sts_EF(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_sts_EF) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_sts_EF_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_sts_EF
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_sts_EF related method
 *	Description: The amplifier enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_sts_EF(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_sts_EF(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_sts_EF) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_sts_EF
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_sts_SBM related method
 *	Description: The ACU software activates the motors while the system ready message is not set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_sts_SBM(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_sts_SBM(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_sts_SBM) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_sts_SBM_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_sts_SBM
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_sts_SBM related method
 *	Description: The ACU software activates the motors while the system ready message is not set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_sts_SBM(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_sts_SBM(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_sts_SBM) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_sts_SBM
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_M_mode related method
 *	Description: Amplifier system is in torque mode; the motor expect torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_M_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_M_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_M_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_M_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_M_mode
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_M_mode related method
 *	Description: Amplifier system is in torque mode; the motor expect torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_M_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_M_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_M_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_M_mode
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_wrongMode related method
 *	Description: The amplifier system is not on torque mode while the ACU software commands torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_wrongMode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_wrongMode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_wrongMode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_wrongMode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_wrongMode
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_wrongMode related method
 *	Description: The amplifier system is not on torque mode while the ACU software commands torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_wrongMode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_wrongMode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_wrongMode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_wrongMode
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_Pow_exceeded related method
 *	Description: Maximum power exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_Pow_exceeded(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_Pow_exceeded(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_Pow_exceeded) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_Pow_exceeded_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_Pow_exceeded
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_Pow_exceeded related method
 *	Description: Maximum power exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_Pow_exceeded(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_Pow_exceeded(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_Pow_exceeded) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_Pow_exceeded
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_Cooling related method
 *	Description: Excess temperature of cooling system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_Cooling(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_Cooling(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_Cooling) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_Cooling_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_Cooling
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_Cooling related method
 *	Description: Excess temperature of cooling system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_Cooling(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_Cooling(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_Cooling) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_Cooling
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_Extern related method
 *	Description: Excess temperature of external components.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_Extern(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_Extern(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_Extern) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_Extern_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_Extern
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_Extern related method
 *	Description: Excess temperature of external components.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_Extern(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_Extern(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_Extern) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_Extern
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_PowerSupply related method
 *	Description: Excess temperature of power supply module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_PowerSupply(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_PowerSupply(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_PowerSupply) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_PowerSupply_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_PowerSupply
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_PowerSupply related method
 *	Description: Excess temperature of power supply module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_PowerSupply(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_PowerSupply(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_PowerSupply) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_PowerSupply
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_warn_T_ERModule related method
 *	Description: Excess temperature of the KE module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_warn_T_ERModule(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_warn_T_ERModule(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_warn_T_ERModule) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_warn_T_ERModule_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_warn_T_ERModule
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_warn_T_ERModule related method
 *	Description: Excess temperature of the KE module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_warn_T_ERModule(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_warn_T_ERModule(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_warn_T_ERModule) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_warn_T_ERModule
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_temp related method
 *	Description: Temperature error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_temp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_temp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_temp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_temp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_temp
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_temp related method
 *	Description: Temperature error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_temp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_temp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_temp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_temp
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_iQuad_t related method
 *	Description: Power error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_iQuad_t(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_iQuad_t(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_iQuad_t) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_iQuad_t_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_iQuad_t
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_iQuad_t related method
 *	Description: Power error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_iQuad_t(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_iQuad_t(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_iQuad_t) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_iQuad_t
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_err_sts_M related method
 *	Description: The torque set point differs too much from the actual torque readout.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_err_sts_M(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_err_sts_M(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_err_sts_M) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_err_sts_M_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_err_sts_M
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_err_sts_M related method
 *	Description: The torque set point differs too much from the actual torque readout.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_err_sts_M(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_err_sts_M(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_err_sts_M) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_err_sts_M
}
//--------------------------------------------------------
/**
 *	Read attribute az1_mbs_V_Mode related method
 *	Description: Amplifier system is in velocity mode; the motor expect velocity set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_mbs_V_Mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_mbs_V_Mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_mbs_V_Mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_mbs_V_Mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_mbs_V_Mode
}
//--------------------------------------------------------
/**
 *	Write attribute az1_mbs_V_Mode related method
 *	Description: Amplifier system is in velocity mode; the motor expect velocity set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_mbs_V_Mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_mbs_V_Mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_mbs_V_Mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_mbs_V_Mode
}
//--------------------------------------------------------
/**
 *	Read attribute az1_actual_position related method
 *	Description: The actual position of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_actual_position(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_actual_position(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_actual_position) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_actual_position_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_actual_position
}
//--------------------------------------------------------
/**
 *	Write attribute az1_actual_position related method
 *	Description: The actual position of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_actual_position(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_actual_position(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_actual_position) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_actual_position
}
//--------------------------------------------------------
/**
 *	Read attribute az1_actual_velocity related method
 *	Description: The actual velocity of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_actual_velocity(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_actual_velocity(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_actual_velocity) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_actual_velocity_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_actual_velocity
}
//--------------------------------------------------------
/**
 *	Write attribute az1_actual_velocity related method
 *	Description: The actual velocity of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_actual_velocity(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_actual_velocity(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_actual_velocity) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_actual_velocity
}
//--------------------------------------------------------
/**
 *	Read attribute az1_actual_torque related method
 *	Description: The actual torque of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_actual_torque(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_actual_torque(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_actual_torque) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_actual_torque_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_actual_torque
}
//--------------------------------------------------------
/**
 *	Write attribute az1_actual_torque related method
 *	Description: The actual torque of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_actual_torque(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_actual_torque(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_actual_torque) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_actual_torque
}
//--------------------------------------------------------
/**
 *	Read attribute az1_rate_of_utilization related method
 *	Description: The actual rate of utilization of the motor (+/- 200 %); 100% means rated torque.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_rate_of_utilization(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_rate_of_utilization(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_rate_of_utilization) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_rate_of_utilization_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_rate_of_utilization
}
//--------------------------------------------------------
/**
 *	Write attribute az1_rate_of_utilization related method
 *	Description: The actual rate of utilization of the motor (+/- 200 %); 100% means rated torque.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_rate_of_utilization(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_rate_of_utilization(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_rate_of_utilization) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_rate_of_utilization
}
//--------------------------------------------------------
/**
 *	Read attribute az1_Motor_temperature related method
 *	Description: Motor temperature.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_Motor_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_Motor_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_Motor_temperature) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_Motor_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_Motor_temperature
}
//--------------------------------------------------------
/**
 *	Write attribute az1_Motor_temperature related method
 *	Description: Motor temperature.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_Motor_temperature(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_Motor_temperature(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_Motor_temperature) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_Motor_temperature
}
//--------------------------------------------------------
/**
 *	Read attribute az1_Motor_Overload_Inverter related method
 *	Description: Motor overload inverter.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_Motor_Overload_Inverter(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_Motor_Overload_Inverter(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_Motor_Overload_Inverter) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_Motor_Overload_Inverter_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_Motor_Overload_Inverter
}
//--------------------------------------------------------
/**
 *	Write attribute az1_Motor_Overload_Inverter related method
 *	Description: Motor overload inverter.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_Motor_Overload_Inverter(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_Motor_Overload_Inverter(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_Motor_Overload_Inverter) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_Motor_Overload_Inverter
}
//--------------------------------------------------------
/**
 *	Read attribute az1_Motor_overload related method
 *	Description: Motor overload.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_Motor_overload(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_Motor_overload(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_Motor_overload) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_Motor_overload_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_Motor_overload
}
//--------------------------------------------------------
/**
 *	Write attribute az1_Motor_overload related method
 *	Description: Motor overload.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_Motor_overload(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_Motor_overload(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_Motor_overload) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_Motor_overload
}
//--------------------------------------------------------
/**
 *	Read attribute az1_motErrorCode related method
 *	Description: Motor error code.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_motErrorCode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_motErrorCode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_motErrorCode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_motErrorCode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_motErrorCode
}
//--------------------------------------------------------
/**
 *	Write attribute az1_motErrorCode related method
 *	Description: Motor error code.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_motErrorCode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_motErrorCode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_motErrorCode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_motErrorCode
}
//--------------------------------------------------------
/**
 *	Read attribute az1_EmLimDn related method
 *	Description: DI inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_EmLimDn(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_EmLimDn(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_EmLimDn) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_EmLimDn_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_EmLimDn
}
//--------------------------------------------------------
/**
 *	Write attribute az1_EmLimDn related method
 *	Description: DI inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_EmLimDn(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_EmLimDn(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_EmLimDn) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_EmLimDn
}
//--------------------------------------------------------
/**
 *	Read attribute az1_EmLimUp related method
 *	Description: DO inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az1_EmLimUp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az1_EmLimUp(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az1_EmLimUp) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az1_EmLimUp_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az1_EmLimUp
}
//--------------------------------------------------------
/**
 *	Write attribute az1_EmLimUp related method
 *	Description: DO inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az1_EmLimUp(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az1_EmLimUp(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az1_EmLimUp) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az1_EmLimUp
}
//--------------------------------------------------------
/**
 *	Read attribute provaENUM related method
 *	Description: 
 *
 *	Data type:	Tango::DevEnum (provaENUMEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_provaENUM(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_provaENUM(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_provaENUM) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_provaENUM_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_provaENUM
}
//--------------------------------------------------------
/**
 *	Write attribute provaENUM related method
 *	Description: 
 *
 *	Data type:	Tango::DevEnum (provaENUMEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_provaENUM(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_provaENUM(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	provaENUMEnum	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_provaENUM) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_provaENUM
}
//--------------------------------------------------------
/**
 *	Read attribute azAxisStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_azAxisStatus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_azAxisStatus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_azAxisStatus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_azAxisStatus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_azAxisStatus
}
//--------------------------------------------------------
/**
 *	Write attribute azAxisStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_azAxisStatus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_azAxisStatus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_azAxisStatus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_azAxisStatus
}
//--------------------------------------------------------
/**
 *	Read attribute azAxisTrajectoryStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_azAxisTrajectoryStatus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_azAxisTrajectoryStatus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_azAxisTrajectoryStatus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_azAxisTrajectoryStatus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_azAxisTrajectoryStatus
}
//--------------------------------------------------------
/**
 *	Write attribute azAxisTrajectoryStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_azAxisTrajectoryStatus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_azAxisTrajectoryStatus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_azAxisTrajectoryStatus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_azAxisTrajectoryStatus
}
//--------------------------------------------------------
/**
 *	Read attribute azAxisActualModeString related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_azAxisActualModeString(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_azAxisActualModeString(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_azAxisActualModeString) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_azAxisActualModeString_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_azAxisActualModeString
}
//--------------------------------------------------------
/**
 *	Write attribute azAxisActualModeString related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_azAxisActualModeString(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_azAxisActualModeString(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_azAxisActualModeString) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_azAxisActualModeString
}
//--------------------------------------------------------
/**
 *	Read attribute elAxisStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_elAxisStatus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_elAxisStatus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_elAxisStatus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_elAxisStatus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_elAxisStatus
}
//--------------------------------------------------------
/**
 *	Write attribute elAxisStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_elAxisStatus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_elAxisStatus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_elAxisStatus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_elAxisStatus
}
//--------------------------------------------------------
/**
 *	Read attribute elAxisTrajectoryStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_elAxisTrajectoryStatus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_elAxisTrajectoryStatus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_elAxisTrajectoryStatus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_elAxisTrajectoryStatus_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_elAxisTrajectoryStatus
}
//--------------------------------------------------------
/**
 *	Write attribute elAxisTrajectoryStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_elAxisTrajectoryStatus(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_elAxisTrajectoryStatus(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_elAxisTrajectoryStatus) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_elAxisTrajectoryStatus
}
//--------------------------------------------------------
/**
 *	Read attribute elAxisActualModeString related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_elAxisActualModeString(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_elAxisActualModeString(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_elAxisActualModeString) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_elAxisActualModeString_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_elAxisActualModeString
}
//--------------------------------------------------------
/**
 *	Write attribute elAxisActualModeString related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_elAxisActualModeString(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_elAxisActualModeString(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevString	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_elAxisActualModeString) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_elAxisActualModeString
}
//--------------------------------------------------------
/**
 *	Read attribute az_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_az_actual_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_az_actual_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_az_actual_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_az_actual_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_az_actual_mode
}
//--------------------------------------------------------
/**
 *	Write attribute az_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_az_actual_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_az_actual_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_az_actual_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_az_actual_mode
}
//--------------------------------------------------------
/**
 *	Read attribute el_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_el_actual_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_el_actual_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_el_actual_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_el_actual_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_el_actual_mode
}
//--------------------------------------------------------
/**
 *	Write attribute el_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_el_actual_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_el_actual_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_el_actual_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_el_actual_mode
}
//--------------------------------------------------------
/**
 *	Read attribute fi_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::read_fi_actual_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_fi_actual_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_fi_actual_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_fi_actual_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_fi_actual_mode
}
//--------------------------------------------------------
/**
 *	Write attribute fi_actual_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void DSManager::write_fi_actual_mode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_fi_actual_mode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_fi_actual_mode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_fi_actual_mode
}
//--------------------------------------------------------
/**
 *	Read attribute poly_az_coeff related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
//--------------------------------------------------------
void DSManager::read_poly_az_coeff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_poly_az_coeff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_poly_az_coeff) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_poly_az_coeff_read, 3);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_poly_az_coeff
}
//--------------------------------------------------------
/**
 *	Write attribute poly_az_coeff related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
//--------------------------------------------------------
void DSManager::write_poly_az_coeff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_poly_az_coeff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve number of write values
	int	w_length = attr.get_write_value_length();

	//	Retrieve pointer on write values (Do not delete !)
	const Tango::DevDouble	*w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_poly_az_coeff) ENABLED START -----*/
	attr_poly_az_coeff_read[0]=w_val[0];
	attr_poly_az_coeff_read[1]=w_val[1];
	attr_poly_az_coeff_read[2]=w_val[2];
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_poly_az_coeff
}
//--------------------------------------------------------
/**
 *	Read attribute poly_el_coeff related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
//--------------------------------------------------------
void DSManager::read_poly_el_coeff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "DSManager::read_poly_el_coeff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(DSManager::read_poly_el_coeff) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_poly_el_coeff_read, 3);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::read_poly_el_coeff
}
//--------------------------------------------------------
/**
 *	Write attribute poly_el_coeff related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
//--------------------------------------------------------
void DSManager::write_poly_el_coeff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "DSManager::write_poly_el_coeff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve number of write values
	int	w_length = attr.get_write_value_length();

	//	Retrieve pointer on write values (Do not delete !)
	const Tango::DevDouble	*w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(DSManager::write_poly_el_coeff) ENABLED START -----*/
	attr_poly_el_coeff_read[0]=w_val[0];
	attr_poly_el_coeff_read[1]=w_val[1];
	attr_poly_el_coeff_read[2]=w_val[2];
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::write_poly_el_coeff
}

//--------------------------------------------------------
/**
 *	Method      : DSManager::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *                for specified device.
 */
//--------------------------------------------------------
void DSManager::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(DSManager::add_dynamic_attributes) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic attributes if any
	LMCDevice::add_dynamic_attributes();
	/*
	//Add dynamic attributes from config file
	if(AddDynAttrs()<0){
		std::string errMsg("Failed to create dyn attributes!");
		_ERROR_LOG(errMsg);
		set_status(errMsg.c_str());
		set_state(Tango::FAULT);
		return;
	}
	
	//Configure state machine for cmd & attrs
	if(InitCmdAttrStateMachine()<0){
		std::string errMsg("Failed to create cmd & attr state machines for dyn attributes!");
		_ERROR_LOG(errMsg);
		set_status(errMsg.c_str());
		set_state(Tango::FAULT);
		return;
	}
	*/
	/*----- PROTECTED REGION END -----*/	//	DSManager::add_dynamic_attributes
}

//--------------------------------------------------------
/**
 *	Command SetPointingControl related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::set_pointing_control(Tango::DevString argin)
{
	DEBUG_STREAM << "DSManager::SetPointingControl()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::set_pointing_control) ENABLED START -----*/
	
	//	Add your own code
	
	//Parsing argin
	coordinate_parser(argin);
	double p0,p1,p2;
	
	p0=attr_poly_az_coeff_read[0];
	p1=attr_poly_az_coeff_read[1];
	p2=attr_poly_az_coeff_read[2];
	
	DEBUG_STREAM << "p0: " << p0 << endl;
	DEBUG_STREAM << "p1: " << p1 << endl;
	DEBUG_STREAM << "p2: " << p2 << endl;
	
	//Filling the Load Program Track Table class
	LoadProgramTrackTable track_table(1);
	track_table.load_mode=2; //Add table entries
	track_table.interp_mode=1; //Spline interpolation
	track_table.set_coordinate_values(timestamp,azimuth,elevation);
	track_table.serialize();
#if DEBUG2
	for(uint32_t i=0;i<track_table.length;i++)
		printf("payload[%d]: %02X\n",i,(unsigned char)track_table.serialized_payload[i]);
#endif
	
	//Filling the General Command class
	GeneralCommand pointing_command(global_command_counter++,&track_table);
	pointing_command.number_of_commands=1; //Probably this can be predefined too
	pointing_command.message_length=6*4+8*2+track_table.sequence_length*3*8; //General envelope + command envelope + command load
	pointing_command.serialize();
#if DEBUG2 
	for(uint32_t i=0;i<pointing_command.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)pointing_command.serialized_command[i]);
#endif

#if SEND_MSG		
	pointing_command.send_to_DS(sockfd);//(DS_ADDRESS,DS_PORT); //FIXME: dopo socket sempre aperta
	INFO_STREAM << "Message sent to DS: " << endl;
	pointing_command.print_command();
#endif	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::set_pointing_control
}
//--------------------------------------------------------
/**
 *	Command SetIndexerPosition related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::set_indexer_position(Tango::DevShort argin)
{
	DEBUG_STREAM << "DSManager::SetIndexerPosition()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::set_indexer_position) ENABLED START -----*/
	
	//	Add your own code
	
	double rotation_rate=FI_VEL; //deg/s
	double fi_angle=0; //deg
	//double position[]={0.,72.,144.,216.,282.}; //deg
	
	switch(argin)
	{
		//FIXME: feed indexer angle are TBC
		case 1:
			fi_angle=-60;
			break;
		case 2:
	    fi_angle=75;
	    break;
		case 3:
		case 4:
		case 5:
			fi_angle=10;
			break;
	}
	
	ModeCommand indexer_position;
	indexer_position.subsystem_identifier=3; //3: indexer
	indexer_position.command_identifier=2003; //Preset absolute
	indexer_position.parameter_1=fi_angle;
	indexer_position.parameter_2=rotation_rate;
	indexer_position.serialize();
	
	GeneralCommand set_indexer_cmd(global_command_counter++,&indexer_position);
	set_indexer_cmd.message_length=6*4+22; //General envelope + command envelope + command load
	set_indexer_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_indexer_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_indexer_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	set_indexer_cmd.send_to_DS(sockfd);//(DS_ADDRESS,DS_PORT); //FIXME: dopo socket sempre aperta
	INFO_STREAM << "Message sent to DS: " << endl;
	set_indexer_cmd.print_command();
#endif
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::set_indexer_position
}
//--------------------------------------------------------
/**
 *	Command SetSubElementMode related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::set_sub_element_mode(Tango::DevShort argin)
{
	DEBUG_STREAM << "DSManager::SetSubElementMode()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::set_sub_element_mode) ENABLED START -----*/
#if OLD_ICD	
	//	Add your own code
	double param1=0; //Not ignored only for "Stow" where it is to be set to 0
	double param2=0;
	int command_identifier;
	
	ModeCommand axis_mode;
	
	// Mapping argin to ACU command
	switch(argin)
	{
		case 0: // Off
			command_identifier=2001;  // Inactive
			break;
		case 1: // Startup
		case 2: // Stand-by
			command_identifier=2002;  // Active
			break;
		case 3: // E-stop
			command_identifier=2007;  // Stop
			break;
		case 4: // Stow
			//FIXME: "Drive to stow" command seems to be available only for FI,
			//the "Drive to park" command seems not to fit our requirement.
			//FIXME: The second parameter depends on V_MAX, which is undefined.
			command_identifier=2052;  // Drive to stow
			param2=0.5*V_MAX;
			break;
		case 5: // Point
			//FIXME: The second parameter depends on SLEW_VEL, which is undefined.
			command_identifier=2005;  // Slew
			param2=SLEW_VEL;
			break;
	}
	
	// Common setting to all three axes
	axis_mode.command_identifier=command_identifier;
	axis_mode.parameter_1=param1;
	axis_mode.parameter_2=param2;
	
	
	// Azimuth axis
	axis_mode.subsystem_identifier=1; //1: azimuth axis
	axis_mode.serialize();
	
	//GeneralCommand set_az_mode_cmd(global_command_counter++,&axis_mode);
	GeneralCommand set_az_mode_cmd(get_milliseconds(),&axis_mode);
	set_az_mode_cmd.message_length=6*4+22; //General envelope + command envelope + command load
	set_az_mode_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_az_mode_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_az_mode_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	printf("PROVA SOCKET 3: (set_sub_element_mode) set_az_mode_cmd.send_to_DS(%d);\n",sockfd);
	set_az_mode_cmd.send_to_DS(sockfd);//(DS_ADDRESS,DS_PORT); //FIXME: dopo socket sempre aperta
	printf("PROVA SOCKET 7: (set_sub_element_mode) OK\n");
	INFO_STREAM << "Message sent to DS: " << endl;
	set_az_mode_cmd.print_command();
#endif


	// Elevation axis
	axis_mode.subsystem_identifier=2; //2: elevation axis
	axis_mode.serialize();
	
	GeneralCommand set_el_mode_cmd(get_milliseconds(),&axis_mode);
	set_el_mode_cmd.message_length=6*4+22; //General envelope + command envelope + command load
	set_el_mode_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_el_mode_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_el_mode_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	set_el_mode_cmd.send_to_DS(sockfd);//(DS_ADDRESS,DS_PORT); //FIXME: dopo socket sempre aperta
	INFO_STREAM << "Message sent to DS: " << endl;
	set_el_mode_cmd.print_command();
#endif

#else
	switch(argin)
	{
		case 2: // Stand-by
			set_standby_lpmode();  // Active
			break;
	}
#endif

/*
	// Feed indexer axis
	axis_mode.subsystem_identifier=3; //3: feed indexer axis
	axis_mode.serialize();
	
	GeneralCommand set_fi_mode_cmd(global_command_counter++,&axis_mode);
	set_fi_mode_cmd.message_length=6*4+22; //General envelope + command envelope + command load
	set_fi_mode_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_fi_mode_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_fi_mode_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	set_fi_mode_cmd.send_to_DS(sockfd);//(DS_ADDRESS,DS_PORT); //FIXME: dopo socket sempre aperta
	INFO_STREAM << "Message sent to DS: " << endl;
	set_fi_mode_cmd.print_command();
#endif*/

	//Set the new DS mode	
	//FIXME: this should NOT be done since ds_mode should be read by monitoring
	//*attr_ds_mode_read=argin;

	
	/*----- PROTECTED REGION END -----*/	//	DSManager::set_sub_element_mode
}
//--------------------------------------------------------
/**
 *	Command Prova_attr related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::prova_attr(Tango::DevULong argin)
{
	DEBUG_STREAM << "DSManager::Prova_attr()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::prova_attr) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::prova_attr
}
//--------------------------------------------------------
/**
 *	Command GetStatusMessage related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void DSManager::get_status_message()
{
	DEBUG_STREAM << "DSManager::GetStatusMessage()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::get_status_message) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::get_status_message
}
//--------------------------------------------------------
/**
 *	Command EngModeCommand related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::eng_mode_command(const Tango::DevVarDoubleArray *argin)
{
	DEBUG_STREAM << "DSManager::EngModeCommand()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::eng_mode_command) ENABLED START -----*/
	
	//	Add your own code
	double param1=(*argin)[2];
	double param2=(*argin)[3];
	uint16_t command_identifier=(uint16_t) (*argin)[1];
	uint16_t subsystem_identifier=(uint16_t) (*argin)[0];
	
	ModeCommand axis_mode;
	
	axis_mode.command_identifier=command_identifier;
	axis_mode.parameter_1=param1;
	axis_mode.parameter_2=param2;
	axis_mode.subsystem_identifier=subsystem_identifier;
	axis_mode.serialize();
	
	GeneralCommand set_axis_mode_cmd(get_milliseconds(),&axis_mode);
	set_axis_mode_cmd.message_length=6*4+22; //General envelope + command envelope + command load
	set_axis_mode_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_axis_mode_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_axis_mode_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	set_axis_mode_cmd.send_to_DS(sockfd);
#endif
#if DEBUG2
	INFO_STREAM << "Message sent to DS: " << endl;
	set_axis_mode_cmd.print_command();
#endif
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::eng_mode_command
}
//--------------------------------------------------------
/**
 *	Command EngParameterCommand related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::eng_parameter_command(const Tango::DevVarDoubleArray *argin)
{
	DEBUG_STREAM << "DSManager::EngParameterCommand()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::eng_parameter_command) ENABLED START -----*/
	
	//	Add your own code
	double param1=(*argin)[2];
	double param2=(*argin)[3];
	uint16_t command_identifier=(uint16_t) (*argin)[1];
	uint16_t subsystem_identifier=(uint16_t) (*argin)[0];
	
	ParameterCommand parameter_command;
	
	parameter_command.command_identifier=command_identifier;
	parameter_command.parameter_1=param1;
	parameter_command.parameter_2=param2;
	parameter_command.subsystem_identifier=subsystem_identifier;
	parameter_command.serialize();
	
	GeneralCommand set_parameters(get_milliseconds(),&parameter_command);
	set_parameters.message_length=6*4+22; //General envelope + command envelope + command load
	set_parameters.serialize();
#if DEBUG2
	for(uint32_t i=0;i<set_parameters.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)set_parameters.serialized_command[i]);
#endif

#if SEND_MSG
	set_parameters.send_to_DS(sockfd);
	INFO_STREAM << "Message sent to DS: " << endl;
	set_parameters.print_command();
#endif
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::eng_parameter_command
}
//--------------------------------------------------------
/**
 *	Command SetStowMode related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void DSManager::set_stow_mode()
{
	DEBUG_STREAM << "DSManager::SetStowMode()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::set_stow_mode) ENABLED START -----*/
	
	//	Add your own code
	Tango::DevVarDoubleArray *eng_args=new Tango::DevVarDoubleArray();
	eng_args->length(4);
	
	//Check if already in stow
	/* FIXME: to be uncommented once implemented monitoring attributes
	if(*attr_az_axis_actual_mode_read==2050 && *attr_el_axis_actual_mode_read==2050)
	{
		INFO_STREAM << "Already in stow mode, nothing to do." << endl;
		return;
	}
	*/
	
	//Common settings
	(*eng_args)[1]=2052; //Drive to stow
	(*eng_args)[2]=0; //Drive to next reachable stow position
	(*eng_args)[3]=SLEW_VEL; //Rate [deg/s]
	
	//Stow azimuth axis
	(*eng_args)[0]=1; //Azimuth
	eng_mode_command(eng_args);
	
	//Stow elevation axis
	(*eng_args)[0]=2; //Azimuth
	eng_mode_command(eng_args);
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::set_stow_mode
}
//--------------------------------------------------------
/**
 *	Command Unstow related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void DSManager::unstow()
{
	DEBUG_STREAM << "DSManager::Unstow()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::unstow) ENABLED START -----*/
	
	//	Add your own code
	Tango::DevVarDoubleArray *eng_args=new Tango::DevVarDoubleArray();
	eng_args->length(4);
	
	//Common settings
	(*eng_args)[1]=2051; //Unstow
	(*eng_args)[3]=0; //Ignored
	
	//Stow azimuth axis
	(*eng_args)[0]=1; //Azimuth
	(*eng_args)[2]=1; //Only pin 1 exists
	eng_mode_command(eng_args);
	
	//Stow elevation axis
	(*eng_args)[0]=2; //Azimuth
	(*eng_args)[2]=3; //Retrieves both pins
	eng_mode_command(eng_args);
	
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::unstow
}
//--------------------------------------------------------
/**
 *	Command SetStandbyLPMode related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void DSManager::set_standby_lpmode()
{
	DEBUG_STREAM << "DSManager::SetStandbyLPMode()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::set_standby_lpmode) ENABLED START -----*/
	
	//	Add your own code
	Tango::DevVarDoubleArray *eng_args=new Tango::DevVarDoubleArray();
	eng_args->length(2);
	
	(*eng_args)[0]=100; //Management controller
	(*eng_args)[1]=2; //Deactivate
	
	printf("\n\n--- OK ---\n\n");
	
	eng_command(eng_args);

#if SIM_TEST
	//
	// ATTENTION: THIS PART IS JUST FOR TESTING PURPOSE
	//            AND MUST BE DROPPED
	
	//*attr_ds_mode_read=2;
	//*attr_az_actual_mode_read=2002;
	//*attr_el_actual_mode_read=2002;
	//*attr_fi_actual_mode_read=2002;
	
	//
#endif
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::set_standby_lpmode
}
//--------------------------------------------------------
/**
 *	Command EngCommand related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void DSManager::eng_command(const Tango::DevVarDoubleArray *argin)
{
	DEBUG_STREAM << "DSManager::EngCommand()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::eng_command) ENABLED START -----*/
	
	//	Add your own code
	//double param1=(*argin)[2];
	//double param2=(*argin)[3];
	uint16_t subsystem_identifier=(uint16_t) (*argin)[0];
	uint16_t command_identifier=(uint16_t) (*argin)[1];
	
	FlexCommand fcommand;
	
	fcommand.command_identifier=command_identifier;
	fcommand.subsystem_identifier=subsystem_identifier;
	
	switch(command_identifier)
	{
		// Commands without parameters
		case 1: //Activate
		case 2: //Deactivate
		case 3: //Stop
		case 9: //Reset
			fcommand.length=4;
			break;
		
		// Commands with REAL64,REAL64 parameters
		case 300: //Slew2AbsPos
			fcommand.length=20;
			fcommand.real64par_1=(double) (*argin)[2];
			fcommand.real64par_2=(double) (*argin)[3];
			break;
	}
	
	
	
	fcommand.serialize();
	
	GeneralCommand flex_cmd(get_milliseconds(),&fcommand);
	flex_cmd.message_length=20+fcommand.length; //General envelope + command envelope + command load
	flex_cmd.serialize();
#if DEBUG2
	for(uint32_t i=0;i<flex_cmd.message_length;i++)
		printf("command[%d]: %02X\n",i,(unsigned char)flex_cmd.serialized_command[i]);
#endif

#if SEND_MSG
	flex_cmd.send_to_DS(sockfd);
#endif
#if DEBUG2
	INFO_STREAM << "Message sent to DS: " << endl;
	flex_cmd.print_command();
#endif
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::eng_command
}
//--------------------------------------------------------
/**
 *	Command dummyDynCmd related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void DSManager::dummy_dyn_cmd(Tango::Command &command)
{
	DEBUG_STREAM << "DSManager::" << command.get_name() << "  - " << device_name << endl;
	/*----- PROTECTED REGION ID(DSManager::dummy_dyn_cmd) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	DSManager::dummy_dyn_cmd
}
//--------------------------------------------------------
/**
 *	Method      : DSManager::add_dynamic_commands()
 *	Description : Create the dynamic commands if any
 *                for specified device.
 */
//--------------------------------------------------------
void DSManager::add_dynamic_commands()
{
	//	Example to add dynamic command:
	//	Copy inside the folowing protected area to instanciate at startup.
	//	add_dummyDynCmd_dynamic_command("MydummyDynCmdCommand", true);
	
	/*----- PROTECTED REGION ID(DSManager::add_dynamic_commands) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic commands if any
	LMCDevice::add_dynamic_commands();

	/*----- PROTECTED REGION END -----*/	//	DSManager::add_dynamic_commands
}

/*----- PROTECTED REGION ID(DSManager::namespace_ending) ENABLED START -----*/

//	Additional Methods
int DSManager::InitCmdAttrStateMachine(){
	
	//========================================
	//==   CMD RULES
	//========================================
	
	//========================================
	//==   ATTR TRANSITION RULES
	//========================================
	
	return 0;

}//close InitCmdAttrStateMachine()

int DSManager::RegisterProxies(){

	//## Register device proxies
	_DEBUG_LOG("Registering device proxies for device "<<device_name<<"...");
	
	
	return 0;

}//close RegisterProxies()

int DSManager::RegisterEventSubscriptions(){

	//## Register proxy events 
	_DEBUG_LOG("Registering event subscription for device "<<device_name<<"...");
	
	// Tango::CHANGE_EVENT
	// Tango::PERIODIC_EVENT
	// Tango::ARCHIVE_EVENT
	// Tango::ATTR_CONF_EVENT
	// Tango::DATA_READY_EVENT
	// Tango::USER_EVENT
	// Tango::INTERFACE_CHANGE_EVENT,		///< Device interface change event
	// Tango::PIPE_EVENT,					///< Device pipe event
	

	return 0;

}//close RegisterEventSubscriptions()

int DSManager::RegisterEventHandlers(){

	//## Register event handlers

	return 0;

}//close RegisterEventHandlers()




void DSManager::coordinate_parser(Tango::DevString dts_coords)
{
	char *ts_coords;
	
	ts_coords = dts_coords;
	std::string coord_string(ts_coords),pnt_state_s,az_s,el_s,t_s;
	DEBUG_STREAM << "Got string: " << coord_string << endl;
	
	//find ','
	std::size_t first_comma,second_comma,third_comma;
	first_comma=coord_string.find_first_of(',');
	second_comma=coord_string.find_first_of(',',first_comma+1);
	third_comma=coord_string.find_first_of(',',second_comma+1);
	
	pnt_state_s=coord_string.substr(0,first_comma);
	az_s=coord_string.substr(first_comma+1,second_comma-first_comma-1);
	el_s=coord_string.substr(second_comma+1,third_comma-second_comma-1);
	t_s=coord_string.substr(third_comma+1);
	
	pointing_state=std::stoi(pnt_state_s);
	azimuth=std::stof(az_s);
	elevation=std::stof(el_s);
	timestamp=std::stof(t_s); //probabilmente posso unire queste tre alle tre prima
	
	DEBUG_STREAM << "Pointing state: " << pointing_state << endl;
	DEBUG_STREAM << "Azimuth: " << azimuth << endl;
	DEBUG_STREAM << "Elevation: " << elevation << endl;
	DEBUG_STREAM << "Time: " << timestamp << endl;
}


uint32_t DSManager::get_milliseconds(void)
{
	yat::Time t;
	t.set_current();
	uint32_t f;
	f=t.ms()+1000*((int)t.second())+60000*t.minute()+3600000*t.hour();
	return f;
}


void DSManager::monitor_loop(void)
{
	int mon_sockfd;
  int mon_portno;
  struct sockaddr_in mon_serv_addr;
  struct hostent *mon_server;
  
  int n; //This variable is used to store write() and read() responses from socket

  unsigned char buffer[4096]; //Store write() and read() packet
  
  // Set monitoring port
  mon_portno=DS_MON_PORT;
	
	// Initializa monitoring socket
  mon_sockfd=socket(AF_INET, SOCK_STREAM, 0);
  if (mon_sockfd < 0) 
    INFO_STREAM << "DSManager::monitor_loop() - LMC-DS connection: socket opening failed" << endl; //FIXME: proper error handler needed
    
	DEBUG_STREAM << "DSManager::monitor_loop() - LMC-DS connection: mon_sockfd = " << sockfd << endl;
   
  // Socket connection
  mon_server=gethostbyname(DS_ADDRESS);
  bzero((char *) &mon_serv_addr, sizeof(mon_serv_addr));
  mon_serv_addr.sin_family = AF_INET;
  bcopy((char *)mon_server->h_addr,(char *)&mon_serv_addr.sin_addr.s_addr,mon_server->h_length);
  mon_serv_addr.sin_port = htons(mon_portno);
  if (connect(mon_sockfd,(struct sockaddr *) &mon_serv_addr,sizeof(mon_serv_addr)) < 0)
  {
    INFO_STREAM << "DSManager::monitor_loop() - LMC-DS connection: socket connection failed" << endl; //FIXME: proper error handler needed
  }
  else
  {
  	DEBUG_STREAM << "DSManager::monitor_loop() - LMC-DS connection: connected" << endl;
  }

	// Main loop
	while(1)
	{
 	 	//Reset buffer and read from socket
		bzero(buffer,4096);
		n=read(mon_sockfd,buffer,4095);
  
  	DEBUG_STREAM << "DSManager::monitor_loop() - " << n << " bytes received from DS" << endl;

  	if (n<0) 
    	INFO_STREAM << "DSManager::monitor_loop() - LMC-DS connection: error reading from socket" << endl; //FIXME: proper error handler needed
  
  	//This deep debug is to print the raw received packet
#if DEBUG2
		for(int i=0;i<sizeof(buffer);i++)
		{
			printf("%02X ",(unsigned char)buffer[i]);
			if(!((i+1)%16))
				printf("\n");
			if(i>4)
				if(buffer[i]==0xa1 && buffer[i-1]==0xfc && buffer[i-2]==0xcf && buffer[i-3]==0xd1)
				{
					printf("\n");
					break;
				}
		}
#endif

	read_ds_status(buffer);
	
	}
	
	// FIXME: likely this is never executed, not sure if it is ok
	close(mon_sockfd);
	
}



void DSManager::read_ds_status(unsigned char *buffer)
{
	int offset;
	offset=0;
#if SIM_TEST
	*attr_ds_mode_read=*(uint16_t *)(buffer+offset); offset+=2;
	*attr_az_actual_mode_read=*(uint16_t *)(buffer+offset); offset+=2;
	*attr_el_actual_mode_read=*(uint16_t *)(buffer+offset); offset+=2;
	*attr_fi_actual_mode_read=*(uint16_t *)(buffer+offset); offset+=2;
#else
	//uint32_t *message_length=(uint32_t *)(buffer+6);
	//*attr_message_length_read=*message_length;
	*attr_message_length_read=*(uint32_t *)(buffer+6);
	
	// General status
	offset=14; //FIXME: once every monitoring point is implemented, intermediate offset statements will be no longer needed
	*attr_version_read=*(uint16_t *)(buffer+offset); offset+=2;
	*attr_diagnosis_signal_read=*(double *)(buffer+offset); offset+=8;
	offset+=4;//fcStw DWORD (uint32_t) is ignored in remote control
	decode_power_status(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_operation_status(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_system_warnings(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_software_interlock(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_emergency_stops(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_safety_device_errors(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_communication_status(*(uint32_t *)(buffer+offset)); offset+=4;
	decode_control_mode_status(*(uint32_t *)(buffer+offset)); offset+=4;
	*attr_actual_time_read=*(double *)(buffer+offset); offset+=8;
	*attr_actual_time_offset_read=*(double *)(buffer+offset); offset+=8;
	*attr_time_source_read=*(uint16_t *)(buffer+offset); offset+=2;
	*attr_no_PPS_signal_read=*(uint8_t *)(buffer+offset); offset+=1;
	*attr_clock_online_read=*(uint8_t *)(buffer+offset); offset+=1;
	*attr_clock_Ok_read=*(uint8_t *)(buffer+offset); offset+=1;
	*attr_power_drive_cabinet_1_read=*(double *)(buffer+offset); offset+=8;
	*attr_power_drive_cabinet_2_read=*(double *)(buffer+offset); offset+=8;
	*attr_power_antenna_read=*(double *)(buffer+offset); offset+=8;
	*attr_temperature_AEC_read=*(float *)(buffer+offset); offset+=4;
	*attr_outdoor_temperature_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_D1_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_AB_ground_floor_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_AB_first_floor_read=*(float *)(buffer+offset); offset+=4;
	*attr_temperature_AZC_read=*(float *)(buffer+offset); offset+=4;
	*attr_temperature_ELC_read=*(float *)(buffer+offset); offset+=4;
	*attr_temperature_hexapod_read=*(float *)(buffer+offset); offset+=4;
	*attr_temperature_AZ_Bearing_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_M1_1_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_M1_2_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_M1_3_read=*(float *)(buffer+offset); offset+=4;
  *attr_temperature_M1_4_read=*(float *)(buffer+offset); offset+=4;
  *attr_humidity_Hexapod_read=*(float *)(buffer+offset); offset+=4;
  *attr_humidity_ELC_read=*(float *)(buffer+offset); offset+=4;
  *attr_humidity_Outside_read=*(float *)(buffer+offset); offset+=4;
	
	//////
	// Axis status azimuth
	
	bool null_bit;
  decode_az_bit_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_az_stow_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_az_error_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_az_warning_status(*(uint32_t *)(buffer+offset)); offset+=4;
  
  
  // This could be an alternative way to decode bit-coded status
  // Probably more elegant but less efficient
  decode_dword(*(uint32_t *)(buffer+offset),
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 attr_az_disc_initok_read,
                 attr_az_disc_Ok_read,
                 &null_bit,
                 attr_az_disc_commErr_read,
                 attr_az_disc_overflow_read,
                 attr_az_disc_warning_read,
                 attr_az_disc_operational_read,
                 attr_az_disc_error_read,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit); offset+=4;
	
	
	
	switch(*attr_az_axis_state_read=*(uint16_t *)(buffer+offset))
	{
		case 0:
			strcpy(*attr_azAxisStatus_read,"INACTIVE");
			break;
		case 1:
			strcpy(*attr_azAxisStatus_read,"DEACTIVATING");
			break;
		case 2:
			strcpy(*attr_azAxisStatus_read,"ACTIVATING");
			break;
		case 3:
			strcpy(*attr_azAxisStatus_read,"ACTIVE");
			break;
		default:
			strcpy(*attr_azAxisStatus_read,"UNKNOWN");
	}  offset+=2;
	
	switch(*attr_az_axis_trajectory_state_read=*(uint16_t *)(buffer+offset))
	{
		case 0:
			strcpy(*attr_azAxisTrajectoryStatus_read,"OFF");
			break;
		case 1:
			strcpy(*attr_azAxisTrajectoryStatus_read,"HOLDING");
			break;
		case 2:
			strcpy(*attr_azAxisTrajectoryStatus_read,"EMERGENCY STOP");
			break;
		case 3:
			strcpy(*attr_azAxisTrajectoryStatus_read,"STOP");
			break;
		case 4:
			strcpy(*attr_azAxisTrajectoryStatus_read,"SLEWING VELOCITY");
			break;
		case 6:
			strcpy(*attr_azAxisTrajectoryStatus_read,"POSITION");
			break;
		case 7:
			strcpy(*attr_azAxisTrajectoryStatus_read,"TRACKING");
			break;
		default:
			strcpy(*attr_azAxisTrajectoryStatus_read,"UNKNWON");
	} offset+=2;
	
	switch(*attr_az_axis_actual_mode_read=*(uint16_t *)(buffer+offset))
	{
		case 2000:
			strcpy(*attr_azAxisActualModeString_read,"IGNORE");
			break;
		case 2001:
			strcpy(*attr_azAxisActualModeString_read,"INACTIVE");
			break;
		case 2002:
			strcpy(*attr_azAxisActualModeString_read,"ACTIVE");
			break;
		case 2003:
			strcpy(*attr_azAxisActualModeString_read,"ABSOLUTE POSITIONING");
			break;
		case 2004:
			strcpy(*attr_azAxisActualModeString_read,"RELATIVE POSITIONING");
			break;
		case 2005:
			strcpy(*attr_azAxisActualModeString_read,"SLEW");
			break;
		case 2007:
			strcpy(*attr_azAxisActualModeString_read,"STOP");
			break;
		case 2008:
			strcpy(*attr_azAxisActualModeString_read,"TRACKING");
			break;
		case 2009:
			strcpy(*attr_azAxisActualModeString_read,"SUN TRACK");
			break;
		case 2014:
			strcpy(*attr_azAxisActualModeString_read,"INTERLOCK COMMAND");
			break;
		case 2015:
			strcpy(*attr_azAxisActualModeString_read,"RESET");
			break;
		case 2050:
			strcpy(*attr_azAxisActualModeString_read,"STOW");
			break;
		case 2051:
			strcpy(*attr_azAxisActualModeString_read,"UNSTOW");
			break;
		case 2052:
			strcpy(*attr_azAxisActualModeString_read,"DRIVE TO STOW");
			break;
		case 2053:
			strcpy(*attr_azAxisActualModeString_read,"STOP STOW PIN");
			break;
		case 2060:
			strcpy(*attr_azAxisActualModeString_read,"DRIVE TO PARK");
			break;
		default:
			strcpy(*attr_azAxisActualModeString_read,"UNKNOWN");
	} offset+=2;
	
	*attr_az_p_Soll_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_Bahn_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_Ist_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_Offs_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_Abw_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_AbwFil_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_p_pointCorr_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_v_Bahn_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_v_Soll_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_v_Ist_read=*(double *)(buffer+offset); offset+=8;
  *attr_az_a_Bahn_read=*(double *)(buffer+offset); offset+=8;
	
	
	// Decoding azimuth motor selection
    decode_word(*(uint16_t *)(buffer+offset),
                attr_az_motor_selection_1_read, //0
                attr_az_motor_selection_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15
    offset+=2;
    
    // Decoding azimuth brakes selection
    decode_word(*(uint16_t *)(buffer+offset),
                attr_az_brakes_selection_1_read, //0
                attr_az_brakes_selection_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15
    offset+=2;
    
    // Decoding azimuth brakes open
    decode_word(*(uint16_t *)(buffer+offset),
                attr_az_brakes_open_1_read, //0
                attr_az_brakes_open_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15 
    offset+=2;
    
    // Decoding azimuth brakes command
    decode_word(*(uint16_t *)(buffer+offset),
                attr_az_brakes_command_1_read, //0
                attr_az_brakes_command_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15 
  offset+=2;
	
	
	// Axis status elevation
	//offset=291;
	
	decode_el_bit_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_el_stow_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_el_error_status(*(uint32_t *)(buffer+offset)); offset+=4;
  decode_el_warning_status(*(uint32_t *)(buffer+offset)); offset+=4;
	
	
	decode_dword(*(uint32_t *)(buffer+offset),
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 attr_el_disc_initok_read,
                 attr_el_disc_Ok_read,
                 &null_bit,
                 attr_el_disc_commErr_read,
                 attr_el_disc_overflow_read,
                 attr_el_disc_warning_read,
                 attr_el_disc_operational_read,
                 attr_el_disc_error_read,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit,
                 &null_bit); offset+=4;
	
	//printf("\nOffset = %d\n\n\n",offset);
	//offset=311;
	
	switch(*attr_el_axis_state_read=*(uint16_t *)(buffer+offset))
	{
		case 0:
			strcpy(*attr_elAxisStatus_read,"INACTIVE");
			break;
		case 1:
			strcpy(*attr_elAxisStatus_read,"DEACTIVATING");
			break;
		case 2:
			strcpy(*attr_elAxisStatus_read,"ACTIVATING");
			break;
		case 3:
			strcpy(*attr_elAxisStatus_read,"ACTIVE");
			break;
		default:
			strcpy(*attr_elAxisStatus_read,"UNKNOWN");
	} offset+=2;
	
	switch(*attr_el_axis_trajectory_state_read=*(uint16_t *)(buffer+offset))
	{
		case 0:
			strcpy(*attr_elAxisTrajectoryStatus_read,"OFF");
			break;
		case 1:
			strcpy(*attr_elAxisTrajectoryStatus_read,"HOLDING");
			break;
		case 2:
			strcpy(*attr_elAxisTrajectoryStatus_read,"EMERGENCY STOP");
			break;
		case 3:
			strcpy(*attr_elAxisTrajectoryStatus_read,"STOP");
			break;
		case 4:
			strcpy(*attr_elAxisTrajectoryStatus_read,"SLEWING VELOCITY");
			break;
		case 6:
			strcpy(*attr_elAxisTrajectoryStatus_read,"POSITION");
			break;
		case 7:
			strcpy(*attr_elAxisTrajectoryStatus_read,"TRACKING");
			break;
		default:
			strcpy(*attr_elAxisTrajectoryStatus_read,"UNKNWON");
	} offset+=2;
	
	switch(*attr_el_axis_actual_mode_read=*(uint16_t *)(buffer+offset))
	{
		case 2000:
			strcpy(*attr_elAxisActualModeString_read,"IGNORE");
			break;
		case 2001:
			strcpy(*attr_elAxisActualModeString_read,"INACTIVE");
			break;
		case 2002:
			strcpy(*attr_elAxisActualModeString_read,"ACTIVE");
			break;
		case 2003:
			strcpy(*attr_elAxisActualModeString_read,"ABSOLUTE POSITIONING");
			break;
		case 2004:
			strcpy(*attr_elAxisActualModeString_read,"RELATIVE POSITIONING");
			break;
		case 2005:
			strcpy(*attr_elAxisActualModeString_read,"SLEW");
			break;
		case 2007:
			strcpy(*attr_elAxisActualModeString_read,"STOP");
			break;
		case 2008:
			strcpy(*attr_elAxisActualModeString_read,"TRACKING");
			break;
		case 2009:
			strcpy(*attr_elAxisActualModeString_read,"SUN TRACK");
			break;
		case 2014:
			strcpy(*attr_elAxisActualModeString_read,"INTERLOCK COMMAND");
			break;
		case 2015:
			strcpy(*attr_elAxisActualModeString_read,"RESET");
			break;
		case 2050:
			strcpy(*attr_elAxisActualModeString_read,"STOW");
			break;
		case 2051:
			strcpy(*attr_elAxisActualModeString_read,"UNSTOW");
			break;
		case 2052:
			strcpy(*attr_elAxisActualModeString_read,"DRIVE TO STOW");
			break;
		case 2053:
			strcpy(*attr_elAxisActualModeString_read,"STOP STOW PIN");
			break;
		case 2060:
			strcpy(*attr_elAxisActualModeString_read,"DRIVE TO PARK");
			break;
		default:
			strcpy(*attr_elAxisActualModeString_read,"UNKNOWN");
	} offset+=2;
	
	
	*attr_el_p_Soll_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_Bahn_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_Ist_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_Offs_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_Abw_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_AbwFil_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_p_pointCorr_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_v_Bahn_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_v_Soll_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_v_Ist_read=*(double *)(buffer+offset); offset+=8;
  *attr_el_a_Bahn_read=*(double *)(buffer+offset); offset+=8;
	
	
	// Decoding elevation motor selection
    decode_word(*(uint16_t *)(buffer+offset),
                attr_el_motor_selection_1_read, //0
                attr_el_motor_selection_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15
    offset+=2;
    
    // Decoding elevation brakes selection
    decode_word(*(uint16_t *)(buffer+offset),
                attr_el_brakes_selection_1_read, //0
                attr_el_brakes_selection_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15
    offset+=2;
    
    // Decoding elevation brakes open
    decode_word(*(uint16_t *)(buffer+offset),
                attr_el_brakes_open_1_read, //0
                attr_el_brakes_open_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15 
    offset+=2;
    
    // Decoding elevation brakes command
    decode_word(*(uint16_t *)(buffer+offset),
                attr_el_brakes_command_1_read, //0
                attr_el_brakes_command_2_read, //1
                &null_bit, //2
                &null_bit, //3
                &null_bit, //4
                &null_bit, //5
                &null_bit, //6
                &null_bit, //7
                &null_bit, //8
                &null_bit, //9
                &null_bit, //10
                &null_bit, //11
                &null_bit, //12
                &null_bit, //13
                &null_bit, //14
                &null_bit); //15 
  offset+=2;
	
	
	// Motor status azimuth 1
	decode_az1_motor_status(*(uint32_t *)(buffer+offset)); offset+=4;
	*attr_az1_actual_position_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_actual_velocity_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_actual_torque_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_rate_of_utilization_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_Motor_temperature_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_Motor_Overload_Inverter_read=*(double *)(buffer+offset); offset+=8;
  *attr_az1_Motor_overload_read=*(double *)(buffer+offset); offset+=8; //Errore nella ICD?
  *attr_az1_motErrorCode_read=*(uint16_t *)(buffer+offset); offset+=2;
  *attr_az1_EmLimDn_read=*(uint8_t *)(buffer+offset); offset+=1;
  *attr_az1_EmLimUp_read=*(uint8_t *)(buffer+offset); offset+=1;
	
	
	// Motor status azimuth 2
	
	
	// Motor status azimuth 3
	
	
	// Motor status azimuth 4
	
	
	// Motor status elevation 1
	
	
	// Motor status elevation 2
	
	
	// Motor status elevation 3
	
	
	// Motor status elevation 4
	
	//std::cout << "Message length: " << *message_length << endl;
	
#endif
}




void DSManager::decode_power_status(uint32_t power_status)
{
	//*attr_ps_P0_MainSwitch_Off_read=(bool)(power_status & 0x80000000); //Not used
	//*attr_ps_P0_UPS_MainSwitch_Off_read=(bool)(power_status & 0x40000000); //Not used
	//*attr_ps_P0_OVP_fault_read=(bool)(power_status & 0x20000000); //Not used
	*attr_ps_P1_UPS_PhaseGuard_fault_read        = (bool)(power_status & 0x00000008);
	*attr_ps_P1_MainSwitch_Off_read              = (bool)(power_status & 0x00000010);
	*attr_ps_P1_InfraPhaseGuard_fault_read       = (bool)(power_status & 0x00000020);
	*attr_ps_P1_CntrlPowerA_fault_read           = (bool)(power_status & 0x00000040);
	*attr_ps_P1_CntrlPowerB_fault_read           = (bool)(power_status & 0x00000080);
	*attr_ps_P1_CntrlPowerC_fault_read           = (bool)(power_status & 0x00000100);
	*attr_ps_P1_CntrlPowerD_fault_read           = (bool)(power_status & 0x00000200);
	*attr_ps_P1_PowMeasureTerminal_fault_read    = (bool)(power_status & 0x00000400);
	*attr_ps_P1_OvervoltageProt_fault_read       = (bool)(power_status & 0x00000800);
	//*attr_ps_P2_MainPow_I_PhaseGuard_fault_read  = (bool)(power_status & 0x00001000); //Not used
	//*attr_ps_P2_MainPow_II_PhaseGuard_fault_read = (bool)(power_status & 0x00002000); //Not used
	//*attr_ps_P2_UPSPow_I_PhaseGuard_fault_read   = (bool)(power_status & 0x00004000); //Not used
	//*attr_ps_P2_UPSPow_II_PhaseGuard_fault_read  = (bool)(power_status & 0x00080000); //Not used
	*attr_ps_P2_CntrlPowerA_fault_read           = (bool)(power_status & 0x00010000);
	*attr_ps_P2_CntrlPowerB_fault_read           = (bool)(power_status & 0x00020000);
	*attr_ps_P2_OvervoltageProt_fault_read       = (bool)(power_status & 0x00040000);
	//bit 19 not used
	//bit 20 not used
	//bit 21 not used
	//bit 22 not used
	//bit 23 not used
	*attr_ps_servoPowD1_fault_read               = (bool)(power_status & 0x01000000);
	*attr_ps_servoPowD2_fault_read               = (bool)(power_status & 0x02000000);
	*attr_ps_ACUPow_fault_read                   = (bool)(power_status & 0x04000000);
	//bit 27 not used
	//bit 28 not used
	//bit 29 not used
	//bit 30 not used
	*attr_ps_error_active_read                   = (bool)(power_status & 0x80000000);
}

void DSManager::decode_operation_status(uint32_t operation_status)
{
	*attr_so_sysSim_read            = (bool)(operation_status & 0x00000001);
	*attr_so_eStop_read             = (bool)(operation_status & 0x00000002);
	*attr_so_swIntLock_read         = (bool)(operation_status & 0x00000004);
	*attr_so_Power_Up_read          = (bool)(operation_status & 0x00000008);
	*attr_so_sysWarn_read           = (bool)(operation_status & 0x00000010);
	*attr_so_keyOverrideActive_read = (bool)(operation_status & 0x00000020);
	*attr_so_intLockAckActive_read  = (bool)(operation_status & 0x00000040);
	*attr_so_esOverride_read        = (bool)(operation_status & 0x00000080);
	*attr_so_service_read           = (bool)(operation_status & 0x00000100);
	*attr_so_sysOn_read             = (bool)(operation_status & 0x00000200);
	*attr_so_HHPon_read             = (bool)(operation_status & 0x00000400);
	*attr_so_LCPon_read             = (bool)(operation_status & 0x00000800);
	*attr_so_PCUon_read             = (bool)(operation_status & 0x00001000);
	*attr_so_remote_read            = (bool)(operation_status & 0x00002000);
	*attr_so_initOk_read            = (bool)(operation_status & 0x00004000);
	*attr_so_confOk_read            = (bool)(operation_status & 0x00008000);
	*attr_so_driveActive_read       = (bool)(operation_status & 0x00010000);
	*attr_so_masterCntrl_read       = (bool)(operation_status & 0x00020000);
	*attr_so_ACUon_read             = (bool)(operation_status & 0x00040000);
	*attr_so_HCUon_read             = (bool)(operation_status & 0x00080000);
  *attr_so_SCPon_read             = (bool)(operation_status & 0x00100000);
  *attr_so_PCPon_read             = (bool)(operation_status & 0x00200000);
	//bit 22 not used
	*attr_so_servoD1_notSel_read    = (bool)(operation_status & 0x00800000);
	*attr_so_servoD2_notSel_read    = (bool)(operation_status & 0x01000000);
	*attr_so_servoD1_on_read        = (bool)(operation_status & 0x02000000);
	*attr_so_servoD2_on_read        = (bool)(operation_status & 0x04000000);
	*attr_so_servoD1_Ok_read        = (bool)(operation_status & 0x08000000);
	*attr_so_servoD2_Ok_read        = (bool)(operation_status & 0x10000000);
	*attr_so_servoD1_Err_read       = (bool)(operation_status & 0x20000000);
	*attr_so_servoD2_Err_read       = (bool)(operation_status & 0x40000000);
	*attr_so_local_read             = (bool)(operation_status & 0x80000000);
}


void DSManager::decode_system_warnings(uint32_t system_warnings)
{
	//*attr_sw_E2_smokeDetection_read=(bool)(system_warnings & 0x80000000); //bit 0 no more used
  //*attr_sw_E3_smokeDetection_read=(bool)(system_warnings & 0x40000000); //bit 1 no more used
  //bit 2 not used
  //bit 3 not used
  *attr_sw_humidity_Base_read   = (bool)(system_warnings & 0x00000010);
  *attr_sw_humidity_AZC_read    = (bool)(system_warnings & 0x00000020);
  *attr_sw_humidity_P2_read     = (bool)(system_warnings & 0x00000040);
  *attr_sw_Temp_AZC_read        = (bool)(system_warnings & 0x00000080);
  //*attr_sw_Temp_AEC_read      = (bool)(system_warnings & 0x00000100); //bit 8 no more used
  *attr_sw_Temp_D1_read         = (bool)(system_warnings & 0x00000200);
  *attr_sw_Temp_AB_ground_read  = (bool)(system_warnings & 0x00000400);
  *attr_sw_Temp_M1_read         = (bool)(system_warnings & 0x00000800);
  *attr_sw_Temp_AB_first_read   = (bool)(system_warnings & 0x00001000);
  *attr_sw_Temp_outside_read    = (bool)(system_warnings & 0x00002000);
  *attr_sw_P1_cntrlPower_read   = (bool)(system_warnings & 0x00004000);
  *attr_sw_P2_cntrlPower_read   = (bool)(system_warnings & 0x00008000);
  //*attr_sw_InfraPower_read    = (bool)(system_warnings & 0x00010000); //bit 16 no more used
  *attr_sw_fieldBusErr_HCU_read = (bool)(system_warnings & 0x00020000);
  *attr_sw_P2_OverVolFault_read = (bool)(system_warnings & 0x00040000);
  *attr_sw_P1_OverVolFault_read = (bool)(system_warnings & 0x00080000);
  *attr_sw_Invar_Fault_read     = (bool)(system_warnings & 0x00100000);
  *attr_sw_Temp_ELC_read        = (bool)(system_warnings & 0x00200000);
  *attr_sw_Temp_HXP_read        = (bool)(system_warnings & 0x00400000);
  *attr_sw_Hum_ELC_read         = (bool)(system_warnings & 0x00800000);
  *attr_sw_Hum_HXP_read         = (bool)(system_warnings & 0x01000000);
  *attr_sw_Temp_AZ_Bearing_read = (bool)(system_warnings & 0x02000000);
  *attr_sw_commErrOvRide_read   = (bool)(system_warnings & 0x04000000);
  *attr_sw_File_Logging_read    = (bool)(system_warnings & 0x08000000);
  *attr_sw_Ring_Logging_read    = (bool)(system_warnings & 0x10000000);
  //bit 29 not used
  //bit 30 not used
  //bit 31 not used
}


void DSManager::decode_software_interlock(uint32_t software_interlock)
{
	*attr_swi_overrideES_read    = (bool)(software_interlock & 0x00000001);
	*attr_swi_swIntLockCmd_read  = (bool)(software_interlock & 0x00000002);
	//bit 2 not used
	//bit 3 not used
	//bit 4 not used
	*attr_swi_sysOff_read        = (bool)(software_interlock & 0x00000020);
	*attr_swi_shutdown_read      = (bool)(software_interlock & 0x00000040);
	//bit 7 not used
	*attr_swi_mainPow_read       = (bool)(software_interlock & 0x00000100);
	*attr_swi_cntrlPow_read      = (bool)(software_interlock & 0x00000200);
	*attr_swi_safDevES_read      = (bool)(software_interlock & 0x00000400);
	*attr_swi_fieldbus_read      = (bool)(software_interlock & 0x00000800);
	*attr_swi_taskComm_read      = (bool)(software_interlock & 0x00001000);
	*attr_swi_startupFailed_read = (bool)(software_interlock & 0x00002000);
	//bit 14 not used
	//bit 15 not used
	//bit 16 not used
	//bit 17 not used
	//bit 18 not used
	//bit 19 not used
	//bit 20 not used
	//bit 21 not used
	//bit 22 not used
	//bit 23 not used
	//bit 24 not used
	//bit 25 not used
	//bit 26 not used
	//bit 27 not used
	//bit 28 not used
	*attr_swi_init_az_read       = (bool)(software_interlock & 0x20000000);
	*attr_swi_init_el_read       = (bool)(software_interlock & 0x40000000);
	*attr_swi_init_track_read    = (bool)(software_interlock & 0x80000000);
}

void DSManager::decode_emergency_stops(uint32_t emergency_stops)
{
	*attr_es_safDev_safe_read                      = (bool)(emergency_stops & 0x00000001);
	*attr_es_safDev_err_read                       = (bool)(emergency_stops & 0x00000002);
	//bit 2 not used
	//bit 3 not used
	*attr_es_eStop_TowerMainDoor_read              = (bool)(emergency_stops & 0x00000010);
	*attr_es_eStop_ControlCabinet_read             = (bool)(emergency_stops & 0x00000020);
	//bit 6 not used
	*attr_es_eStop_PCU_AZC_read                    = (bool)(emergency_stops & 0x00000080);
	//bit 8 not used
	*attr_es_door_HatchToRoof_read                 = (bool)(emergency_stops & 0x00000200);
	//bit 10 not used
	*attr_es_eStop_AZC_read                        = (bool)(emergency_stops & 0x00000800);
	*attr_es_door_Access_AZC_balcony_open_read     = (bool)(emergency_stops & 0x00001000);
	*attr_es_door_Access_AZC_balcony_unlocked_read = (bool)(emergency_stops & 0x00002000);
	*attr_es_door_AZC_Access_ELC_open_read         = (bool)(emergency_stops & 0x00004000);
	*attr_es_door_AZC_Access_ELC_unlocked_read     = (bool)(emergency_stops & 0x00008000);
	*attr_es_door_Access_ELC_open_read             = (bool)(emergency_stops & 0x00010000);
	*attr_es_door_Access_ELC_unlocked_read         = (bool)(emergency_stops & 0x00020000);
	//bit 18 not used
	//bit 19 not used
	*attr_es_eStop_AEC_read                        = (bool)(emergency_stops & 0x00100000);
	*attr_es_eStop_PCU_AEC_read                    = (bool)(emergency_stops & 0x00200000);
	*attr_es_eStop_ELC_read                        = (bool)(emergency_stops & 0x00400000);
	//bit 23 not used
	//bit 24 not used
	//bit 25 not used
	//bit 26 not used
	//bit 27 not used
	//bit 28 not used
	//bit 29 not used
	//bit 30 not used
	//bit 31 not used
}

void DSManager::decode_safety_device_errors(uint32_t safety_device_errors)
{
	*attr_es_GrpAz_FbErr_read         = (bool)(safety_device_errors & 0x00000001);
	*attr_es_GrpAz_comErr_read        = (bool)(safety_device_errors & 0x00000002);
	*attr_es_GrpAz_OutErr_read        = (bool)(safety_device_errors & 0x00000004);
	*attr_es_GrpAz2_FbErr_read        = (bool)(safety_device_errors & 0x00000008);
	*attr_es_GrpAz2_comErr_read       = (bool)(safety_device_errors & 0x00000010);
	*attr_es_GrpAz2_OutErr_read       = (bool)(safety_device_errors & 0x00000020);
	*attr_es_GrpEl_FbErr_read         = (bool)(safety_device_errors & 0x00000040);
	*attr_es_GrpEl_comErr_read        = (bool)(safety_device_errors & 0x00000080);
	*attr_es_GrpEl_OutErr_read        = (bool)(safety_device_errors & 0x00000100);
	*attr_es_GrpEl2_FbErr_read        = (bool)(safety_device_errors & 0x00000200);
	*attr_es_GrpEl2_comErr_read       = (bool)(safety_device_errors & 0x00000400);
	*attr_es_GrpEl2_OutErr_read       = (bool)(safety_device_errors & 0x00000800);
	*attr_es_GrpEStop_FbErr_read      = (bool)(safety_device_errors & 0x00001000);
	*attr_es_GrpEStop_comErr_read     = (bool)(safety_device_errors & 0x00002000);
	*attr_es_GrpEStop_OutErr_read     = (bool)(safety_device_errors & 0x00004000);
	*attr_es_GrpDecInput_FbErr_read   = (bool)(safety_device_errors & 0x00008000);
	*attr_es_GrpDecInput_comErr_read  = (bool)(safety_device_errors & 0x00010000);
	*attr_es_GrpDecInput_OutErr_read  = (bool)(safety_device_errors & 0x00020000);
	*attr_es_GrpDecOutput_FbErr_read  = (bool)(safety_device_errors & 0x00040000);
	*attr_es_GrpDecOutput_comErr_read = (bool)(safety_device_errors & 0x00080000);
	*attr_es_GrpDecOutput_OutErr_read = (bool)(safety_device_errors & 0x00100000);
	//bit 21 not used
	//bit 22 not used
	//bit 23 not used
	*attr_es_EDM_Inkonsistent_read    = (bool)(safety_device_errors & 0x01000000);
	*attr_es_EStop_Inkonsistent_read  = (bool)(safety_device_errors & 0x02000000);
	*attr_es_OpEle_Inkonsistent_read  = (bool)(safety_device_errors & 0x04000000);
	//bit 27 not used
	//bit 28 not used
	*attr_es_EStop_MonErr_read        = (bool)(safety_device_errors & 0x20000000);
	*attr_es_Az_MonErr_read           = (bool)(safety_device_errors & 0x40000000);
	*attr_es_El_MonErr_read           = (bool)(safety_device_errors & 0x80000000);
}




void DSManager::decode_communication_status(uint32_t communication_status)
{
	*attr_comm_E2_KF200_stateErr_read=(bool)(communication_status & 0x00000001);
	*attr_comm_E2_KF250_stateErr_read=(bool)(communication_status & 0x00000002);
	*attr_comm_E2_KF223_stateErr_read=(bool)(communication_status & 0x00000004);
	*attr_comm_E2_KF200_Terminal_wcStateErr_read=(bool)(communication_status & 0x00000008);
	*attr_comm_E2_KF250_Terminal_wcStateErr_read=(bool)(communication_status & 0x00000010);
	//bit 5 not used
	//bit 6 not used
	//bit 7 not used
	*attr_comm_E3_KF300_stateErr_read=(bool)(communication_status & 0x00000100);
	*attr_comm_E3_KF300_wcStateErr_read=(bool)(communication_status & 0x00000200);
	*attr_comm_E3_KF349_stateErr_read=(bool)(communication_status & 0x00000400);
	*attr_comm_E3_KF_Terminal_wcStateErr_read=(bool)(communication_status & 0x00000800);
	//bit 12 not used
	//bit 13 not used
	//bit 14 not used
	//bit 15 not used
	*attr_comm_E4_KF400_stateErr_read=(bool)(communication_status & 0x00010000);
	*attr_comm_E4_KF455_stateErr_read=(bool)(communication_status & 0x00020000);
	*attr_comm_E4_KF_Terminal_wcStateErr_read=(bool)(communication_status & 0x00040000);
	*attr_comm_C2_KF_Terminal_wcStateErr_read=(bool)(communication_status & 0x00080000);
	*attr_comm_P1_KF20_stateErr_read=(bool)(communication_status & 0x00100000);
	*attr_comm_P1_KF20_wcStateErr_read=(bool)(communication_status & 0x00200000);
	*attr_comm_P1_KF20_couplerStateErr_read=(bool)(communication_status & 0x00400000);
	*attr_comm_C2_KF600_stateErr_read=(bool)(communication_status & 0x00800000);
	*attr_comm_JB_AZEC_KF500_stateErr_read=(bool)(communication_status & 0x01000000);
	*attr_comm_JB_AZEC_Terminal_wcStateErr_read=(bool)(communication_status & 0x02000000);
	//bit 26 not used
	//bit 27 not used
	//bit 28 not used
	//bit 29 not used
	//bit 30 not used
	*attr_comm_HxpDevState_read=(bool)(communication_status & 0x80000000);
}

void DSManager::decode_control_mode_status(uint32_t control_mode_status)
{
  *attr_controlModeSts_LCP_Sts_connect_read=(bool)(control_mode_status & 0x00000001);
  *attr_controlModeSts_LCP_Cmd_connect_read=(bool)(control_mode_status & 0x00000002);
  *attr_controlModeSts_SCP_Sts_connect_read=(bool)(control_mode_status & 0x00000004);
  *attr_controlModeSts_SCP_Cmd_connect_read=(bool)(control_mode_status & 0x00000008);
  *attr_controlModeSts_PCP_Sts_connect_read=(bool)(control_mode_status & 0x00000010);
  *attr_controlModeSts_PCP_Cmd_connect_read=(bool)(control_mode_status & 0x00000020);
  *attr_controlModeSts_Remote_Sts_connect_read=(bool)(control_mode_status & 0x00000040);
  *attr_controlModeSts_Remote_Cmd_connect_read=(bool)(control_mode_status & 0x00000080);
  *attr_controlModeSts_HHP_Sts_connect_read=(bool)(control_mode_status & 0x00000100);
  *attr_controlModeSts_HHP_Cmd_connect_read=(bool)(control_mode_status & 0x00000200);
  *attr_controlModeSts_Pcu_Sts_connect_read=(bool)(control_mode_status & 0x00000400);
  *attr_controlModeSts_Pcu_Cmd_connect_read=(bool)(control_mode_status & 0x00000800);
  //bit 12 not used
  //bit 13 not used
  //bit 14 not used
  //bit 15 not used
  //bit 16 not used
  //bit 17 not used
  //bit 18 not used
  //bit 19 not used
  *attr_controlModeSts_HHP_connect_C1_read=(bool)(control_mode_status & 0x00100000);
  *attr_controlModeSts_HHP_connect_C2_read=(bool)(control_mode_status & 0x00200000);
  //bit 22 not used
  //bit 23 not used
  //bit 24 not used
  //bit 25 not used
  //bit 26 not used
  //bit 27 not used
  //bit 28 not used
  //bit 29 not used
  //bit 30 not used
  //bit 31 not used
}
  
  
void DSManager::decode_az_bit_status(uint32_t aux_buf)
{
  *attr_az_abs_initOk_read       = (bool)(aux_buf & 0x00000001);
  *attr_az_abs_sim_read          = (bool)(aux_buf & 0x00000002);
  *attr_az_abs_reset_read        = (bool)(aux_buf & 0x00000004);
  *attr_az_abs_notStop_read      = (bool)(aux_buf & 0x00000008);
  *attr_az_abs_bereit_read       = (bool)(aux_buf & 0x00000010);
  *attr_az_abs_motEin_read       = (bool)(aux_buf & 0x00000020);
  *attr_az_abs_praez_read        = (bool)(aux_buf & 0x00000040);
  *attr_az_abs_lockAT_read       = (bool)(aux_buf & 0x00000080);
  *attr_az_abs_override_read     = (bool)(aux_buf & 0x00000100);
  *attr_az_abs_posOffset_read    = (bool)(aux_buf & 0x00000200);
  *attr_az_abs_active_read       = (bool)(aux_buf & 0x00000400);
  *attr_az_abs_parkPos_read      = (bool)(aux_buf & 0x00000800);
  *attr_az_abs_pointCorr_read    = (bool)(aux_buf & 0x00001000);
  *attr_az_abs_praezOk_read      = (bool)(aux_buf & 0x00002000);
  *attr_az_abs_inactive_read     = (bool)(aux_buf & 0x00004000);
  *attr_az_abs_deactivate_read   = (bool)(aux_buf & 0x00008000);
  *attr_az_abs_activate_read     = (bool)(aux_buf & 0x00010000);
  //bit 17 not used                                 0x00020000
  //bit 18 not used                                 0x00040000
  *attr_az_abs_encReset_read     = (bool)(aux_buf & 0x00080000);
  *attr_az_abs_encResetDone_read = (bool)(aux_buf & 0x00100000);
  *attr_az_abs_encOp_read        = (bool)(aux_buf & 0x00200000);
  //bit 22 not used                                 0x00400000
  //bit 23 not used                                 0x00800000
  *attr_az_abs_confOk_read       = (bool)(aux_buf & 0x01000000);
  //bit 25 not used                                 0x02000000
  //bit 26 not used                                 0x04000000
  //bit 27 not used                                 0x08000000
  //bit 28 not used                                 0x10000000
  //bit 29 not used                                 0x20000000
  *attr_az_abs_sector_B_read     = (bool)(aux_buf & 0x40000000);
  *attr_az_abs_sector_A_read     = (bool)(aux_buf & 0x80000000);
}
  
  
  /*
void DSManager::decode_az_stow_status(uint32_t aux_buf)
{
  *attr_az_stow_posOk_read     = (bool)(aux_buf & 0x80000000);
  *attr_az_stow_preUp_read     = (bool)(aux_buf & 0x40000000);
  *attr_az_stow_preDn_read     = (bool)(aux_buf & 0x20000000);
  *attr_az_stow_dirDn_read     = (bool)(aux_buf & 0x10000000);
  *attr_az_stow_pin1_Extr_read = (bool)(aux_buf & 0x08000000);
  *attr_az_stow_pin1_Retr_read = (bool)(aux_buf & 0x04000000);
  *attr_az_stow_pin1_err_read  = (bool)(aux_buf & 0x02000000);
  *attr_az_stow_pin1_on_read   = (bool)(aux_buf & 0x01000000);
  *attr_az_stow_pin2_Extr_read = (bool)(aux_buf & 0x00800000);
  *attr_az_stow_pin2_Retr_read = (bool)(aux_buf & 0x00400000);
  *attr_az_stow_pin2_err_read  = (bool)(aux_buf & 0x00200000);
  *attr_az_stow_pin2_on_read   = (bool)(aux_buf & 0x00100000);
  *attr_az_stow_cmd1_Extr_read = (bool)(aux_buf & 0x00080000);
  *attr_az_stow_cmd1_Retr_read = (bool)(aux_buf & 0x00040000);
  *attr_az_stow_cmd2_Extr_read = (bool)(aux_buf & 0x00020000);
  *attr_az_stow_cmd2_Retr_read = (bool)(aux_buf & 0x00010000);
  //bit 16 not used                               0x00008000
  //bit 17 not used                               0x00004000
  //bit 18 not used                               0x00002000
  //bit 19 not used                               0x00001000
  //bit 20 not used                               0x00000800
  //bit 21 not used                               0x00000400
  //bit 22 not used                               0x00000200
  //bit 23 not used                               0x00000100
  //bit 24 not used                               0x00000080
  //bit 25 not used                               0x00000040
  //bit 26 not used                               0x00000020
  //bit 27 not used                               0x00000010
  //bit 28 not used                               0x00000008
  //bit 29 not used                               0x00000004
  //bit 30 not used                               0x00000002
  //bit 31 not used                               0x00000001
}*/


void DSManager::decode_az_stow_status(uint32_t aux_buf)
{
  *attr_az_stow_posOk_read     = (bool)(aux_buf & 0x00000001);
  *attr_az_stow_preUp_read     = (bool)(aux_buf & 0x00000002);
  *attr_az_stow_preDn_read     = (bool)(aux_buf & 0x00000004);
  *attr_az_stow_dirDn_read     = (bool)(aux_buf & 0x00000008);
  *attr_az_stow_pin1_Extr_read = (bool)(aux_buf & 0x00000010);
  *attr_az_stow_pin1_Retr_read = (bool)(aux_buf & 0x00000020);
  *attr_az_stow_pin1_err_read  = (bool)(aux_buf & 0x00000040);
  *attr_az_stow_pin1_on_read   = (bool)(aux_buf & 0x00000080);
  *attr_az_stow_pin2_Extr_read = (bool)(aux_buf & 0x00000100);
  *attr_az_stow_pin2_Retr_read = (bool)(aux_buf & 0x00000200);
  *attr_az_stow_pin2_err_read  = (bool)(aux_buf & 0x00000400);
  *attr_az_stow_pin2_on_read   = (bool)(aux_buf & 0x00000800);
  *attr_az_stow_cmd1_Extr_read = (bool)(aux_buf & 0x00001000);
  *attr_az_stow_cmd1_Retr_read = (bool)(aux_buf & 0x00002000);
  *attr_az_stow_cmd2_Extr_read = (bool)(aux_buf & 0x00004000);
  *attr_az_stow_cmd2_Retr_read = (bool)(aux_buf & 0x00008000);
  //bit 16 not used                               0x00008000
  //bit 17 not used                               0x00004000
  //bit 18 not used                               0x00002000
  //bit 19 not used                               0x00001000
  //bit 20 not used                               0x00000800
  //bit 21 not used                               0x00000400
  //bit 22 not used                               0x00000200
  //bit 23 not used                               0x00000100
  //bit 24 not used                               0x00000080
  //bit 25 not used                               0x00000040
  //bit 26 not used                               0x00000020
  //bit 27 not used                               0x00000010
  //bit 28 not used                               0x00000008
  //bit 29 not used                               0x00000004
  //bit 30 not used                               0x00000002
  //bit 31 not used                               0x00000001
}
  
  
void DSManager::decode_az_error_status(uint32_t aux_buf)
{
  *attr_az_err_Error_Active_read    = (bool)(aux_buf & 0x00000001);
  *attr_az_err_Rate_Loop_read       = (bool)(aux_buf & 0x00000002);
  *attr_az_err_Group_read           = (bool)(aux_buf & 0x00000004);
  *attr_az_err_Override_read        = (bool)(aux_buf & 0x00000008);
  *attr_az_err_Safety_Dev_read      = (bool)(aux_buf & 0x00000010);
  *attr_az_err_Extern_read          = (bool)(aux_buf & 0x00000020);
  *attr_az_err_Power_read           = (bool)(aux_buf & 0x00000040);
  *attr_az_err_Brake_read           = (bool)(aux_buf & 0x00000080);
  *attr_az_err_Mot_ready_read       = (bool)(aux_buf & 0x00000100);
  *attr_az_err_Motor_read           = (bool)(aux_buf & 0x00000200);
  *attr_az_err_Mot_Tacho_read       = (bool)(aux_buf & 0x00000400);
  *attr_az_err_Mot_Comm_read        = (bool)(aux_buf & 0x00000800);
  *attr_az_err_Mot_Timeout_read     = (bool)(aux_buf & 0x00001000);
  *attr_az_err_v_Mot_Exceed_read    = (bool)(aux_buf & 0x00002000);
  *attr_az_err_v_Dev_Exceed_read    = (bool)(aux_buf & 0x00004000);
  *attr_az_err_Mot_Overload_read    = (bool)(aux_buf & 0x00008000);
  *attr_az_err_Em_Limit_Dn_read     = (bool)(aux_buf & 0x00010000);
  *attr_az_err_Em_Limit_Up_read     = (bool)(aux_buf & 0x00020000);
  *attr_az_err_Em_Stop_read         = (bool)(aux_buf & 0x00040000);
  *attr_az_err_SW_InterLock_read    = (bool)(aux_buf & 0x00080000);
  *attr_az_err_p_Range_Exceed_read  = (bool)(aux_buf & 0x00100000);
  *attr_az_err_p_Dev_Exceed_read    = (bool)(aux_buf & 0x00200000);
  *attr_az_err_No_Pos_Enc_Sync_read = (bool)(aux_buf & 0x00400000);
  *attr_az_err_Pos_Enc_Sync_read    = (bool)(aux_buf & 0x00800000);
  *attr_az_err_Pos_Enc_read         = (bool)(aux_buf & 0x01000000);
  *attr_az_err_Pos_Enc_Step_read    = (bool)(aux_buf & 0x02000000);
  *attr_az_err_Stow_read            = (bool)(aux_buf & 0x04000000);
  *attr_az_err_Stow_Timeout_read    = (bool)(aux_buf & 0x08000000);
  *attr_az_err_Handcrank_read       = (bool)(aux_buf & 0x10000000);
  *attr_az_err_Cmd_Timeout_read     = (bool)(aux_buf & 0x20000000);
  *attr_az_err_Field_Bus_read       = (bool)(aux_buf & 0x40000000);
  *attr_az_err_Lim_Err_read         = (bool)(aux_buf & 0x80000000);
}
  
  
void DSManager::decode_az_warning_status(uint32_t aux_buf)
{
  *attr_az_wa_Param_Fault_read         = (bool)(aux_buf & 0x00000001);
  *attr_az_wa_Rate_Mode_read           = (bool)(aux_buf & 0x00000002);
  *attr_az_wa_Degraded_Mode_read       = (bool)(aux_buf & 0x00000004);
  *attr_az_wa_Override_read            = (bool)(aux_buf & 0x00000008);
  *attr_az_wa_Heat_Up_Motors_read      = (bool)(aux_buf & 0x00000010);
  *attr_az_wa_extern_Stop_read         = (bool)(aux_buf & 0x00000020);
  *attr_az_wa_LubricationFault_read    = (bool)(aux_buf & 0x00000040);
  *attr_az_wa_Brake_openInaktiv_read   = (bool)(aux_buf & 0x00000080);
  *attr_az_wa_Mot_ready_read           = (bool)(aux_buf & 0x00000100);
  *attr_az_wa_MotFanFault_read         = (bool)(aux_buf & 0x00000200);
  *attr_az_wa_MotWarn_read             = (bool)(aux_buf & 0x00000400);
  *attr_az_wa_Mmax_reached_read        = (bool)(aux_buf & 0x00000800);
  *attr_az_wa_PreLimDn_inconsist_read  = (bool)(aux_buf & 0x00001000);
  *attr_az_wa_PreLimUp_inconsist_read  = (bool)(aux_buf & 0x00002000);
  *attr_az_wa_FinLimDn_inconsist_read  = (bool)(aux_buf & 0x00004000);
  *attr_az_wa_FinLimUp_inconsist_read  = (bool)(aux_buf & 0x00008000);
  *attr_az_wa_Pre_Limit_Up_read        = (bool)(aux_buf & 0x00010000);
  *attr_az_wa_Pre_Limit_Dn_read        = (bool)(aux_buf & 0x00020000);
  *attr_az_wa_Fin_Limit_Up_read        = (bool)(aux_buf & 0x00040000);
  *attr_az_wa_Fin_Limit_Dn_read        = (bool)(aux_buf & 0x00080000);
  *attr_az_wa_Pre_Pre_Limit_Up_read    = (bool)(aux_buf & 0x00100000);
  *attr_az_wa_Pre_Pre_Limit_Dn_read    = (bool)(aux_buf & 0x00200000);
  *attr_az_wa_EmLimitDn_inconsist_read = (bool)(aux_buf & 0x00400000);
  *attr_az_wa_EmLimitUP_inconsist_read = (bool)(aux_buf & 0x00800000);
  *attr_az_wa_Pos_Safe_Enc_Warn_read   = (bool)(aux_buf & 0x01000000);
  *attr_az_wa_Pos_Enc_Warn_read        = (bool)(aux_buf & 0x02000000);
  *attr_az_wa_Stow_Pin_Fault_read      = (bool)(aux_buf & 0x04000000);
  *attr_az_wa_Stowpins_Extr_read       = (bool)(aux_buf & 0x08000000);
  *attr_az_wa_lowPowerMode_read        = (bool)(aux_buf & 0x10000000);
  *attr_az_wa_Motor_Overload_read      = (bool)(aux_buf & 0x20000000);
  *attr_az_wa_Motor_Temp_read          = (bool)(aux_buf & 0x40000000);
  *attr_az_wa_Vel_Limit_read           = (bool)(aux_buf & 0x80000000);
}




void DSManager::decode_dword(uint32_t aux_buf,
		                         bool *bit00,
		                         bool *bit01,
		                         bool *bit02,
		                         bool *bit03,
		                         bool *bit04,
		                         bool *bit05,
		                         bool *bit06,
		                         bool *bit07,
		                         bool *bit08,
		                         bool *bit09,
		                         bool *bit10,
		                         bool *bit11,
		                         bool *bit12,
		                         bool *bit13,
		                         bool *bit14,
		                         bool *bit15,
		                         bool *bit16,
		                         bool *bit17,
		                         bool *bit18,
		                         bool *bit19,
		                         bool *bit20,
		                         bool *bit21,
		                         bool *bit22,
		                         bool *bit23,
		                         bool *bit24,
		                         bool *bit25,
		                         bool *bit26,
		                         bool *bit27,
		                         bool *bit28,
		                         bool *bit29,
		                         bool *bit30,
		                         bool *bit31)
{
  *bit00 = (bool)(aux_buf & 0x00000001);
  *bit01 = (bool)(aux_buf & 0x00000002);
  *bit02 = (bool)(aux_buf & 0x00000004);
  *bit03 = (bool)(aux_buf & 0x00000008);
  *bit04 = (bool)(aux_buf & 0x00000010);
  *bit05 = (bool)(aux_buf & 0x00000020);
  *bit06 = (bool)(aux_buf & 0x00000040);
  *bit07 = (bool)(aux_buf & 0x00000080);
  *bit08 = (bool)(aux_buf & 0x00000100);
  *bit09 = (bool)(aux_buf & 0x00000200);
  *bit10 = (bool)(aux_buf & 0x00000400);
  *bit11 = (bool)(aux_buf & 0x00000800);
  *bit12 = (bool)(aux_buf & 0x00001000);
  *bit13 = (bool)(aux_buf & 0x00002000);
  *bit14 = (bool)(aux_buf & 0x00004000);
  *bit15 = (bool)(aux_buf & 0x00008000);
  *bit16 = (bool)(aux_buf & 0x00010000);
  *bit17 = (bool)(aux_buf & 0x00020000);
  *bit18 = (bool)(aux_buf & 0x00040000);
  *bit19 = (bool)(aux_buf & 0x00080000);
  *bit20 = (bool)(aux_buf & 0x00100000);
  *bit21 = (bool)(aux_buf & 0x00200000);
  *bit22 = (bool)(aux_buf & 0x00400000);
  *bit23 = (bool)(aux_buf & 0x00800000);
  *bit24 = (bool)(aux_buf & 0x01000000);
  *bit25 = (bool)(aux_buf & 0x02000000);
  *bit26 = (bool)(aux_buf & 0x04000000);
  *bit27 = (bool)(aux_buf & 0x08000000);
  *bit28 = (bool)(aux_buf & 0x10000000);
  *bit29 = (bool)(aux_buf & 0x20000000);
  *bit30 = (bool)(aux_buf & 0x40000000);
  *bit31 = (bool)(aux_buf & 0x80000000);
}


void DSManager::decode_word(uint16_t aux_buf,
                             bool *bit00,
                             bool *bit01,
                             bool *bit02,
                             bool *bit03,
                             bool *bit04,
                             bool *bit05,
                             bool *bit06,
                             bool *bit07,
                             bool *bit08,
                             bool *bit09,
                             bool *bit10,
                             bool *bit11,
                             bool *bit12,
                             bool *bit13,
                             bool *bit14,
                             bool *bit15)
{
  *bit00 = (bool)(aux_buf & 0x0001);
  *bit01 = (bool)(aux_buf & 0x0002);
  *bit02 = (bool)(aux_buf & 0x0004);
  *bit03 = (bool)(aux_buf & 0x0008);
  *bit04 = (bool)(aux_buf & 0x0010);
  *bit05 = (bool)(aux_buf & 0x0020);
  *bit06 = (bool)(aux_buf & 0x0040);
  *bit07 = (bool)(aux_buf & 0x0080);
  *bit08 = (bool)(aux_buf & 0x0100);
  *bit09 = (bool)(aux_buf & 0x0200);
  *bit10 = (bool)(aux_buf & 0x0400);
  *bit11 = (bool)(aux_buf & 0x0800);
  *bit12 = (bool)(aux_buf & 0x1000);
  *bit13 = (bool)(aux_buf & 0x2000);
  *bit14 = (bool)(aux_buf & 0x4000);
  *bit15 = (bool)(aux_buf & 0x8000);
}




void DSManager::decode_el_bit_status(uint32_t aux_buf)
{
  *attr_el_abs_initOk_read       = (bool)(aux_buf & 0x00000001);
  *attr_el_abs_sim_read          = (bool)(aux_buf & 0x00000002);
  *attr_el_abs_reset_read        = (bool)(aux_buf & 0x00000004);
  *attr_el_abs_notStop_read      = (bool)(aux_buf & 0x00000008);
  *attr_el_abs_bereit_read       = (bool)(aux_buf & 0x00000010);
  *attr_el_abs_motEin_read       = (bool)(aux_buf & 0x00000020);
  *attr_el_abs_praez_read        = (bool)(aux_buf & 0x00000040);
  *attr_el_abs_lockAT_read       = (bool)(aux_buf & 0x00000080);
  *attr_el_abs_override_read     = (bool)(aux_buf & 0x00000100);
  *attr_el_abs_posOffset_read    = (bool)(aux_buf & 0x00000200);
  *attr_el_abs_active_read       = (bool)(aux_buf & 0x00000400);
  *attr_el_abs_parkPos_read      = (bool)(aux_buf & 0x00000800);
  *attr_el_abs_pointCorr_read    = (bool)(aux_buf & 0x00001000);
  *attr_el_abs_praezOk_read      = (bool)(aux_buf & 0x00002000);
  *attr_el_abs_inactive_read     = (bool)(aux_buf & 0x00004000);
  *attr_el_abs_deactivate_read   = (bool)(aux_buf & 0x00008000);
  *attr_el_abs_activate_read     = (bool)(aux_buf & 0x00010000);
  //bit 17 not used                                 0x00020000
  //bit 18 not used                                 0x00040000
  *attr_el_abs_encReset_read     = (bool)(aux_buf & 0x00080000);
  *attr_el_abs_encResetDone_read = (bool)(aux_buf & 0x00100000);
  *attr_el_abs_encOp_read        = (bool)(aux_buf & 0x00200000);
  //bit 22 not used                                 0x00400000
  //bit 23 not used                                 0x00800000
  *attr_el_abs_confOk_read       = (bool)(aux_buf & 0x01000000);
  //bit 25 not used                                 0x02000000
  //bit 26 not used                                 0x04000000
  //bit 27 not used                                 0x08000000
  //bit 28 not used                                 0x10000000
  //bit 29 not used                                 0x20000000
  *attr_el_abs_sector_B_read     = (bool)(aux_buf & 0x40000000);
  *attr_el_abs_sector_A_read     = (bool)(aux_buf & 0x80000000);
}
  
  


void DSManager::decode_el_stow_status(uint32_t aux_buf)
{
  *attr_el_stow_posOk_read     = (bool)(aux_buf & 0x00000001);
  *attr_el_stow_preUp_read     = (bool)(aux_buf & 0x00000002);
  *attr_el_stow_preDn_read     = (bool)(aux_buf & 0x00000004);
  *attr_el_stow_dirDn_read     = (bool)(aux_buf & 0x00000008);
  *attr_el_stow_pin1_Extr_read = (bool)(aux_buf & 0x00000010);
  *attr_el_stow_pin1_Retr_read = (bool)(aux_buf & 0x00000020);
  *attr_el_stow_pin1_err_read  = (bool)(aux_buf & 0x00000040);
  *attr_el_stow_pin1_on_read   = (bool)(aux_buf & 0x00000080);
  *attr_el_stow_pin2_Extr_read = (bool)(aux_buf & 0x00000100);
  *attr_el_stow_pin2_Retr_read = (bool)(aux_buf & 0x00000200);
  *attr_el_stow_pin2_err_read  = (bool)(aux_buf & 0x00000400);
  *attr_el_stow_pin2_on_read   = (bool)(aux_buf & 0x00000800);
  *attr_el_stow_cmd1_Extr_read = (bool)(aux_buf & 0x00001000);
  *attr_el_stow_cmd1_Retr_read = (bool)(aux_buf & 0x00002000);
  *attr_el_stow_cmd2_Extr_read = (bool)(aux_buf & 0x00004000);
  *attr_el_stow_cmd2_Retr_read = (bool)(aux_buf & 0x00008000);
  //bit 16 not used                               0x00008000
  //bit 17 not used                               0x00004000
  //bit 18 not used                               0x00002000
  //bit 19 not used                               0x00001000
  //bit 20 not used                               0x00000800
  //bit 21 not used                               0x00000400
  //bit 22 not used                               0x00000200
  //bit 23 not used                               0x00000100
  //bit 24 not used                               0x00000080
  //bit 25 not used                               0x00000040
  //bit 26 not used                               0x00000020
  //bit 27 not used                               0x00000010
  //bit 28 not used                               0x00000008
  //bit 29 not used                               0x00000004
  //bit 30 not used                               0x00000002
  //bit 31 not used                               0x00000001
}
  
  
void DSManager::decode_el_error_status(uint32_t aux_buf)
{
  *attr_el_err_Error_Active_read    = (bool)(aux_buf & 0x00000001);
  *attr_el_err_Rate_Loop_read       = (bool)(aux_buf & 0x00000002);
  *attr_el_err_Group_read           = (bool)(aux_buf & 0x00000004);
  *attr_el_err_Override_read        = (bool)(aux_buf & 0x00000008);
  *attr_el_err_Safety_Dev_read      = (bool)(aux_buf & 0x00000010);
  *attr_el_err_Extern_read          = (bool)(aux_buf & 0x00000020);
  *attr_el_err_Power_read           = (bool)(aux_buf & 0x00000040);
  *attr_el_err_Brake_read           = (bool)(aux_buf & 0x00000080);
  *attr_el_err_Mot_ready_read       = (bool)(aux_buf & 0x00000100);
  *attr_el_err_Motor_read           = (bool)(aux_buf & 0x00000200);
  *attr_el_err_Mot_Tacho_read       = (bool)(aux_buf & 0x00000400);
  *attr_el_err_Mot_Comm_read        = (bool)(aux_buf & 0x00000800);
  *attr_el_err_Mot_Timeout_read     = (bool)(aux_buf & 0x00001000);
  *attr_el_err_v_Mot_Exceed_read    = (bool)(aux_buf & 0x00002000);
  *attr_el_err_v_Dev_Exceed_read    = (bool)(aux_buf & 0x00004000);
  *attr_el_err_Mot_Overload_read    = (bool)(aux_buf & 0x00008000);
  *attr_el_err_Em_Limit_Dn_read     = (bool)(aux_buf & 0x00010000);
  *attr_el_err_Em_Limit_Up_read     = (bool)(aux_buf & 0x00020000);
  *attr_el_err_Em_Stop_read         = (bool)(aux_buf & 0x00040000);
  *attr_el_err_SW_InterLock_read    = (bool)(aux_buf & 0x00080000);
  *attr_el_err_p_Range_Exceed_read  = (bool)(aux_buf & 0x00100000);
  *attr_el_err_p_Dev_Exceed_read    = (bool)(aux_buf & 0x00200000);
  *attr_el_err_No_Pos_Enc_Sync_read = (bool)(aux_buf & 0x00400000);
  *attr_el_err_Pos_Enc_Sync_read    = (bool)(aux_buf & 0x00800000);
  *attr_el_err_Pos_Enc_read         = (bool)(aux_buf & 0x01000000);
  *attr_el_err_Pos_Enc_Step_read    = (bool)(aux_buf & 0x02000000);
  *attr_el_err_Stow_read            = (bool)(aux_buf & 0x04000000);
  *attr_el_err_Stow_Timeout_read    = (bool)(aux_buf & 0x08000000);
  *attr_el_err_Handcrank_read       = (bool)(aux_buf & 0x10000000);
  *attr_el_err_Cmd_Timeout_read     = (bool)(aux_buf & 0x20000000);
  *attr_el_err_Field_Bus_read       = (bool)(aux_buf & 0x40000000);
  *attr_el_err_Lim_Err_read         = (bool)(aux_buf & 0x80000000);
}
  
  
void DSManager::decode_el_warning_status(uint32_t aux_buf)
{
  *attr_el_wa_Param_Fault_read         = (bool)(aux_buf & 0x00000001);
  *attr_el_wa_Rate_Mode_read           = (bool)(aux_buf & 0x00000002);
  *attr_el_wa_Degraded_Mode_read       = (bool)(aux_buf & 0x00000004);
  *attr_el_wa_Override_read            = (bool)(aux_buf & 0x00000008);
  *attr_el_wa_Heat_Up_Motors_read      = (bool)(aux_buf & 0x00000010);
  *attr_el_wa_extern_Stop_read         = (bool)(aux_buf & 0x00000020);
  *attr_el_wa_LubricationFault_read    = (bool)(aux_buf & 0x00000040);
  *attr_el_wa_Brake_openInaktiv_read   = (bool)(aux_buf & 0x00000080);
  *attr_el_wa_Mot_ready_read           = (bool)(aux_buf & 0x00000100);
  *attr_el_wa_MotFanFault_read         = (bool)(aux_buf & 0x00000200);
  *attr_el_wa_MotWarn_read             = (bool)(aux_buf & 0x00000400);
  *attr_el_wa_Mmax_reached_read        = (bool)(aux_buf & 0x00000800);
  *attr_el_wa_PreLimDn_inconsist_read  = (bool)(aux_buf & 0x00001000);
  *attr_el_wa_PreLimUp_inconsist_read  = (bool)(aux_buf & 0x00002000);
  *attr_el_wa_FinLimDn_inconsist_read  = (bool)(aux_buf & 0x00004000);
  *attr_el_wa_FinLimUp_inconsist_read  = (bool)(aux_buf & 0x00008000);
  *attr_el_wa_Pre_Limit_Up_read        = (bool)(aux_buf & 0x00010000);
  *attr_el_wa_Pre_Limit_Dn_read        = (bool)(aux_buf & 0x00020000);
  *attr_el_wa_Fin_Limit_Up_read        = (bool)(aux_buf & 0x00040000);
  *attr_el_wa_Fin_Limit_Dn_read        = (bool)(aux_buf & 0x00080000);
  *attr_el_wa_Pre_Pre_Limit_Up_read    = (bool)(aux_buf & 0x00100000);
  *attr_el_wa_Pre_Pre_Limit_Dn_read    = (bool)(aux_buf & 0x00200000);
  *attr_el_wa_EmLimitDn_inconsist_read = (bool)(aux_buf & 0x00400000);
  *attr_el_wa_EmLimitUP_inconsist_read = (bool)(aux_buf & 0x00800000);
  *attr_el_wa_Pos_Safe_Enc_Warn_read   = (bool)(aux_buf & 0x01000000);
  *attr_el_wa_Pos_Enc_Warn_read        = (bool)(aux_buf & 0x02000000);
  *attr_el_wa_Stow_Pin_Fault_read      = (bool)(aux_buf & 0x04000000);
  *attr_el_wa_Stowpins_Extr_read       = (bool)(aux_buf & 0x08000000);
  *attr_el_wa_lowPowerMode_read        = (bool)(aux_buf & 0x10000000);
  *attr_el_wa_Motor_Overload_read      = (bool)(aux_buf & 0x20000000);
  *attr_el_wa_Motor_Temp_read          = (bool)(aux_buf & 0x40000000);
  *attr_el_wa_Vel_Limit_read           = (bool)(aux_buf & 0x80000000);
}



void DSManager::decode_az1_motor_status(uint32_t aux_buf)
{
  *attr_az1_mbs_initOk_read             = (bool)(aux_buf & 0x00000001);
  *attr_az1_mbs_bereit_read             = (bool)(aux_buf & 0x00000002);
  *attr_az1_mbs_aktiv_read              = (bool)(aux_buf & 0x00000004);
  *attr_az1_mbs_drzNull_read            = (bool)(aux_buf & 0x00000008);
  *attr_az1_mbs_drzOk_read              = (bool)(aux_buf & 0x00000010);
  *attr_az1_mbs_posOk_read              = (bool)(aux_buf & 0x00000020);
  *attr_az1_mbs_brOffen_read            = (bool)(aux_buf & 0x00000040);
  *attr_az1_mbs_errBus_read             = (bool)(aux_buf & 0x00000080);
  *attr_az1_mbs_errServo_read           = (bool)(aux_buf & 0x00000100);
  *attr_az1_mbs_errSensor_read          = (bool)(aux_buf & 0x00000200);
  *attr_az1_mbs_warn_read               = (bool)(aux_buf & 0x00000400);
  *attr_az1_mbs_warn_iQuad_t_read       = (bool)(aux_buf & 0x00000800);
  *attr_az1_mbs_warn_T_Mot_read         = (bool)(aux_buf & 0x00002000);
  *attr_az1_mbs_warn_Uzk_read           = (bool)(aux_buf & 0x00004000);
  *attr_az1_mbs_v_exceed_read           = (bool)(aux_buf & 0x00008000);
  *attr_az1_mbs_M_exceed_read           = (bool)(aux_buf & 0x00010000);
  *attr_az1_mbs_aktiv_intern_read       = (bool)(aux_buf & 0x00020000);
  *attr_az1_mbs_err_sts_RF_read         = (bool)(aux_buf & 0x00040000);
  *attr_az1_mbs_err_sts_EF_read         = (bool)(aux_buf & 0x00080000);
  *attr_az1_mbs_err_sts_SBM_read        = (bool)(aux_buf & 0x00100000);
  *attr_az1_mbs_M_mode_read             = (bool)(aux_buf & 0x00200000);
  *attr_az1_mbs_wrongMode_read          = (bool)(aux_buf & 0x00400000);
  *attr_az1_mbs_Pow_exceeded_read       = (bool)(aux_buf & 0x00800000);
  *attr_az1_mbs_warn_T_Cooling_read     = (bool)(aux_buf & 0x01000000);
  *attr_az1_mbs_warn_T_Extern_read      = (bool)(aux_buf & 0x02000000);
  *attr_az1_mbs_warn_T_PowerSupply_read = (bool)(aux_buf & 0x04000000);
  *attr_az1_mbs_warn_T_ERModule_read    = (bool)(aux_buf & 0x08000000);
  *attr_az1_mbs_err_temp_read           = (bool)(aux_buf & 0x10000000);
  *attr_az1_mbs_err_iQuad_t_read        = (bool)(aux_buf & 0x20000000);
  *attr_az1_mbs_err_sts_M_read          = (bool)(aux_buf & 0x40000000);
  *attr_az1_mbs_V_Mode_read             = (bool)(aux_buf & 0x80000000);
}

// Cambio


////// LoadProgramTrackTable


LoadProgramTrackTable::LoadProgramTrackTable(uint16_t seq_length)
{
	sequence_length=seq_length;
	length=16+sequence_length*3*8;
}


void LoadProgramTrackTable::set_coordinate_values(double t,double az,double el)
{
	timestamp=t;
	azimuth=az;
	elevation=el;
}


void LoadProgramTrackTable::serialize(void)
{
	//stringstream è stato abbandonato perché dà problemi
	serialized_payload=new char[length];
	memcpy(serialized_payload,&command_type,2);
	memcpy(serialized_payload+2,&subsystem_identifier,2);
	memcpy(serialized_payload+4,&command_identifier,2);
	memcpy(serialized_payload+6,&object_id,2);
	memcpy(serialized_payload+8,&load_mode,2);
	memcpy(serialized_payload+10,&interp_mode,2);
	memcpy(serialized_payload+12,&track_mode,2);
	memcpy(serialized_payload+14,&sequence_length,2);
	memcpy(serialized_payload+16,&timestamp,8);
	memcpy(serialized_payload+24,&azimuth,8);
	memcpy(serialized_payload+32,&elevation,8);
	
	return;
}


////// LoadProgramTrackTable (end)



////// GeneralCommand


GeneralCommand::GeneralCommand(uint32_t cmd_counter,Payload *new_payload)
{
	command_counter=cmd_counter;
	
#if OLD_ICD
	message_length=24+new_payload->length;
#else
	message_length=20+new_payload->length;
#endif

	payload=new_payload;
}



void GeneralCommand::serialize(void)
{
	serialized_command=new char[message_length];
	memcpy(serialized_command,&start_flag,4);
	memcpy(serialized_command+4,&message_length,4);
	memcpy(serialized_command+8,&source,4);
	memcpy(serialized_command+12,&command_counter,4);
	
#if OLD_ICD
	memcpy(serialized_command+16,&number_of_commands,4);
	memcpy(serialized_command+20,payload->serialized_payload,payload->length*sizeof(char));
	memcpy(serialized_command+20+payload->length*sizeof(char),&end_flag,4);
#else
	memcpy(serialized_command+16,payload->serialized_payload,payload->length*sizeof(char));
	memcpy(serialized_command+16+payload->length*sizeof(char),&end_flag,4);
#endif

	return;
}




void GeneralCommand::send_to_DS(int sockfd)//void GeneralCommand::send_to_DS(const char *DS_addr,int DS_port) //FIXME: dopo socket sempre aperta
{
  int n; //This variable is used to store write() and read() responses from socket

  unsigned char buffer[256]; //Store write() and read() packet
  
  //Fill the buffer with the serialized command
  memcpy(buffer,serialized_command,message_length);
 
  //This deep debug is to check if message_lenght and sockfd are as expected
#if DEBUG2
  printf("DEBUG2: SOCKET 4: (send_to_DS) message_length,sockfd = %d,%d\n",message_length,sockfd);
#endif
	
	//Write buffer on socket
  n=write(sockfd,buffer,message_length);

  //This deep debug is to check how many and which bytes were sent
#if DEBUG2
  printf("DEBUG2: SOCKET 5: (send_to_DS) n = %d\n",n);
	
	printf("Sent message: \n");
  for(int i=0;i<sizeof(buffer);i++)
	{
		printf("%02X ",(unsigned char)buffer[i]);
		if(!((i+1)%16))
			printf("\n");
		if(i>4)
			if(buffer[i]==0xa1 && buffer[i-1]==0xfc && buffer[i-2]==0xcf && buffer[i-3]==0xd1)
			{
				printf("\n");
				break;
			}
	}
#endif

  if (n<0) 
    std::cerr << "ERROR writing to socket" << endl;
  
  //Reset buffer and read from socket
  bzero(buffer,256);
  n=read(sockfd,buffer,255);
  
  
  printf("\nSize of ACK: %d\n\n",n);
  printf("\nSize of ACK: %d\n\n",sizeof(buffer));
  
  //This deep debug is to check how many and which bytes were received
#if DEBUG2
  printf("DEBUG2: SOCKET 6: (send_to_DS) n = %d\n",n);
#endif

  if (n<0) 
    std::cerr << "ERROR reading from socket" << endl;
  
  //This deep debug is to print the raw received ACK packet
#if DEBUG2
  for(int i=0;i<sizeof(buffer);i++)
	{
		printf("%02X ",(unsigned char)buffer[i]);
		if(!((i+1)%16))
			printf("\n");
		if(i>4)
			if(buffer[i]==0xa1 && buffer[i-1]==0xfc && buffer[i-2]==0xcf && buffer[i-3]==0xd1)
			{
				printf("\n");
				break;
			}
	}
#endif
	
	//Decode ACK packet and print useful information
	decode_command_ack(buffer);
  
  return;
}


void GeneralCommand::print_command(void)
{
	//Tango::INFO_STREAM << "\nMessage sent to DS: " << endl;
	for(uint32_t i=0;i<message_length;i++)
	{
		printf("%02X ",(unsigned char)serialized_command[i]);
		if(!((i+1)%16))
			printf("\n");
	}
	printf("\n");
}


int GeneralCommand::decode_command_ack(unsigned char *ack_msg)
{
#if OLD_ICD
	uint32_t ack_start_flag,ack_message_length,ack_source,ack_subsystem_identifier;
	uint32_t ack_command,ack_command_serial_number,ack_command_identifier,ack_status,ack_end_flag;
	std::string aux_msg;
	
	ack_start_flag=*(uint32_t *)(ack_msg);
	ack_message_length=*(uint32_t *)(ack_msg+4);
	ack_source=*(uint32_t *)(ack_msg+8);
	ack_subsystem_identifier=*(uint32_t *)(ack_msg+12);
	ack_command=*(uint32_t *)(ack_msg+16);
	ack_command_serial_number=*(uint32_t *)(ack_msg+20);
	ack_command_identifier=*(uint32_t *)(ack_msg+24);
	ack_status=*(uint32_t *)(ack_msg+28);
	ack_end_flag=*(uint32_t *)(ack_msg+32);
	
	printf("\n--- Command ACK ---------\n");
	
	// Check for packet integrity
	if (ack_start_flag==0x1DFCCF1A && ack_message_length==36 && ack_command_identifier==150 && ack_end_flag==0xA1FCCFD1)
		printf("ACK packet integrity [ OK ]\n");
	else
	{
		printf("ACK packet integrity [FAIL]\n");
		return;
	}
	
	switch(ack_source)
	{
		case 2:
			aux_msg="remote interface";
			break;
		default:
			aux_msg="unknown";
	}
	std::cout << "Source: " << aux_msg << endl;
	
	switch(ack_subsystem_identifier)
	{
		case 1:
			aux_msg="azimuth axis";
			break;
		case 2:
			aux_msg="elevation axis";
			break;
		case 3:
			aux_msg="feed indexer";
			break;
		case 7:
			aux_msg="tracking system";
			break;
		case 9:
			aux_msg="system";
			break;
		case 10:
			aux_msg="hexapod control";
			break;
		default:
			aux_msg="unknown";
	}
	std::cout << "Subsystem identifier: " << aux_msg << endl;
	
	switch(ack_command)
	{
		case 2001:
			aux_msg="inactivate axis";
			break;
		case 2002:
			aux_msg="activate axis";
			break;
		case 2003:
			aux_msg="axis manual position absolute";
			break;
		case 2004:
			aux_msg="axis manual position relative";
			break;
		case 2005:
			aux_msg="axis slew";
			break;
		case 2007:
			aux_msg="axis stop";
			break;
		case 2008:
			aux_msg="axis track";
			break;
		case 2009:
			aux_msg="synchronize axis";
			break;
		case 2014:
			aux_msg="axis software interlock";
			break;
		case 2050:
			aux_msg="axis stow";
			break;
		case 2051:
			aux_msg="axis unstow";
			break;
		case 2052:
			aux_msg="axis drive to stow";
			break;
		case 2053:
			aux_msg="axis stow pin stop";
			break;
		case 2060:
			aux_msg="axis drive to park";
			break;
		default:
			aux_msg=std::to_string(ack_command);
	}
	std::cout << "Received command: " << aux_msg << endl;
	
	std::cout << "Command serial number: " << std::to_string(ack_command_serial_number) << endl;
	
	switch(ack_status)
	{
		case 1:
			aux_msg="command done";
			break;
		case 4:
			aux_msg="wrong mode";
			break;
		case 5:
			aux_msg="parameter error";
			break;
		case 6:
			aux_msg="wrong command length";
			break;
		case 7:
			aux_msg="undefined command";
			break;
		case 9:
			aux_msg="command accepted";
			break;
		case 10:
			aux_msg="command timeout";
			break;
		default:
			aux_msg="unknown";
	}
	std::cout << "Status of the received command: " << aux_msg << endl;
	
	printf("-------------------------\n\n");
	
#else //FIXME: just as a debug for the new ICD, to be implemented as the old one


	uint32_t ack_start_flag,ack_message_length,ack_source;
	uint32_t ack_command,ack_command_serial_number,ack_status,ack_end_flag;
	std::string aux_msg;
	
	ack_start_flag=*(uint32_t *)(ack_msg);
	ack_message_length=*(uint32_t *)(ack_msg+4);
	ack_source=*(uint32_t *)(ack_msg+8);
	ack_command=*(uint32_t *)(ack_msg+12);
	ack_command_serial_number=*(uint32_t *)(ack_msg+16);
	ack_status=*(uint32_t *)(ack_msg+20);
	ack_end_flag=*(uint32_t *)(ack_msg+24);
	
	printf("\n--- Command ACK ---------\n");
	
	// Check for packet integrity
	if (ack_start_flag==0x1DFCCF1A && ack_message_length==28 && ack_end_flag==0xA1FCCFD1)
		printf("ACK packet integrity [ OK ]\n");
	else
	{
		printf("ACK packet integrity [FAIL]\n");
		return -1;
	}
	
	switch(ack_source)
	{
		case 2:
			aux_msg="remote interface";
			break;
		default:
			aux_msg="unknown";
	}
	std::cout << "Source: " << aux_msg << endl;
	
	switch(ack_command)
	{
		case 42:
			aux_msg="not available in this simulated ACU";
			break;
	}
	std::cout << "Received command: " << aux_msg << endl;
	
	std::cout << "Command serial number: " << std::to_string(ack_command_serial_number) << endl;
	
	switch(ack_status)
	{
		case 1:
			aux_msg="command done";
			break;
		case 4:
			aux_msg="wrong mode";
			break;
		case 5:
			aux_msg="parameter error";
			break;
		case 6:
			aux_msg="wrong command length";
			break;
		case 7:
			aux_msg="undefined command";
			break;
		case 9:
			aux_msg="command accepted";
			break;
		case 10:
			aux_msg="command timeout";
			break;
		default:
			aux_msg="unknown";
	}
	std::cout << "Status of the received command: " << aux_msg << endl;


#if DEBUG2
  for(int i=0;i<28;i++)
	{
		printf("%02X ",(unsigned char)ack_msg[i]);
		if(!((i+1)%16))
			printf("\n");
		if(i>4)
			if(ack_msg[i]==0xa1 && ack_msg[i-1]==0xfc && ack_msg[i-2]==0xcf && ack_msg[i-3]==0xd1)
			{
				printf("\n");
				break;
			}
	}
#endif
	
#endif

	return 0;
}



////// GeneralCommand (end)



////// ModeCommand


ModeCommand::ModeCommand(void)
{
	length=22;
}


void ModeCommand::serialize(void)
{
	serialized_payload=new char[length];
	memcpy(serialized_payload,&command_type,2);
	memcpy(serialized_payload+2,&subsystem_identifier,2);
	memcpy(serialized_payload+4,&command_identifier,2);
	memcpy(serialized_payload+6,&parameter_1,8);
	memcpy(serialized_payload+14,&parameter_2,8);
	return;
}




////// ModeCommand (end)







////// ParameterCommand


ParameterCommand::ParameterCommand(void)
{
	length=22;
}


void ParameterCommand::serialize(void)
{
	serialized_payload=new char[length];
	memcpy(serialized_payload,&command_type,2);
	memcpy(serialized_payload+2,&subsystem_identifier,2);
	memcpy(serialized_payload+4,&command_identifier,2);
	memcpy(serialized_payload+6,&parameter_1,8);
	memcpy(serialized_payload+14,&parameter_2,8);
	return;
}




////// ParameterCommand (end)



////// ParameterCommand


FlexCommand::FlexCommand(void)
{
	//length=22;
}


void FlexCommand::serialize(void)
{
	serialized_payload=new char[length];
	//memcpy(serialized_payload,&command_type,2);
	memcpy(serialized_payload,&subsystem_identifier,2);
	memcpy(serialized_payload+2,&command_identifier,2);
	
	switch(command_identifier)
	{
		// Commands without parameters
		// (reported just to account for all the commands)
		case 1: //Activate
		case 2: //Deactivate
		case 3: //Stop
		case 9: //Reset
			break;
		
		// Commands with REAL64,REAL64 parameters
		case 300: //Slew2AbsPos
			memcpy(serialized_payload+4,&real64par_1,8);
			memcpy(serialized_payload+12,&real64par_2,8);
			break;
	}
	
	return;
}




////// FlexCommand (end)



// //--------------------------------------------------------
// /**
//  *	Command MonitorLoop related method
//  *	Description: 
//  *
//  */
// //--------------------------------------------------------
// void DSManager::monitor_loop()
// {
// 	DEBUG_STREAM << "DSManager::MonitorLoop()  - " << device_name << endl;
// 	
// 	//	Add your own code
// 	
// 	
// 	
// 	
// 	
// 	
// 	
// }


/*----- PROTECTED REGION END -----*/	//	DSManager::namespace_ending
} //	namespace
