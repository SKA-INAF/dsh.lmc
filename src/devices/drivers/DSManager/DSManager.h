/*----- PROTECTED REGION ID(DSManager.h) ENABLED START -----*/
//=============================================================================
//
// file :        DSManager.h
//
// description : Include file for the DSManager class
//
// project :     DSManager
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef DSManager_H
#define DSManager_H

#include <tango.h>
#include <LMCDevice.h>
#include <cstdint>
#include <cstring>
#include <string>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <sstream>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h> 
#include <yat/time/Time.h>

#include <thread>

//Socket settings
#define SEND_MSG 1  //0: do not send the packet
#define DS_ADDRESS "151.97.17.169"  //DS IPv4 address
#define DS_CMD_PORT 9000 //DS command port
#define DS_MON_PORT 9001 //DS monitoring port

//Deep debug
#define DEBUG2 0 //0: skip deep debug

//Undefined values
#define FI_VEL 10 //Feed indexer velocity in deg/s
#define SLEW_VEL 1 //Slew velocity in deg/s
#define V_MAX 1 //Maximum allowed velocity in deg/s

//Switch between old and new ICD
#define OLD_ICD 0 //Set to 1 if testing with the old ICD, 0 otherwise

//Test simulator
#define SIM_TEST 1 //Toggle fake ACU monitoring simulation


/*----- PROTECTED REGION END -----*/	//	DSManager.h

/**
 *  DSManager class description:
 *    DSManager
 */

namespace DSManager_ns
{
enum _centralLoggerStatusEnum {
} ;
typedef _centralLoggerStatusEnum centralLoggerStatusEnum;

enum _elementLoggerStatusEnum {
} ;
typedef _elementLoggerStatusEnum elementLoggerStatusEnum;

enum _storageLoggerStatusEnum {
} ;
typedef _storageLoggerStatusEnum storageLoggerStatusEnum;

enum _fwdAttrInitStatusEnum {
} ;
typedef _fwdAttrInitStatusEnum fwdAttrInitStatusEnum;

enum _provaENUMEnum {
	_ZERO,
	_UNO,
	_DUE,
} ;
typedef _provaENUMEnum provaENUMEnum;

/*----- PROTECTED REGION ID(DSManager::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations





/**
 *  \brief Basic class for all command payloads.
 *               
 *  This class serves only as a base class for all the different
 *  kinds of possible payloads of a general command. It should
 *  never be istantiated directly.
 *
 */
class Payload
{
	public:
	unsigned int length; /**< \brief payload length in byte*/
	
	/**
	 * \brief serialized payload
	 *
	 * This member should contain the serialized payload created
	 * by the `serialize()` method implemented by each derived class.
	 * This string is to be included as the payload of a general command.
	 */
	char *serialized_payload;
};



/**
 *  \brief Create a track table packet.
 *               
 *  This class is derived from the base class Payload and it is
 *  used to create a track table packet. Predefined variables
 *  should not be modified.
 *               
 */
class LoadProgramTrackTable : public Payload
{
	double azimuth,elevation,timestamp;
	
	public:
	const uint16_t command_type=3; /**< \brief (special command)*///1
	uint16_t subsystem_identifier=7; /**< \brief (tracking)*/     //2
	uint16_t command_identifier=3050;                             //3
	uint16_t object_id=1;                                         //4
	
	/**
	 * \brief table load mode
	 * 
	 * Choose the table load mode.
	 *
	 * value | meaning
	 * ------|------------------ 
	 * 1     | new table to load
   * 2     | add table entries
   * 3     | reset track
	 */
	uint16_t load_mode;                                           //5
	
	/**
	 * \brief interpolation mode
	 * 
	 * Choose the interpolation mode.
	 *
	 * value | meaning
	 * ------|-------- 
	 * 0     | Newton
   * 1     | spline
	 */	
	uint16_t interp_mode;                                         //6
	const uint16_t track_mode=1; /**< \brief (use AZ-EL)*/        //7
	uint16_t sequence_length; /**< \brief payload length in byte*///8
	
	/**
	 *  \brief LoadProgramTrackTable constructor.
	 *               
	 *  A new LoadProgramTrackTable object is created. The sequence
	 *  length is passed as the only paramater.
	 *
	 *  @param seq_length
	 *               the coordinate sequence length
	 *
	 *  FIXME:
	 *  1. Currently seq_length must be 1.
	 */
	LoadProgramTrackTable(uint16_t);
	
	/**
	 *  \brief Set the coordinate values.
	 *               
	 *  The global variables containing time-stamped coordinates are
	 *  updated
	 *
	 *  @param t
	 *               the timestamp
	 *  @param az
	 *               the azimuth
	 *  @param el
	 *               the elevation
	 *
	 *  FIXME:
	 *  1. This implementation shall be changed.
	 *
	 */
	void set_coordinate_values(double,double,double);
	
	/**
	 *  \brief Serialize the table.
	 *               
	 *  The serialized table is created using memcpy and stored in
	 *  the serialized_payload member.
	 *
	 */
	void serialize(void);
};


/**
 *  \brief Create a mode command packet.
 *               
 *  This class is derived from the base class Payload and it is
 *  used to create a mode command packet. Predefined variables
 *  should not be modified.
 *               
 */
class ModeCommand : public Payload
{
	uint16_t command_type=1; //Mode command
	public:
	
	/**
	 * \brief the subsystem identifier
	 * 
	 * Choose the subsystem to command.
	 *
	 * value | meaning
	 * ------|---------- 
	 * 1     | azimuth
   * 2     | elevation
   * 3     | indexer
	 */	
	uint16_t subsystem_identifier;
	
	/**
	 * \brief the command identifier
	 * 
	 * The command indentifier, see the MTM document for possible values.
	 *
	 */
	uint16_t command_identifier;
	
	double parameter_1,parameter_2;
	
	/**
	 *  \brief ModeCommand constructor.
	 *               
	 *  A new ModeCommand object is created.
	 */
	ModeCommand(void);
	
	/**
	 *  \brief Serialize the command.
	 *               
	 *  The serialized command is created using memcpy and stored in
	 *  the serialized_payload member.
	 *
	 */
	void serialize(void);
};




/**
 *  \brief Create a parameter command packet.
 *               
 *  This class is derived from the base class Payload and it is
 *  used to create a mode parameter packet. Predefined variables
 *  should not be modified.
 *               
 */
class ParameterCommand : public Payload
{
	uint16_t command_type=2; //Parameter command
	public:
	
	/**
	 * \brief the subsystem identifier
	 * 
	 * Choose the subsystem to command.
	 *
	 * value | meaning
	 * ------|---------- 
	 * 1     | azimuth
   * 2     | elevation
   * 3     | indexer
	 */	
	uint16_t subsystem_identifier;
	
	/**
	 * \brief the command identifier
	 * 
	 * The command indentifier, see the MTM document for possible values.
	 *
	 */
	uint16_t command_identifier;
	
	double parameter_1,parameter_2;
	
	/**
	 *  \brief ParameterCommand constructor.
	 *               
	 *  A new ParameterCommand object is created.
	 */
	ParameterCommand(void);
	
	/**
	 *  \brief Serialize the command.
	 *               
	 *  The serialized command is created using memcpy and stored in
	 *  the serialized_payload member.
	 *
	 */
	void serialize(void);
};





class FlexCommand : public Payload
{
	public:
	
	/**
	 * \brief the subsystem identifier
	 * 
	 * Choose the subsystem to command.
	 *
	 * value | meaning
	 * ------|---------- 
	 * 1     | azimuth
   * 2     | elevation
   * 3     | indexer
   * ...   | ...
	 */	
	uint16_t subsystem_identifier;
	
	/**
	 * \brief the command identifier
	 * 
	 * The command indentifier, see the MTM document for possible values.
	 *
	 */
	uint16_t command_identifier;
	
	double real64par_1,real64par_2;
	uint16_t uint16par_1,uint16par_2;
	
	/**
	 *  \brief FlexCommand constructor.
	 *               
	 *  A new FlexCommand object is created.
	 */
	FlexCommand(void);
	
	/**
	 *  \brief Serialize the command.
	 *               
	 *  The serialized command is created using memcpy and stored in
	 *  the serialized_payload member.
	 *
	 */
	void serialize(void);
};







/**
 *  \brief Implement a General Command packet.
 *               
 *  An istance to this class can be used to create and send
 *  a general command. The variable payload is loaded in
 *  construction phase through a pointer to a Payload object.
 *  Private members of this class are start_flag, command_source
 *  and end_flag. There private members define the packet header
 *  and tail and the source of the command (LMC in our case). Their
 *  value must not be modified.
 *
 */
class GeneralCommand
{
	const uint32_t start_flag=0x1DFCCF1A;//1
	
#if OLD_ICD
	uint32_t source=2; //remote command  //3
#else
	uint32_t source=1; //LMC //3
#endif

	const uint32_t end_flag=0xA1FCCFD1;  //7
	
	public:
	uint32_t message_length; /**< \brief total packet length in byte*/  //2
	uint32_t command_counter; /**< \brief the unique command identifier*/           //4
	uint32_t number_of_commands=1; /**< \brief number of command issued as payloads*/      //5
	
	/**
	 *  \brief the payload to be inserted in the General Command packet.
	 *               
	 *  A pointer to a Payload object whose serialized_payload member
	 *  is the general command payload.
	 *
	 */
	Payload *payload;   //6
	
	/**
	 * \brief serialized general command packet
	 *
	 * This member should contain the serialized message created
	 * by the serialize().
	 */
	char *serialized_command;
	
	/**
	 *  \brief GeneralCommand constructor.
	 *               
	 *  A new GeneralCommand object is created. The unique command
	 *  identifier is passed as the first argument. The second
	 *  argument is a pointer to the Payload object whose
	 *  serialized_payload member is the payload of the command.
	 *  The total command length is calculated adding to the 24 bytes
	 *  constituing the header and the tail of the command the length
	 *  of the payload, accessed via the Payload::length variable.
	 *
	 *  @param cmd_counter
	 *               global unique identifier of this command
	 *  @param new_payload
	 *               a pointer to the Payload object that will be the payload of
	 *               this command
	 */
	GeneralCommand(uint32_t,Payload *);	
	
	/**
	 *  \brief Serialize the entire packet.
	 *               
	 *  The serialized packet is created using memcpy and stored in
	 *  the serialized_command member.
	 *
	 */
	void serialize(void);
	
	/**
	 *  \brief Send the serialized packet to DS.
	 *               
	 *  The serialized packet is sent to DS via the TCP/IP protocol.
	 *  A new socket is created and connected to the corresponding
	 *  socket on the DS server.
	 *
	 *  @param DS_addr
	 *               the DS IPv4 address
	 *  @param DS_port
	 *               the number of the port used for communication
	 *
	 *  FIXME:
	 *  1. Currently the ACK package is only displayed, not parsed.
	 *
	 */
	void send_to_DS(int);//void send_to_DS(const char *,int); //FIXME: dopo socket sempre aperta
	
	/**
	 *  \brief Print the serialized command.
	 *
	 *  This method prints the serialized command as a sequence of
	 *  hexadecimal values (16 per row). It should be used only for
	 *  debugging purpose.
	 *
	 */
	void print_command(void); //For debug
	
	int decode_command_ack(unsigned char *);
};

/*----- PROTECTED REGION END -----*/	//	DSManager::Additional Class Declarations

class DSManager : public LMCDevice_ns::LMCDevice
{

/*----- PROTECTED REGION ID(DSManager::Data Members) ENABLED START -----*/

//	Add your own data members
protected:

	uint16_t pointing_state;
	double azimuth,elevation,timestamp;
	uint32_t global_command_counter;
	
  int sockfd, portno;
  struct sockaddr_in serv_addr;
  struct hostent *server;
  
  /*int mon_sockfd;
  int mon_portno;
  struct sockaddr_in mon_serv_addr;
  struct hostent *mon_server;*/
     
		

/*----- PROTECTED REGION END -----*/	//	DSManager::Data Members

//	Device property data members
public:

	bool	mandatoryNotDefined;

//	Attribute data members
public:
	Tango::DevShort	*attr_ds_mode_read;
	Tango::DevShort	*attr_ds_pointState_read;
	Tango::DevShort	*attr_ds_powerState_read;
	Tango::DevShort	*attr_ds_controlState_read;
	Tango::DevBoolean	*attr_testMode_read;
	Tango::DevBoolean	*attr_powerCut_read;
	Tango::DevBoolean	*attr_powerRestored_read;
	Tango::DevULong	*attr_message_length_read;
	Tango::DevUShort	*attr_version_read;
	Tango::DevDouble	*attr_diagnosis_signal_read;
	Tango::DevBoolean	*attr_ps_P0_MainSwitch_Off_read;
	Tango::DevBoolean	*attr_ps_P0_UPS_MainSwitch_Off_read;
	Tango::DevBoolean	*attr_ps_P0_OVP_fault_read;
	Tango::DevBoolean	*attr_ps_P1_UPS_PhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P1_MainSwitch_Off_read;
	Tango::DevBoolean	*attr_ps_P1_InfraPhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P1_CntrlPowerA_fault_read;
	Tango::DevBoolean	*attr_ps_P1_CntrlPowerB_fault_read;
	Tango::DevBoolean	*attr_ps_P1_CntrlPowerC_fault_read;
	Tango::DevBoolean	*attr_ps_P1_CntrlPowerD_fault_read;
	Tango::DevBoolean	*attr_ps_P1_PowMeasureTerminal_fault_read;
	Tango::DevBoolean	*attr_ps_P1_OvervoltageProt_fault_read;
	Tango::DevBoolean	*attr_ps_P2_MainPow_I_PhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P2_MainPow_II_PhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P2_UPSPow_I_PhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P2_UPSPow_II_PhaseGuard_fault_read;
	Tango::DevBoolean	*attr_ps_P2_CntrlPowerA_fault_read;
	Tango::DevBoolean	*attr_ps_P2_CntrlPowerB_fault_read;
	Tango::DevBoolean	*attr_ps_P2_OvervoltageProt_fault_read;
	Tango::DevBoolean	*attr_ps_servoPowD1_fault_read;
	Tango::DevBoolean	*attr_ps_servoPowD2_fault_read;
	Tango::DevBoolean	*attr_ps_ACUPow_fault_read;
	Tango::DevBoolean	*attr_ps_error_active_read;
	Tango::DevBoolean	*attr_so_sysSim_read;
	Tango::DevBoolean	*attr_so_eStop_read;
	Tango::DevBoolean	*attr_so_swIntLock_read;
	Tango::DevBoolean	*attr_so_Power_Up_read;
	Tango::DevBoolean	*attr_so_sysWarn_read;
	Tango::DevBoolean	*attr_so_keyOverrideActive_read;
	Tango::DevBoolean	*attr_so_intLockAckActive_read;
	Tango::DevBoolean	*attr_so_esOverride_read;
	Tango::DevBoolean	*attr_so_service_read;
	Tango::DevBoolean	*attr_so_sysOn_read;
	Tango::DevBoolean	*attr_so_HHPon_read;
	Tango::DevBoolean	*attr_so_LCPon_read;
	Tango::DevBoolean	*attr_so_PCUon_read;
	Tango::DevBoolean	*attr_so_remote_read;
	Tango::DevBoolean	*attr_so_initOk_read;
	Tango::DevBoolean	*attr_so_confOk_read;
	Tango::DevBoolean	*attr_so_driveActive_read;
	Tango::DevBoolean	*attr_so_masterCntrl_read;
	Tango::DevBoolean	*attr_so_ACUon_read;
	Tango::DevBoolean	*attr_so_HCUon_read;
	Tango::DevBoolean	*attr_so_SCPon_read;
	Tango::DevBoolean	*attr_so_PCPon_read;
	Tango::DevBoolean	*attr_so_servoD1_notSel_read;
	Tango::DevBoolean	*attr_so_servoD2_notSel_read;
	Tango::DevBoolean	*attr_so_servoD1_on_read;
	Tango::DevBoolean	*attr_so_servoD2_on_read;
	Tango::DevBoolean	*attr_so_servoD1_Ok_read;
	Tango::DevBoolean	*attr_so_servoD2_Ok_read;
	Tango::DevBoolean	*attr_so_servoD1_Err_read;
	Tango::DevBoolean	*attr_so_servoD2_Err_read;
	Tango::DevBoolean	*attr_so_local_read;
	Tango::DevBoolean	*attr_sw_E2_smokeDetection_read;
	Tango::DevBoolean	*attr_sw_E3_smokeDetection_read;
	Tango::DevBoolean	*attr_sw_humidity_Base_read;
	Tango::DevBoolean	*attr_sw_humidity_AZC_read;
	Tango::DevBoolean	*attr_sw_humidity_P2_read;
	Tango::DevBoolean	*attr_sw_Temp_AZC_read;
	Tango::DevBoolean	*attr_sw_Temp_AEC_read;
	Tango::DevBoolean	*attr_sw_Temp_D1_read;
	Tango::DevBoolean	*attr_sw_Temp_AB_ground_read;
	Tango::DevBoolean	*attr_sw_Temp_M1_read;
	Tango::DevBoolean	*attr_sw_Temp_AB_first_read;
	Tango::DevBoolean	*attr_sw_Temp_outside_read;
	Tango::DevBoolean	*attr_sw_P1_cntrlPower_read;
	Tango::DevBoolean	*attr_sw_P2_cntrlPower_read;
	Tango::DevBoolean	*attr_sw_fieldBusErr_HCU_read;
	Tango::DevBoolean	*attr_sw_P2_OverVolFault_read;
	Tango::DevBoolean	*attr_sw_P1_OverVolFault_read;
	Tango::DevBoolean	*attr_sw_Invar_Fault_read;
	Tango::DevBoolean	*attr_sw_Temp_ELC_read;
	Tango::DevBoolean	*attr_sw_Temp_HXP_read;
	Tango::DevBoolean	*attr_sw_Hum_ELC_read;
	Tango::DevBoolean	*attr_sw_Hum_HXP_read;
	Tango::DevBoolean	*attr_sw_Temp_AZ_Bearing_read;
	Tango::DevBoolean	*attr_sw_commErrOvRide_read;
	Tango::DevBoolean	*attr_sw_File_Logging_read;
	Tango::DevBoolean	*attr_sw_Ring_Logging_read;
	Tango::DevBoolean	*attr_swi_overrideES_read;
	Tango::DevBoolean	*attr_swi_swIntLockCmd_read;
	Tango::DevBoolean	*attr_swi_sysOff_read;
	Tango::DevBoolean	*attr_swi_shutdown_read;
	Tango::DevBoolean	*attr_swi_mainPow_read;
	Tango::DevBoolean	*attr_swi_cntrlPow_read;
	Tango::DevBoolean	*attr_swi_safDevES_read;
	Tango::DevBoolean	*attr_swi_fieldbus_read;
	Tango::DevBoolean	*attr_swi_taskComm_read;
	Tango::DevBoolean	*attr_swi_startupFailed_read;
	Tango::DevBoolean	*attr_swi_init_az_read;
	Tango::DevBoolean	*attr_swi_init_el_read;
	Tango::DevBoolean	*attr_swi_init_track_read;
	Tango::DevBoolean	*attr_es_safDev_safe_read;
	Tango::DevBoolean	*attr_es_safDev_err_read;
	Tango::DevBoolean	*attr_es_eStop_TowerMainDoor_read;
	Tango::DevBoolean	*attr_es_eStop_ControlCabinet_read;
	Tango::DevBoolean	*attr_es_eStop_PCU_AZC_read;
	Tango::DevBoolean	*attr_es_door_HatchToRoof_read;
	Tango::DevBoolean	*attr_es_eStop_AZC_read;
	Tango::DevBoolean	*attr_es_door_Access_AZC_balcony_open_read;
	Tango::DevBoolean	*attr_es_door_Access_AZC_balcony_unlocked_read;
	Tango::DevBoolean	*attr_es_door_AZC_Access_ELC_open_read;
	Tango::DevBoolean	*attr_es_door_AZC_Access_ELC_unlocked_read;
	Tango::DevBoolean	*attr_es_door_Access_ELC_open_read;
	Tango::DevBoolean	*attr_es_door_Access_ELC_unlocked_read;
	Tango::DevBoolean	*attr_es_eStop_AEC_read;
	Tango::DevBoolean	*attr_es_eStop_PCU_AEC_read;
	Tango::DevBoolean	*attr_es_eStop_ELC_read;
	Tango::DevBoolean	*attr_es_GrpAz_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpAz_comErr_read;
	Tango::DevBoolean	*attr_es_GrpAz_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpAz2_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpAz2_comErr_read;
	Tango::DevBoolean	*attr_es_GrpAz2_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpEl_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpEl_comErr_read;
	Tango::DevBoolean	*attr_es_GrpEl_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpEl2_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpEl2_comErr_read;
	Tango::DevBoolean	*attr_es_GrpEl2_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpEStop_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpEStop_comErr_read;
	Tango::DevBoolean	*attr_es_GrpEStop_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpDecInput_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpDecInput_comErr_read;
	Tango::DevBoolean	*attr_es_GrpDecInput_OutErr_read;
	Tango::DevBoolean	*attr_es_GrpDecOutput_FbErr_read;
	Tango::DevBoolean	*attr_es_GrpDecOutput_comErr_read;
	Tango::DevBoolean	*attr_es_GrpDecOutput_OutErr_read;
	Tango::DevBoolean	*attr_es_EDM_Inkonsistent_read;
	Tango::DevBoolean	*attr_es_EStop_Inkonsistent_read;
	Tango::DevBoolean	*attr_es_OpEle_Inkonsistent_read;
	Tango::DevBoolean	*attr_es_EStop_MonErr_read;
	Tango::DevBoolean	*attr_es_Az_MonErr_read;
	Tango::DevBoolean	*attr_es_El_MonErr_read;
	Tango::DevBoolean	*attr_comm_E2_KF200_stateErr_read;
	Tango::DevBoolean	*attr_comm_E2_KF250_stateErr_read;
	Tango::DevBoolean	*attr_comm_E2_KF223_stateErr_read;
	Tango::DevBoolean	*attr_comm_E2_KF200_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_E2_KF250_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_E3_KF300_stateErr_read;
	Tango::DevBoolean	*attr_comm_E3_KF300_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_E3_KF349_stateErr_read;
	Tango::DevBoolean	*attr_comm_E3_KF_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_E4_KF400_stateErr_read;
	Tango::DevBoolean	*attr_comm_E4_KF455_stateErr_read;
	Tango::DevBoolean	*attr_comm_E4_KF_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_C2_KF_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_P1_KF20_stateErr_read;
	Tango::DevBoolean	*attr_comm_P1_KF20_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_P1_KF20_couplerStateErr_read;
	Tango::DevBoolean	*attr_comm_C2_KF600_stateErr_read;
	Tango::DevBoolean	*attr_comm_JB_AZEC_KF500_stateErr_read;
	Tango::DevBoolean	*attr_comm_JB_AZEC_Terminal_wcStateErr_read;
	Tango::DevBoolean	*attr_comm_HxpDevState_read;
	Tango::DevBoolean	*attr_controlModeSts_LCP_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_LCP_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_SCP_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_SCP_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_PCP_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_PCP_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_Remote_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_Remote_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_HHP_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_HHP_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_Pcu_Sts_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_Pcu_Cmd_connect_read;
	Tango::DevBoolean	*attr_controlModeSts_HHP_connect_C1_read;
	Tango::DevBoolean	*attr_controlModeSts_HHP_connect_C2_read;
	Tango::DevDouble	*attr_actual_time_read;
	Tango::DevDouble	*attr_actual_time_offset_read;
	Tango::DevUShort	*attr_time_source_read;
	Tango::DevUChar	*attr_no_PPS_signal_read;
	Tango::DevUChar	*attr_clock_online_read;
	Tango::DevUChar	*attr_clock_Ok_read;
	Tango::DevDouble	*attr_power_drive_cabinet_1_read;
	Tango::DevDouble	*attr_power_drive_cabinet_2_read;
	Tango::DevDouble	*attr_power_antenna_read;
	Tango::DevFloat	*attr_temperature_AEC_read;
	Tango::DevFloat	*attr_outdoor_temperature_read;
	Tango::DevFloat	*attr_temperature_D1_read;
	Tango::DevFloat	*attr_temperature_AB_ground_floor_read;
	Tango::DevFloat	*attr_temperature_AB_first_floor_read;
	Tango::DevFloat	*attr_temperature_AZC_read;
	Tango::DevFloat	*attr_temperature_ELC_read;
	Tango::DevFloat	*attr_temperature_hexapod_read;
	Tango::DevFloat	*attr_temperature_AZ_Bearing_read;
	Tango::DevFloat	*attr_temperature_M1_1_read;
	Tango::DevFloat	*attr_temperature_M1_2_read;
	Tango::DevFloat	*attr_temperature_M1_3_read;
	Tango::DevFloat	*attr_temperature_M1_4_read;
	Tango::DevFloat	*attr_humidity_Hexapod_read;
	Tango::DevFloat	*attr_humidity_ELC_read;
	Tango::DevFloat	*attr_humidity_Outside_read;
	Tango::DevBoolean	*attr_az_abs_initOk_read;
	Tango::DevBoolean	*attr_az_abs_sim_read;
	Tango::DevBoolean	*attr_az_abs_reset_read;
	Tango::DevBoolean	*attr_az_abs_notStop_read;
	Tango::DevBoolean	*attr_az_abs_bereit_read;
	Tango::DevBoolean	*attr_az_abs_motEin_read;
	Tango::DevBoolean	*attr_az_abs_praez_read;
	Tango::DevBoolean	*attr_az_abs_lockAT_read;
	Tango::DevBoolean	*attr_az_abs_override_read;
	Tango::DevBoolean	*attr_az_abs_posOffset_read;
	Tango::DevBoolean	*attr_az_abs_active_read;
	Tango::DevBoolean	*attr_az_abs_parkPos_read;
	Tango::DevBoolean	*attr_az_abs_pointCorr_read;
	Tango::DevBoolean	*attr_az_abs_praezOk_read;
	Tango::DevBoolean	*attr_az_abs_inactive_read;
	Tango::DevBoolean	*attr_az_abs_deactivate_read;
	Tango::DevBoolean	*attr_az_abs_activate_read;
	Tango::DevBoolean	*attr_az_abs_encReset_read;
	Tango::DevBoolean	*attr_az_abs_encResetDone_read;
	Tango::DevBoolean	*attr_az_abs_encOp_read;
	Tango::DevBoolean	*attr_az_abs_confOk_read;
	Tango::DevBoolean	*attr_az_abs_sector_B_read;
	Tango::DevBoolean	*attr_az_abs_sector_A_read;
	Tango::DevBoolean	*attr_az_stow_posOk_read;
	Tango::DevBoolean	*attr_az_stow_preUp_read;
	Tango::DevBoolean	*attr_az_stow_preDn_read;
	Tango::DevBoolean	*attr_az_stow_dirDn_read;
	Tango::DevBoolean	*attr_az_stow_pin1_Extr_read;
	Tango::DevBoolean	*attr_az_stow_pin1_Retr_read;
	Tango::DevBoolean	*attr_az_stow_pin1_err_read;
	Tango::DevBoolean	*attr_az_stow_pin1_on_read;
	Tango::DevBoolean	*attr_az_stow_pin2_Extr_read;
	Tango::DevBoolean	*attr_az_stow_pin2_Retr_read;
	Tango::DevBoolean	*attr_az_stow_pin2_err_read;
	Tango::DevBoolean	*attr_az_stow_pin2_on_read;
	Tango::DevBoolean	*attr_az_stow_cmd1_Extr_read;
	Tango::DevBoolean	*attr_az_stow_cmd1_Retr_read;
	Tango::DevBoolean	*attr_az_stow_cmd2_Extr_read;
	Tango::DevBoolean	*attr_az_stow_cmd2_Retr_read;
	Tango::DevBoolean	*attr_az_err_Error_Active_read;
	Tango::DevBoolean	*attr_az_err_Rate_Loop_read;
	Tango::DevBoolean	*attr_az_err_Group_read;
	Tango::DevBoolean	*attr_az_err_Override_read;
	Tango::DevBoolean	*attr_az_err_Safety_Dev_read;
	Tango::DevBoolean	*attr_az_err_Extern_read;
	Tango::DevBoolean	*attr_az_err_Power_read;
	Tango::DevBoolean	*attr_az_err_Brake_read;
	Tango::DevBoolean	*attr_az_err_Mot_ready_read;
	Tango::DevBoolean	*attr_az_err_Motor_read;
	Tango::DevBoolean	*attr_az_err_Mot_Tacho_read;
	Tango::DevBoolean	*attr_az_err_Mot_Comm_read;
	Tango::DevBoolean	*attr_az_err_Mot_Timeout_read;
	Tango::DevBoolean	*attr_az_err_v_Mot_Exceed_read;
	Tango::DevBoolean	*attr_az_err_v_Dev_Exceed_read;
	Tango::DevBoolean	*attr_az_err_Mot_Overload_read;
	Tango::DevBoolean	*attr_az_err_Em_Limit_Dn_read;
	Tango::DevBoolean	*attr_az_err_Em_Limit_Up_read;
	Tango::DevBoolean	*attr_az_err_Em_Stop_read;
	Tango::DevBoolean	*attr_az_err_SW_InterLock_read;
	Tango::DevBoolean	*attr_az_err_p_Range_Exceed_read;
	Tango::DevBoolean	*attr_az_err_p_Dev_Exceed_read;
	Tango::DevBoolean	*attr_az_err_No_Pos_Enc_Sync_read;
	Tango::DevBoolean	*attr_az_err_Pos_Enc_Sync_read;
	Tango::DevBoolean	*attr_az_err_Pos_Enc_read;
	Tango::DevBoolean	*attr_az_err_Pos_Enc_Step_read;
	Tango::DevBoolean	*attr_az_err_Stow_read;
	Tango::DevBoolean	*attr_az_err_Stow_Timeout_read;
	Tango::DevBoolean	*attr_az_err_Handcrank_read;
	Tango::DevBoolean	*attr_az_err_Cmd_Timeout_read;
	Tango::DevBoolean	*attr_az_err_Field_Bus_read;
	Tango::DevBoolean	*attr_az_err_Lim_Err_read;
	Tango::DevBoolean	*attr_az_wa_Param_Fault_read;
	Tango::DevBoolean	*attr_az_wa_Rate_Mode_read;
	Tango::DevBoolean	*attr_az_wa_Degraded_Mode_read;
	Tango::DevBoolean	*attr_az_wa_Override_read;
	Tango::DevBoolean	*attr_az_wa_Heat_Up_Motors_read;
	Tango::DevBoolean	*attr_az_wa_extern_Stop_read;
	Tango::DevBoolean	*attr_az_wa_LubricationFault_read;
	Tango::DevBoolean	*attr_az_wa_Brake_openInaktiv_read;
	Tango::DevBoolean	*attr_az_wa_Mot_ready_read;
	Tango::DevBoolean	*attr_az_wa_MotFanFault_read;
	Tango::DevBoolean	*attr_az_wa_MotWarn_read;
	Tango::DevBoolean	*attr_az_wa_Mmax_reached_read;
	Tango::DevBoolean	*attr_az_wa_PreLimDn_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_PreLimUp_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_FinLimDn_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_FinLimUp_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_Pre_Limit_Up_read;
	Tango::DevBoolean	*attr_az_wa_Pre_Limit_Dn_read;
	Tango::DevBoolean	*attr_az_wa_Fin_Limit_Up_read;
	Tango::DevBoolean	*attr_az_wa_Fin_Limit_Dn_read;
	Tango::DevBoolean	*attr_az_wa_Pre_Pre_Limit_Up_read;
	Tango::DevBoolean	*attr_az_wa_Pre_Pre_Limit_Dn_read;
	Tango::DevBoolean	*attr_az_wa_EmLimitDn_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_EmLimitUP_inconsist_read;
	Tango::DevBoolean	*attr_az_wa_Pos_Safe_Enc_Warn_read;
	Tango::DevBoolean	*attr_az_wa_Pos_Enc_Warn_read;
	Tango::DevBoolean	*attr_az_wa_Stow_Pin_Fault_read;
	Tango::DevBoolean	*attr_az_wa_Stowpins_Extr_read;
	Tango::DevBoolean	*attr_az_wa_lowPowerMode_read;
	Tango::DevBoolean	*attr_az_wa_Motor_Overload_read;
	Tango::DevBoolean	*attr_az_wa_Motor_Temp_read;
	Tango::DevBoolean	*attr_az_wa_Vel_Limit_read;
	Tango::DevBoolean	*attr_az_disc_initok_read;
	Tango::DevBoolean	*attr_az_disc_Ok_read;
	Tango::DevBoolean	*attr_az_disc_commErr_read;
	Tango::DevBoolean	*attr_az_disc_overflow_read;
	Tango::DevBoolean	*attr_az_disc_warning_read;
	Tango::DevBoolean	*attr_az_disc_operational_read;
	Tango::DevBoolean	*attr_az_disc_error_read;
	Tango::DevUShort	*attr_az_axis_state_read;
	Tango::DevUShort	*attr_az_axis_actual_mode_read;
	Tango::DevUShort	*attr_az_axis_trajectory_state_read;
	Tango::DevDouble	*attr_az_p_Soll_read;
	Tango::DevDouble	*attr_az_p_Bahn_read;
	Tango::DevDouble	*attr_az_p_Ist_read;
	Tango::DevDouble	*attr_az_p_Offs_read;
	Tango::DevDouble	*attr_az_p_Abw_read;
	Tango::DevDouble	*attr_az_p_AbwFil_read;
	Tango::DevDouble	*attr_az_p_pointCorr_read;
	Tango::DevDouble	*attr_az_v_Bahn_read;
	Tango::DevDouble	*attr_az_v_Soll_read;
	Tango::DevDouble	*attr_az_v_Ist_read;
	Tango::DevDouble	*attr_az_a_Bahn_read;
	Tango::DevBoolean	*attr_az_motor_selection_1_read;
	Tango::DevBoolean	*attr_az_motor_selection_2_read;
	Tango::DevBoolean	*attr_az_brakes_selection_1_read;
	Tango::DevBoolean	*attr_az_brakes_selection_2_read;
	Tango::DevBoolean	*attr_az_brakes_open_1_read;
	Tango::DevBoolean	*attr_az_brakes_open_2_read;
	Tango::DevBoolean	*attr_az_brakes_command_1_read;
	Tango::DevBoolean	*attr_az_brakes_command_2_read;
	Tango::DevBoolean	*attr_el_abs_initOk_read;
	Tango::DevBoolean	*attr_el_abs_sim_read;
	Tango::DevBoolean	*attr_el_abs_reset_read;
	Tango::DevBoolean	*attr_el_abs_notStop_read;
	Tango::DevBoolean	*attr_el_abs_bereit_read;
	Tango::DevBoolean	*attr_el_abs_motEin_read;
	Tango::DevBoolean	*attr_el_abs_praez_read;
	Tango::DevBoolean	*attr_el_abs_lockAT_read;
	Tango::DevBoolean	*attr_el_abs_override_read;
	Tango::DevBoolean	*attr_el_abs_posOffset_read;
	Tango::DevBoolean	*attr_el_abs_active_read;
	Tango::DevBoolean	*attr_el_abs_parkPos_read;
	Tango::DevBoolean	*attr_el_abs_pointCorr_read;
	Tango::DevBoolean	*attr_el_abs_praezOk_read;
	Tango::DevBoolean	*attr_el_abs_inactive_read;
	Tango::DevBoolean	*attr_el_abs_deactivate_read;
	Tango::DevBoolean	*attr_el_abs_activate_read;
	Tango::DevBoolean	*attr_el_abs_encReset_read;
	Tango::DevBoolean	*attr_el_abs_encResetDone_read;
	Tango::DevBoolean	*attr_el_abs_encOp_read;
	Tango::DevBoolean	*attr_el_abs_confOk_read;
	Tango::DevBoolean	*attr_el_abs_sector_B_read;
	Tango::DevBoolean	*attr_el_abs_sector_A_read;
	Tango::DevBoolean	*attr_el_stow_posOk_read;
	Tango::DevBoolean	*attr_el_stow_preUp_read;
	Tango::DevBoolean	*attr_el_stow_preDn_read;
	Tango::DevBoolean	*attr_el_stow_dirDn_read;
	Tango::DevBoolean	*attr_el_stow_pin1_Extr_read;
	Tango::DevBoolean	*attr_el_stow_pin1_Retr_read;
	Tango::DevBoolean	*attr_el_stow_pin1_err_read;
	Tango::DevBoolean	*attr_el_stow_pin1_on_read;
	Tango::DevBoolean	*attr_el_stow_pin2_Extr_read;
	Tango::DevBoolean	*attr_el_stow_pin2_Retr_read;
	Tango::DevBoolean	*attr_el_stow_pin2_err_read;
	Tango::DevBoolean	*attr_el_stow_pin2_on_read;
	Tango::DevBoolean	*attr_el_stow_cmd1_Extr_read;
	Tango::DevBoolean	*attr_el_stow_cmd1_Retr_read;
	Tango::DevBoolean	*attr_el_stow_cmd2_Extr_read;
	Tango::DevBoolean	*attr_el_stow_cmd2_Retr_read;
	Tango::DevBoolean	*attr_el_err_Error_Active_read;
	Tango::DevBoolean	*attr_el_err_Rate_Loop_read;
	Tango::DevBoolean	*attr_el_err_Group_read;
	Tango::DevBoolean	*attr_el_err_Override_read;
	Tango::DevBoolean	*attr_el_err_Safety_Dev_read;
	Tango::DevBoolean	*attr_el_err_Extern_read;
	Tango::DevBoolean	*attr_el_err_Power_read;
	Tango::DevBoolean	*attr_el_err_Brake_read;
	Tango::DevBoolean	*attr_el_err_Mot_ready_read;
	Tango::DevBoolean	*attr_el_err_Motor_read;
	Tango::DevBoolean	*attr_el_err_Mot_Tacho_read;
	Tango::DevBoolean	*attr_el_err_Mot_Comm_read;
	Tango::DevBoolean	*attr_el_err_Mot_Timeout_read;
	Tango::DevBoolean	*attr_el_err_v_Mot_Exceed_read;
	Tango::DevBoolean	*attr_el_err_v_Dev_Exceed_read;
	Tango::DevBoolean	*attr_el_err_Mot_Overload_read;
	Tango::DevBoolean	*attr_el_err_Em_Limit_Dn_read;
	Tango::DevBoolean	*attr_el_err_Em_Limit_Up_read;
	Tango::DevBoolean	*attr_el_err_Em_Stop_read;
	Tango::DevBoolean	*attr_el_err_SW_InterLock_read;
	Tango::DevBoolean	*attr_el_err_p_Range_Exceed_read;
	Tango::DevBoolean	*attr_el_err_p_Dev_Exceed_read;
	Tango::DevBoolean	*attr_el_err_No_Pos_Enc_Sync_read;
	Tango::DevBoolean	*attr_el_err_Pos_Enc_Sync_read;
	Tango::DevBoolean	*attr_el_err_Pos_Enc_read;
	Tango::DevBoolean	*attr_el_err_Pos_Enc_Step_read;
	Tango::DevBoolean	*attr_el_err_Stow_read;
	Tango::DevBoolean	*attr_el_err_Stow_Timeout_read;
	Tango::DevBoolean	*attr_el_err_Handcrank_read;
	Tango::DevBoolean	*attr_el_err_Cmd_Timeout_read;
	Tango::DevBoolean	*attr_el_err_Field_Bus_read;
	Tango::DevBoolean	*attr_el_err_Lim_Err_read;
	Tango::DevBoolean	*attr_el_wa_Param_Fault_read;
	Tango::DevBoolean	*attr_el_wa_Rate_Mode_read;
	Tango::DevBoolean	*attr_el_wa_Degraded_Mode_read;
	Tango::DevBoolean	*attr_el_wa_Override_read;
	Tango::DevBoolean	*attr_el_wa_Heat_Up_Motors_read;
	Tango::DevBoolean	*attr_el_wa_extern_Stop_read;
	Tango::DevBoolean	*attr_el_wa_LubricationFault_read;
	Tango::DevBoolean	*attr_el_wa_Brake_openInaktiv_read;
	Tango::DevBoolean	*attr_el_wa_Mot_ready_read;
	Tango::DevBoolean	*attr_el_wa_MotFanFault_read;
	Tango::DevBoolean	*attr_el_wa_MotWarn_read;
	Tango::DevBoolean	*attr_el_wa_Mmax_reached_read;
	Tango::DevBoolean	*attr_el_wa_PreLimDn_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_PreLimUp_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_FinLimDn_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_FinLimUp_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_Pre_Limit_Up_read;
	Tango::DevBoolean	*attr_el_wa_Pre_Limit_Dn_read;
	Tango::DevBoolean	*attr_el_wa_Fin_Limit_Up_read;
	Tango::DevBoolean	*attr_el_wa_Fin_Limit_Dn_read;
	Tango::DevBoolean	*attr_el_wa_Pre_Pre_Limit_Up_read;
	Tango::DevBoolean	*attr_el_wa_Pre_Pre_Limit_Dn_read;
	Tango::DevBoolean	*attr_el_wa_EmLimitDn_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_EmLimitUP_inconsist_read;
	Tango::DevBoolean	*attr_el_wa_Pos_Safe_Enc_Warn_read;
	Tango::DevBoolean	*attr_el_wa_Pos_Enc_Warn_read;
	Tango::DevBoolean	*attr_el_wa_Stow_Pin_Fault_read;
	Tango::DevBoolean	*attr_el_wa_Stowpins_Extr_read;
	Tango::DevBoolean	*attr_el_wa_lowPowerMode_read;
	Tango::DevBoolean	*attr_el_wa_Motor_Overload_read;
	Tango::DevBoolean	*attr_el_wa_Motor_Temp_read;
	Tango::DevBoolean	*attr_el_wa_Vel_Limit_read;
	Tango::DevBoolean	*attr_el_disc_initok_read;
	Tango::DevBoolean	*attr_el_disc_Ok_read;
	Tango::DevBoolean	*attr_el_disc_commErr_read;
	Tango::DevBoolean	*attr_el_disc_overflow_read;
	Tango::DevBoolean	*attr_el_disc_warning_read;
	Tango::DevBoolean	*attr_el_disc_operational_read;
	Tango::DevBoolean	*attr_el_disc_error_read;
	Tango::DevUShort	*attr_el_axis_state_read;
	Tango::DevUShort	*attr_el_axis_actual_mode_read;
	Tango::DevUShort	*attr_el_axis_trajectory_state_read;
	Tango::DevDouble	*attr_el_p_Soll_read;
	Tango::DevDouble	*attr_el_p_Bahn_read;
	Tango::DevDouble	*attr_el_p_Ist_read;
	Tango::DevDouble	*attr_el_p_Offs_read;
	Tango::DevDouble	*attr_el_p_Abw_read;
	Tango::DevDouble	*attr_el_p_AbwFil_read;
	Tango::DevDouble	*attr_el_p_pointCorr_read;
	Tango::DevDouble	*attr_el_v_Bahn_read;
	Tango::DevDouble	*attr_el_v_Soll_read;
	Tango::DevDouble	*attr_el_v_Ist_read;
	Tango::DevDouble	*attr_el_a_Bahn_read;
	Tango::DevBoolean	*attr_el_motor_selection_1_read;
	Tango::DevBoolean	*attr_el_motor_selection_2_read;
	Tango::DevBoolean	*attr_el_brakes_selection_1_read;
	Tango::DevBoolean	*attr_el_brakes_selection_2_read;
	Tango::DevBoolean	*attr_el_brakes_open_1_read;
	Tango::DevBoolean	*attr_el_brakes_open_2_read;
	Tango::DevBoolean	*attr_el_brakes_command_1_read;
	Tango::DevBoolean	*attr_el_brakes_command_2_read;
	Tango::DevBoolean	*attr_az1_mbs_initOk_read;
	Tango::DevBoolean	*attr_az1_mbs_bereit_read;
	Tango::DevBoolean	*attr_az1_mbs_aktiv_read;
	Tango::DevBoolean	*attr_az1_mbs_drzNull_read;
	Tango::DevBoolean	*attr_az1_mbs_drzOk_read;
	Tango::DevBoolean	*attr_az1_mbs_posOk_read;
	Tango::DevBoolean	*attr_az1_mbs_brOffen_read;
	Tango::DevBoolean	*attr_az1_mbs_errBus_read;
	Tango::DevBoolean	*attr_az1_mbs_errServo_read;
	Tango::DevBoolean	*attr_az1_mbs_errSensor_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_iQuad_t_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_Ampl_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_Mot_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_Uzk_read;
	Tango::DevBoolean	*attr_az1_mbs_v_exceed_read;
	Tango::DevBoolean	*attr_az1_mbs_M_exceed_read;
	Tango::DevBoolean	*attr_az1_mbs_aktiv_intern_read;
	Tango::DevBoolean	*attr_az1_mbs_err_sts_RF_read;
	Tango::DevBoolean	*attr_az1_mbs_err_sts_EF_read;
	Tango::DevBoolean	*attr_az1_mbs_err_sts_SBM_read;
	Tango::DevBoolean	*attr_az1_mbs_M_mode_read;
	Tango::DevBoolean	*attr_az1_mbs_wrongMode_read;
	Tango::DevBoolean	*attr_az1_mbs_Pow_exceeded_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_Cooling_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_Extern_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_PowerSupply_read;
	Tango::DevBoolean	*attr_az1_mbs_warn_T_ERModule_read;
	Tango::DevBoolean	*attr_az1_mbs_err_temp_read;
	Tango::DevBoolean	*attr_az1_mbs_err_iQuad_t_read;
	Tango::DevBoolean	*attr_az1_mbs_err_sts_M_read;
	Tango::DevBoolean	*attr_az1_mbs_V_Mode_read;
	Tango::DevDouble	*attr_az1_actual_position_read;
	Tango::DevDouble	*attr_az1_actual_velocity_read;
	Tango::DevDouble	*attr_az1_actual_torque_read;
	Tango::DevDouble	*attr_az1_rate_of_utilization_read;
	Tango::DevDouble	*attr_az1_Motor_temperature_read;
	Tango::DevDouble	*attr_az1_Motor_Overload_Inverter_read;
	Tango::DevDouble	*attr_az1_Motor_overload_read;
	Tango::DevUShort	*attr_az1_motErrorCode_read;
	Tango::DevUShort	*attr_az1_EmLimDn_read;
	Tango::DevUShort	*attr_az1_EmLimUp_read;
	provaENUMEnum	*attr_provaENUM_read;
	Tango::DevString	*attr_azAxisStatus_read;
	Tango::DevString	*attr_azAxisTrajectoryStatus_read;
	Tango::DevString	*attr_azAxisActualModeString_read;
	Tango::DevString	*attr_elAxisStatus_read;
	Tango::DevString	*attr_elAxisTrajectoryStatus_read;
	Tango::DevString	*attr_elAxisActualModeString_read;
	Tango::DevShort	*attr_az_actual_mode_read;
	Tango::DevUShort	*attr_el_actual_mode_read;
	Tango::DevShort	*attr_fi_actual_mode_read;
	Tango::DevDouble	*attr_poly_az_coeff_read;
	Tango::DevDouble	*attr_poly_el_coeff_read;

//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	DSManager(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	DSManager(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	DSManager(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */
	~DSManager() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();

	/*
	 *	Check if mandatory property has been set
	 */
	 void check_mandatory_property(Tango::DbDatum &class_prop, Tango::DbDatum &dev_prop);

//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : DSManager::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);
	//--------------------------------------------------------
	/*
	 *	Method      : DSManager::write_attr_hardware()
	 *	Description : Hardware writing for attributes.
	 */
	//--------------------------------------------------------
	virtual void write_attr_hardware(vector<long> &attr_list);

/**
 *	Attribute ds_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_ds_mode(Tango::Attribute &attr);
	virtual void write_ds_mode(Tango::WAttribute &attr);
	virtual bool is_ds_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute ds_pointState related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_ds_pointState(Tango::Attribute &attr);
	virtual void write_ds_pointState(Tango::WAttribute &attr);
	virtual bool is_ds_pointState_allowed(Tango::AttReqType type);
/**
 *	Attribute ds_powerState related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_ds_powerState(Tango::Attribute &attr);
	virtual void write_ds_powerState(Tango::WAttribute &attr);
	virtual bool is_ds_powerState_allowed(Tango::AttReqType type);
/**
 *	Attribute ds_controlState related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_ds_controlState(Tango::Attribute &attr);
	virtual void write_ds_controlState(Tango::WAttribute &attr);
	virtual bool is_ds_controlState_allowed(Tango::AttReqType type);
/**
 *	Attribute testMode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_testMode(Tango::Attribute &attr);
	virtual void write_testMode(Tango::WAttribute &attr);
	virtual bool is_testMode_allowed(Tango::AttReqType type);
/**
 *	Attribute powerCut related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_powerCut(Tango::Attribute &attr);
	virtual void write_powerCut(Tango::WAttribute &attr);
	virtual bool is_powerCut_allowed(Tango::AttReqType type);
/**
 *	Attribute powerRestored related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_powerRestored(Tango::Attribute &attr);
	virtual void write_powerRestored(Tango::WAttribute &attr);
	virtual bool is_powerRestored_allowed(Tango::AttReqType type);
/**
 *	Attribute message_length related methods
 *	Description: Number of bytes including start and end flag.
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_message_length(Tango::Attribute &attr);
	virtual void write_message_length(Tango::WAttribute &attr);
	virtual bool is_message_length_allowed(Tango::AttReqType type);
/**
 *	Attribute version related methods
 *	Description: ACU software version (10 -> Version 1.0).
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_version(Tango::Attribute &attr);
	virtual void write_version(Tango::WAttribute &attr);
	virtual bool is_version_allowed(Tango::AttReqType type);
/**
 *	Attribute diagnosis_signal related methods
 *	Description: Diagnosis signal (used for commissioning and tuning).
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_diagnosis_signal(Tango::Attribute &attr);
	virtual void write_diagnosis_signal(Tango::WAttribute &attr);
	virtual bool is_diagnosis_signal_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P0_MainSwitch_Off related methods
 *	Description: TMain power master switch +P0-QS1 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P0_MainSwitch_Off(Tango::Attribute &attr);
	virtual void write_ps_P0_MainSwitch_Off(Tango::WAttribute &attr);
	virtual bool is_ps_P0_MainSwitch_Off_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P0_UPS_MainSwitch_Off related methods
 *	Description: Main power master switch +P0-QS20 is switched off.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P0_UPS_MainSwitch_Off(Tango::Attribute &attr);
	virtual void write_ps_P0_UPS_MainSwitch_Off(Tango::WAttribute &attr);
	virtual bool is_ps_P0_UPS_MainSwitch_Off_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P0_OVP_fault related methods
 *	Description: At least one overvoltage protection (+P0-FO11 or +P0-FO20) is broken.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P0_OVP_fault(Tango::Attribute &attr);
	virtual void write_ps_P0_OVP_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P0_OVP_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_UPS_PhaseGuard_fault related methods
 *	Description: Power cabinet +P1 UPS power fault +BB10.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_UPS_PhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_UPS_PhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_UPS_PhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_MainSwitch_Off related methods
 *	Description: Main power master switch +P1-QS1 is switched off Phase guard module for infrastructure power detects power problems (+P1-BB10).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_MainSwitch_Off(Tango::Attribute &attr);
	virtual void write_ps_P1_MainSwitch_Off(Tango::WAttribute &attr);
	virtual bool is_ps_P1_MainSwitch_Off_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_InfraPhaseGuard_fault related methods
 *	Description: Phase guard module for infrastructure power detects power problems (+P1-BB10): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_InfraPhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_InfraPhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_InfraPhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_CntrlPowerA_fault related methods
 *	Description: 24VDC power supply module +P1-TB41 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_CntrlPowerA_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_CntrlPowerA_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_CntrlPowerA_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_CntrlPowerB_fault related methods
 *	Description: 24VDC power supply module +P1-TB42 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_CntrlPowerB_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_CntrlPowerB_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_CntrlPowerB_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_CntrlPowerC_fault related methods
 *	Description: 24VDC power supply module +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_CntrlPowerC_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_CntrlPowerC_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_CntrlPowerC_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_CntrlPowerD_fault related methods
 *	Description: 24VDC power supply module +P1-TB44 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_CntrlPowerD_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_CntrlPowerD_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_CntrlPowerD_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_PowMeasureTerminal_fault related methods
 *	Description: Power Measurement terminal KL3403 detects power failure: voltage above 253V; voltage below 207V.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_PowMeasureTerminal_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_PowMeasureTerminal_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_PowMeasureTerminal_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P1_OvervoltageProt_fault related methods
 *	Description: Phase guard module for main power detects power(UPS and NON UPS) problems (+P1-FO10 and FO 20): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P1_OvervoltageProt_fault(Tango::Attribute &attr);
	virtual void write_ps_P1_OvervoltageProt_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P1_OvervoltageProt_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_MainPow_I_PhaseGuard_fault related methods
 *	Description: Phase guard module for main power I detects power problems (+P2-BB112): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_MainPow_I_PhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_MainPow_I_PhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_MainPow_I_PhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_MainPow_II_PhaseGuard_fault related methods
 *	Description: Phase guard module for main power II detects power problems (+P2-BB113): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_MainPow_II_PhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_MainPow_II_PhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_MainPow_II_PhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_UPSPow_I_PhaseGuard_fault related methods
 *	Description: Phase guard module for UPS power I detects power problems (+P2-BB122): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_UPSPow_I_PhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_UPSPow_I_PhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_UPSPow_II_PhaseGuard_fault related methods
 *	Description: Phase guard module for UPS power II detects power problems (+P2-BB123): phase failure; phase sequence.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_UPSPow_II_PhaseGuard_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_UPSPow_II_PhaseGuard_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_CntrlPowerA_fault related methods
 *	Description: 24VDC power supply module +P2-TB31 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_CntrlPowerA_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_CntrlPowerA_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_CntrlPowerA_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_CntrlPowerB_fault related methods
 *	Description: 24VDC power supply module +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_CntrlPowerB_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_CntrlPowerB_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_CntrlPowerB_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_P2_OvervoltageProt_fault related methods
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_P2_OvervoltageProt_fault(Tango::Attribute &attr);
	virtual void write_ps_P2_OvervoltageProt_fault(Tango::WAttribute &attr);
	virtual bool is_ps_P2_OvervoltageProt_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_servoPowD1_fault related methods
 *	Description: Main power supply of D1 is faulty. - The phase guard device +D1???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D1-FT30 is disconnected. - At least one of the following fuses is triggered: +D1-FL1; +D1-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_servoPowD1_fault(Tango::Attribute &attr);
	virtual void write_ps_servoPowD1_fault(Tango::WAttribute &attr);
	virtual bool is_ps_servoPowD1_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_servoPowD2_fault related methods
 *	Description: Main power supply of D2 is faulty. - The phase guard device +D2???BB20 reports an error: phase failure; phase sequence. - The load-interrupter switch +D2-FT30 is disconnected. - At least one of the following fuses is triggered: +D2-FL1; +D2-FL30.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_servoPowD2_fault(Tango::Attribute &attr);
	virtual void write_ps_servoPowD2_fault(Tango::WAttribute &attr);
	virtual bool is_ps_servoPowD2_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_ACUPow_fault related methods
 *	Description: ACU power supply is faulty; the ACU is running with UPS Power and discharging the battery; ACU UPS battery pack is defect.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_ACUPow_fault(Tango::Attribute &attr);
	virtual void write_ps_ACUPow_fault(Tango::WAttribute &attr);
	virtual bool is_ps_ACUPow_fault_allowed(Tango::AttReqType type);
/**
 *	Attribute ps_error_active related methods
 *	Description: Any power error is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_ps_error_active(Tango::Attribute &attr);
	virtual void write_ps_error_active(Tango::WAttribute &attr);
	virtual bool is_ps_error_active_allowed(Tango::AttReqType type);
/**
 *	Attribute so_sysSim related methods
 *	Description: The ACU system is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_sysSim(Tango::Attribute &attr);
	virtual void write_so_sysSim(Tango::WAttribute &attr);
	virtual bool is_so_sysSim_allowed(Tango::AttReqType type);
/**
 *	Attribute so_eStop related methods
 *	Description: At least one emergency stop button is activated. The information about
 *               the active emergency buttons can be found in chapter 4.2.7 Bit mode
 *               coded emergency.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_eStop(Tango::Attribute &attr);
	virtual void write_so_eStop(Tango::WAttribute &attr);
	virtual bool is_so_eStop_allowed(Tango::AttReqType type);
/**
 *	Attribute so_swIntLock related methods
 *	Description: At least one interlock is activated. The information about the active
 *               interlocks can be found in chapter 4.2.6 Bit mode coded interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_swIntLock(Tango::Attribute &attr);
	virtual void write_so_swIntLock(Tango::WAttribute &attr);
	virtual bool is_so_swIntLock_allowed(Tango::AttReqType type);
/**
 *	Attribute so_Power_Up related methods
 *	Description: ACU drive system is powered up.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_Power_Up(Tango::Attribute &attr);
	virtual void write_so_Power_Up(Tango::WAttribute &attr);
	virtual bool is_so_Power_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute so_sysWarn related methods
 *	Description: At least one system warning is activated. The information about the active system warning can be found in chapter 4.2.5 Bit mode coded system faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_sysWarn(Tango::Attribute &attr);
	virtual void write_so_sysWarn(Tango::WAttribute &attr);
	virtual bool is_so_sysWarn_allowed(Tango::AttReqType type);
/**
 *	Attribute so_keyOverrideActive related methods
 *	Description: Reports the status of the override key switch.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_keyOverrideActive(Tango::Attribute &attr);
	virtual void write_so_keyOverrideActive(Tango::WAttribute &attr);
	virtual bool is_so_keyOverrideActive_allowed(Tango::AttReqType type);
/**
 *	Attribute so_intLockAckActive related methods
 *	Description: Interlock acknowledgement is active. Though also the hardware devices as well as the hexapod will be reset, an interlock acknowledge can last about 20 up to 30 seconds.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_intLockAckActive(Tango::Attribute &attr);
	virtual void write_so_intLockAckActive(Tango::WAttribute &attr);
	virtual bool is_so_intLockAckActive_allowed(Tango::AttReqType type);
/**
 *	Attribute so_esOverride related methods
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_esOverride(Tango::Attribute &attr);
	virtual void write_so_esOverride(Tango::WAttribute &attr);
	virtual bool is_so_esOverride_allowed(Tango::AttReqType type);
/**
 *	Attribute so_service related methods
 *	Description: The service mode is activated, additional functions are available, the hand held panel can be used in this mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_service(Tango::Attribute &attr);
	virtual void write_so_service(Tango::WAttribute &attr);
	virtual bool is_so_service_allowed(Tango::AttReqType type);
/**
 *	Attribute so_sysOn related methods
 *	Description: The ACU control system is switched on.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_sysOn(Tango::Attribute &attr);
	virtual void write_so_sysOn(Tango::WAttribute &attr);
	virtual bool is_so_sysOn_allowed(Tango::AttReqType type);
/**
 *	Attribute so_HHPon related methods
 *	Description: The antenna can be controlled exclusively from the hand held panel, if appicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_HHPon(Tango::Attribute &attr);
	virtual void write_so_HHPon(Tango::WAttribute &attr);
	virtual bool is_so_HHPon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_LCPon related methods
 *	Description: The antenna can be controlled exclusively from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_LCPon(Tango::Attribute &attr);
	virtual void write_so_LCPon(Tango::WAttribute &attr);
	virtual bool is_so_LCPon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_PCUon related methods
 *	Description: The antenna can be controlled exclusively from the portable control unit (Keba), if applicable.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_PCUon(Tango::Attribute &attr);
	virtual void write_so_PCUon(Tango::WAttribute &attr);
	virtual bool is_so_PCUon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_remote related methods
 *	Description: The antenna can be controlled exclusively from the remote control system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_remote(Tango::Attribute &attr);
	virtual void write_so_remote(Tango::WAttribute &attr);
	virtual bool is_so_remote_allowed(Tango::AttReqType type);
/**
 *	Attribute so_initOk related methods
 *	Description: The initialization of the facility control is done. If this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_initOk(Tango::Attribute &attr);
	virtual void write_so_initOk(Tango::WAttribute &attr);
	virtual bool is_so_initOk_allowed(Tango::AttReqType type);
/**
 *	Attribute so_confOk related methods
 *	Description: The configuration file W30_FacCtrlConfParam.bin could be read correctly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_confOk(Tango::Attribute &attr);
	virtual void write_so_confOk(Tango::WAttribute &attr);
	virtual bool is_so_confOk_allowed(Tango::AttReqType type);
/**
 *	Attribute so_driveActive related methods
 *	Description: At least one axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_driveActive(Tango::Attribute &attr);
	virtual void write_so_driveActive(Tango::WAttribute &attr);
	virtual bool is_so_driveActive_allowed(Tango::AttReqType type);
/**
 *	Attribute so_masterCntrl related methods
 *	Description: The master control is active - used only for maintenance.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_masterCntrl(Tango::Attribute &attr);
	virtual void write_so_masterCntrl(Tango::WAttribute &attr);
	virtual bool is_so_masterCntrl_allowed(Tango::AttReqType type);
/**
 *	Attribute so_ACUon related methods
 *	Description: The HCU can be controlled exclusively from the ACU (either local or remote).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_ACUon(Tango::Attribute &attr);
	virtual void write_so_ACUon(Tango::WAttribute &attr);
	virtual bool is_so_ACUon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_HCUon related methods
 *	Description: The HCU can be controlled exclusively from the HCU service panel (service functions can be used).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_HCUon(Tango::Attribute &attr);
	virtual void write_so_HCUon(Tango::WAttribute &attr);
	virtual bool is_so_HCUon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_SCPon related methods
 *	Description: The antenna can be controlled exclusively from the secondary controkl panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_SCPon(Tango::Attribute &attr);
	virtual void write_so_SCPon(Tango::WAttribute &attr);
	virtual bool is_so_SCPon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_PCPon related methods
 *	Description: The antenna can be controlled exclusively from the portable control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_PCPon(Tango::Attribute &attr);
	virtual void write_so_PCPon(Tango::WAttribute &attr);
	virtual bool is_so_PCPon_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD1_notSel related methods
 *	Description: The control cabinet D1 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD1_notSel(Tango::Attribute &attr);
	virtual void write_so_servoD1_notSel(Tango::WAttribute &attr);
	virtual bool is_so_servoD1_notSel_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD2_notSel related methods
 *	Description: The control cabinet D2 is deactivated via command. The antenna is in degraded mode. (if applicable)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD2_notSel(Tango::Attribute &attr);
	virtual void write_so_servoD2_notSel(Tango::WAttribute &attr);
	virtual bool is_so_servoD2_notSel_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD1_on related methods
 *	Description: The AMK KE module of the control cabinet D1 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD1_on(Tango::Attribute &attr);
	virtual void write_so_servoD1_on(Tango::WAttribute &attr);
	virtual bool is_so_servoD1_on_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD2_on related methods
 *	Description: The AMK KE module of the control cabinet D2 is enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD2_on(Tango::Attribute &attr);
	virtual void write_so_servoD2_on(Tango::WAttribute &attr);
	virtual bool is_so_servoD2_on_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD1_Ok related methods
 *	Description: The AMK KE module of the control cabinet D1 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD1_Ok(Tango::Attribute &attr);
	virtual void write_so_servoD1_Ok(Tango::WAttribute &attr);
	virtual bool is_so_servoD1_Ok_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD2_Ok related methods
 *	Description: The AMK KE module of the control cabinet D2 is ready for operation.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD2_Ok(Tango::Attribute &attr);
	virtual void write_so_servoD2_Ok(Tango::WAttribute &attr);
	virtual bool is_so_servoD2_Ok_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD1_Err related methods
 *	Description: The AMK KE module of the control cabinet D1 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD1_Err(Tango::Attribute &attr);
	virtual void write_so_servoD1_Err(Tango::WAttribute &attr);
	virtual bool is_so_servoD1_Err_allowed(Tango::AttReqType type);
/**
 *	Attribute so_servoD2_Err related methods
 *	Description: The AMK KE module of the control cabinet D2 could not be enabled.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_servoD2_Err(Tango::Attribute &attr);
	virtual void write_so_servoD2_Err(Tango::WAttribute &attr);
	virtual bool is_so_servoD2_Err_allowed(Tango::AttReqType type);
/**
 *	Attribute so_local related methods
 *	Description: The antenna can be controlled exclusively from any local control interface.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_so_local(Tango::Attribute &attr);
	virtual void write_so_local(Tango::WAttribute &attr);
	virtual bool is_so_local_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_E2_smokeDetection related methods
 *	Description: The smoke detection module located in the AEC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_E2_smokeDetection(Tango::Attribute &attr);
	virtual void write_sw_E2_smokeDetection(Tango::WAttribute &attr);
	virtual bool is_sw_E2_smokeDetection_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_E3_smokeDetection related methods
 *	Description: The smoke detection module located in the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_E3_smokeDetection(Tango::Attribute &attr);
	virtual void write_sw_E3_smokeDetection(Tango::WAttribute &attr);
	virtual bool is_sw_E3_smokeDetection_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_humidity_Base related methods
 *	Description: The humidity sensor -BH141 at AB is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_humidity_Base(Tango::Attribute &attr);
	virtual void write_sw_humidity_Base(Tango::WAttribute &attr);
	virtual bool is_sw_humidity_Base_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_humidity_AZC related methods
 *	Description: The humidity sensor inside the AZC is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_humidity_AZC(Tango::Attribute &attr);
	virtual void write_sw_humidity_AZC(Tango::WAttribute &attr);
	virtual bool is_sw_humidity_AZC_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_humidity_P2 related methods
 *	Description: The humidity sensor inside the P2 is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_humidity_P2(Tango::Attribute &attr);
	virtual void write_sw_humidity_P2(Tango::WAttribute &attr);
	virtual bool is_sw_humidity_P2_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_AZC related methods
 *	Description: The temperature of the AZC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_AZC(Tango::Attribute &attr);
	virtual void write_sw_Temp_AZC(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_AZC_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_AEC related methods
 *	Description: The temperature of the AEC is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_AEC(Tango::Attribute &attr);
	virtual void write_sw_Temp_AEC(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_AEC_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_D1 related methods
 *	Description: The temperature inside the cabinets located in the AEC (P1, D1 and D2) is outside the specified temperature (Facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_D1(Tango::Attribute &attr);
	virtual void write_sw_Temp_D1(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_D1_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_AB_ground related methods
 *	Description: The temperature of the antenna basement ground floor is outside the specified temperature (facility control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_AB_ground(Tango::Attribute &attr);
	virtual void write_sw_Temp_AB_ground(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_AB_ground_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_M1 related methods
 *	Description: Temperature of at least one M1 sensor is out of range [P082_tempMinM1 ... P083_tempMaxM1].
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_M1(Tango::Attribute &attr);
	virtual void write_sw_Temp_M1(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_M1_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_AB_first related methods
 *	Description: The temperature of the antenna basement first floor is outside the specified temperature (facillity control configuration parameter P080_tempMinSensor and P081_tempMaxSensor).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_AB_first(Tango::Attribute &attr);
	virtual void write_sw_Temp_AB_first(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_AB_first_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_outside related methods
 *	Description: The temperature outside of the antenna is out of the specified temperature (facillity control configuration parameter P082_tempMinM1 and P083_tempMaxM1).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_outside(Tango::Attribute &attr);
	virtual void write_sw_Temp_outside(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_outside_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_P1_cntrlPower related methods
 *	Description: 24VDC power supply module +P1-TB41 or +P1-TB43 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_P1_cntrlPower(Tango::Attribute &attr);
	virtual void write_sw_P1_cntrlPower(Tango::WAttribute &attr);
	virtual bool is_sw_P1_cntrlPower_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_P2_cntrlPower related methods
 *	Description: 24VDC power supply module +P2-TB31 or +P2-TB32 detects power failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_P2_cntrlPower(Tango::Attribute &attr);
	virtual void write_sw_P2_cntrlPower(Tango::WAttribute &attr);
	virtual bool is_sw_P2_cntrlPower_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_fieldBusErr_HCU related methods
 *	Description: No data exchange between ACU and HCU, control and monitoring of the hexapod system is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_fieldBusErr_HCU(Tango::Attribute &attr);
	virtual void write_sw_fieldBusErr_HCU(Tango::WAttribute &attr);
	virtual bool is_sw_fieldBusErr_HCU_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_P2_OverVolFault related methods
 *	Description: At least one overvoltage protection is broken: +P2-FO770; +P2-FO380; +P2-FO70.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_P2_OverVolFault(Tango::Attribute &attr);
	virtual void write_sw_P2_OverVolFault(Tango::WAttribute &attr);
	virtual bool is_sw_P2_OverVolFault_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_P1_OverVolFault related methods
 *	Description: At least one overvoltage protection is broken: +P1-FO10; +P1-FO20.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_P1_OverVolFault(Tango::Attribute &attr);
	virtual void write_sw_P1_OverVolFault(Tango::WAttribute &attr);
	virtual bool is_sw_P1_OverVolFault_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Invar_Fault related methods
 *	Description: The invariance measurement system fault.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Invar_Fault(Tango::Attribute &attr);
	virtual void write_sw_Invar_Fault(Tango::WAttribute &attr);
	virtual bool is_sw_Invar_Fault_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_ELC related methods
 *	Description: Temperature measurement fault of the ELC (facility control configuration parameter P090_tempMinELC and P091_tempMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_ELC(Tango::Attribute &attr);
	virtual void write_sw_Temp_ELC(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_ELC_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_HXP related methods
 *	Description: Temperature measurement fault of the HXP (facility control configuration parameter P086_tempMinHXP and P087_tempMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_HXP(Tango::Attribute &attr);
	virtual void write_sw_Temp_HXP(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_HXP_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Hum_ELC related methods
 *	Description: Humidity measurement fault of the ELC (facility control configuration parameter P088_humMinELC and P089_humMaxELC).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Hum_ELC(Tango::Attribute &attr);
	virtual void write_sw_Hum_ELC(Tango::WAttribute &attr);
	virtual bool is_sw_Hum_ELC_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Hum_HXP related methods
 *	Description: Humidity measurement fault of the HXP (facility control configuration parameter P084_humMinHXP and P085_humMaxHXP).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Hum_HXP(Tango::Attribute &attr);
	virtual void write_sw_Hum_HXP(Tango::WAttribute &attr);
	virtual bool is_sw_Hum_HXP_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Temp_AZ_Bearing related methods
 *	Description: Temperature measurement fault of the AZ bearing (facility control configuration parameter P092_tempMinAZBaring and P093_tempMaxAZBearing).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Temp_AZ_Bearing(Tango::Attribute &attr);
	virtual void write_sw_Temp_AZ_Bearing(Tango::WAttribute &attr);
	virtual bool is_sw_Temp_AZ_Bearing_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_commErrOvRide related methods
 *	Description: Override field bus communication errors.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_commErrOvRide(Tango::Attribute &attr);
	virtual void write_sw_commErrOvRide(Tango::WAttribute &attr);
	virtual bool is_sw_commErrOvRide_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_File_Logging related methods
 *	Description: Warning file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_File_Logging(Tango::Attribute &attr);
	virtual void write_sw_File_Logging(Tango::WAttribute &attr);
	virtual bool is_sw_File_Logging_allowed(Tango::AttReqType type);
/**
 *	Attribute sw_Ring_Logging related methods
 *	Description: Warning ring buffer file logging.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_sw_Ring_Logging(Tango::Attribute &attr);
	virtual void write_sw_Ring_Logging(Tango::WAttribute &attr);
	virtual bool is_sw_Ring_Logging_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_overrideES related methods
 *	Description: The override functionality for the emergency stop buttons is activated. To use the override functionality the antenna has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_overrideES(Tango::Attribute &attr);
	virtual void write_swi_overrideES(Tango::WAttribute &attr);
	virtual bool is_swi_overrideES_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_swIntLockCmd related methods
 *	Description: An interlock command is sent from the local control panel.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_swIntLockCmd(Tango::Attribute &attr);
	virtual void write_swi_swIntLockCmd(Tango::WAttribute &attr);
	virtual bool is_swi_swIntLockCmd_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_sysOff related methods
 *	Description: ACU control system is switched off. The software of the control system is running, but control of the telescope is not possible.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_sysOff(Tango::Attribute &attr);
	virtual void write_swi_sysOff(Tango::WAttribute &attr);
	virtual bool is_swi_sysOff_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_shutdown related methods
 *	Description: A shutdown of the control computer will be executed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_shutdown(Tango::Attribute &attr);
	virtual void write_swi_shutdown(Tango::WAttribute &attr);
	virtual bool is_swi_shutdown_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_mainPow related methods
 *	Description: At least one of the following signals is triggered. - Power master switch is switched off: +P0-QS1; +P0-QS20; +P1-QS1. - Phase guard modules detects power problems: +P1-BB10; +P2-BB112; +P2-BB122. - Overvoltage modules is broken: +P0-FO11; +P0-FO20; +P2-FO770; +P2-FO380; +P2-FO26; +P2-FO716.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_mainPow(Tango::Attribute &attr);
	virtual void write_swi_mainPow(Tango::WAttribute &attr);
	virtual bool is_swi_mainPow_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_cntrlPow related methods
 *	Description: 24V DC power supply +P1-TB41 and +P1-TB43 failed or/and 24V DC power supply +P2-TB31 and +P2-TB32 failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_cntrlPow(Tango::Attribute &attr);
	virtual void write_swi_cntrlPow(Tango::WAttribute &attr);
	virtual bool is_swi_cntrlPow_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_safDevES related methods
 *	Description: Safety project error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_safDevES(Tango::Attribute &attr);
	virtual void write_swi_safDevES(Tango::WAttribute &attr);
	virtual bool is_swi_safDevES_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_fieldbus related methods
 *	Description: Fieldbus communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_fieldbus(Tango::Attribute &attr);
	virtual void write_swi_fieldbus(Tango::WAttribute &attr);
	virtual bool is_swi_fieldbus_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_taskComm related methods
 *	Description: Internal task communication problems.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_taskComm(Tango::Attribute &attr);
	virtual void write_swi_taskComm(Tango::WAttribute &attr);
	virtual bool is_swi_taskComm_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_startupFailed related methods
 *	Description: Startup routine failed, ACU must be switched off and on again.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_startupFailed(Tango::Attribute &attr);
	virtual void write_swi_startupFailed(Tango::WAttribute &attr);
	virtual bool is_swi_startupFailed_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_init_az related methods
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_init_az(Tango::Attribute &attr);
	virtual void write_swi_init_az(Tango::WAttribute &attr);
	virtual bool is_swi_init_az_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_init_el related methods
 *	Description: Initialisation of the axis failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_init_el(Tango::Attribute &attr);
	virtual void write_swi_init_el(Tango::WAttribute &attr);
	virtual bool is_swi_init_el_allowed(Tango::AttReqType type);
/**
 *	Attribute swi_init_track related methods
 *	Description: Initialisation of the tracking program failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_swi_init_track(Tango::Attribute &attr);
	virtual void write_swi_init_track(Tango::WAttribute &attr);
	virtual bool is_swi_init_track_allowed(Tango::AttReqType type);
/**
 *	Attribute es_safDev_safe related methods
 *	Description: Project deactivated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_safDev_safe(Tango::Attribute &attr);
	virtual void write_es_safDev_safe(Tango::WAttribute &attr);
	virtual bool is_es_safDev_safe_allowed(Tango::AttReqType type);
/**
 *	Attribute es_safDev_err related methods
 *	Description: Safety Project Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_safDev_err(Tango::Attribute &attr);
	virtual void write_es_safDev_err(Tango::WAttribute &attr);
	virtual bool is_es_safDev_err_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_TowerMainDoor related methods
 *	Description: E-Stop located at the antenna tower door is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_TowerMainDoor(Tango::Attribute &attr);
	virtual void write_es_eStop_TowerMainDoor(Tango::WAttribute &attr);
	virtual bool is_es_eStop_TowerMainDoor_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_ControlCabinet related methods
 *	Description: E-Stop located at the control cabinet is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_ControlCabinet(Tango::Attribute &attr);
	virtual void write_es_eStop_ControlCabinet(Tango::WAttribute &attr);
	virtual bool is_es_eStop_ControlCabinet_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_PCU_AZC related methods
 *	Description: E-Stop located at the Handheldpanel, connected to the control cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_PCU_AZC(Tango::Attribute &attr);
	virtual void write_es_eStop_PCU_AZC(Tango::WAttribute &attr);
	virtual bool is_es_eStop_PCU_AZC_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_HatchToRoof related methods
 *	Description: The hatch to roof is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_HatchToRoof(Tango::Attribute &attr);
	virtual void write_es_door_HatchToRoof(Tango::WAttribute &attr);
	virtual bool is_es_door_HatchToRoof_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_AZC related methods
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_AZC(Tango::Attribute &attr);
	virtual void write_es_eStop_AZC(Tango::WAttribute &attr);
	virtual bool is_es_eStop_AZC_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_Access_AZC_balcony_open related methods
 *	Description: The access door to the azimuth balcony is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_Access_AZC_balcony_open(Tango::Attribute &attr);
	virtual void write_es_door_Access_AZC_balcony_open(Tango::WAttribute &attr);
	virtual bool is_es_door_Access_AZC_balcony_open_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_Access_AZC_balcony_unlocked related methods
 *	Description: The access door to the azimuth balcony is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_Access_AZC_balcony_unlocked(Tango::Attribute &attr);
	virtual void write_es_door_Access_AZC_balcony_unlocked(Tango::WAttribute &attr);
	virtual bool is_es_door_Access_AZC_balcony_unlocked_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_AZC_Access_ELC_open related methods
 *	Description: The azimuth cabin door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_AZC_Access_ELC_open(Tango::Attribute &attr);
	virtual void write_es_door_AZC_Access_ELC_open(Tango::WAttribute &attr);
	virtual bool is_es_door_AZC_Access_ELC_open_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_AZC_Access_ELC_unlocked related methods
 *	Description: The azimuth cabin door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_AZC_Access_ELC_unlocked(Tango::Attribute &attr);
	virtual void write_es_door_AZC_Access_ELC_unlocked(Tango::WAttribute &attr);
	virtual bool is_es_door_AZC_Access_ELC_unlocked_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_Access_ELC_open related methods
 *	Description: The access door to the elevation cabin is not closed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_Access_ELC_open(Tango::Attribute &attr);
	virtual void write_es_door_Access_ELC_open(Tango::WAttribute &attr);
	virtual bool is_es_door_Access_ELC_open_allowed(Tango::AttReqType type);
/**
 *	Attribute es_door_Access_ELC_unlocked related methods
 *	Description: The access door to the elevation cabin is not locked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_door_Access_ELC_unlocked(Tango::Attribute &attr);
	virtual void write_es_door_Access_ELC_unlocked(Tango::WAttribute &attr);
	virtual bool is_es_door_Access_ELC_unlocked_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_AEC related methods
 *	Description: E-Stop located in the azimuth cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_AEC(Tango::Attribute &attr);
	virtual void write_es_eStop_AEC(Tango::WAttribute &attr);
	virtual bool is_es_eStop_AEC_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_PCU_AEC related methods
 *	Description: E-Stop located at the Handheldpanel, connected in the azimuth cabin.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_PCU_AEC(Tango::Attribute &attr);
	virtual void write_es_eStop_PCU_AEC(Tango::WAttribute &attr);
	virtual bool is_es_eStop_PCU_AEC_allowed(Tango::AttReqType type);
/**
 *	Attribute es_eStop_ELC related methods
 *	Description: E-Stop located in the elevation cabin is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_eStop_ELC(Tango::Attribute &attr);
	virtual void write_es_eStop_ELC(Tango::WAttribute &attr);
	virtual bool is_es_eStop_ELC_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz_FbErr related methods
 *	Description: TwinSAFE safety system group azimuth. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz_comErr related methods
 *	Description: TwinSAFE safety system group azimuth. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz_OutErr related methods
 *	Description: TwinSAFE safety system group azimuth. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz2_FbErr related methods
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz2_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz2_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz2_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz2_comErr related methods
 *	Description: TwinSAFE safety system group azimuth 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz2_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz2_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz2_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpAz2_OutErr related methods
 *	Description: TwinSAFE safety system group azimuth 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpAz2_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpAz2_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpAz2_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl_FbErr related methods
 *	Description: TwinSAFE safety system group elevation. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl_comErr related methods
 *	Description: TwinSAFE safety system group elevation. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl_OutErr related methods
 *	Description: TwinSAFE safety system group elevation. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl2_FbErr related methods
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl2_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl2_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl2_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl2_comErr related methods
 *	Description: TwinSAFE safety system group elevation 2. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl2_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl2_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl2_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEl2_OutErr related methods
 *	Description: TwinSAFE safety system group elevation 2. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEl2_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpEl2_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEl2_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEStop_FbErr related methods
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEStop_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpEStop_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEStop_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEStop_comErr related methods
 *	Description: TwinSAFE safety system group E-Stop. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEStop_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpEStop_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEStop_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpEStop_OutErr related methods
 *	Description: TwinSAFE safety system group E-Stop. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpEStop_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpEStop_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpEStop_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecInput_FbErr related methods
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecInput_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecInput_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecInput_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecInput_comErr related methods
 *	Description: TwinSAFE safety system group Decoupler Input. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecInput_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecInput_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecInput_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecInput_OutErr related methods
 *	Description: TwinSAFE safety system group Decoupler Input. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecInput_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecInput_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecInput_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecOutput_FbErr related methods
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned function block reports an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecOutput_FbErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecOutput_FbErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecOutput_FbErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecOutput_comErr related methods
 *	Description: TwinSAFE safety system group Decoupler Output. At least one connection of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecOutput_comErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecOutput_comErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecOutput_comErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_GrpDecOutput_OutErr related methods
 *	Description: TwinSAFE safety system group Decoupler Output. At least one assigned output of this TwinSAFE group has an error. (for detailed information see Beckhoff documentation EL6900)
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_GrpDecOutput_OutErr(Tango::Attribute &attr);
	virtual void write_es_GrpDecOutput_OutErr(Tango::WAttribute &attr);
	virtual bool is_es_GrpDecOutput_OutErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_EDM_Inkonsistent related methods
 *	Description: Coincidence check of signals of the safety controller failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_EDM_Inkonsistent(Tango::Attribute &attr);
	virtual void write_es_EDM_Inkonsistent(Tango::WAttribute &attr);
	virtual bool is_es_EDM_Inkonsistent_allowed(Tango::AttReqType type);
/**
 *	Attribute es_EStop_Inkonsistent related methods
 *	Description: Coincidence check of the E-Stop signals failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_EStop_Inkonsistent(Tango::Attribute &attr);
	virtual void write_es_EStop_Inkonsistent(Tango::WAttribute &attr);
	virtual bool is_es_EStop_Inkonsistent_allowed(Tango::AttReqType type);
/**
 *	Attribute es_OpEle_Inkonsistent related methods
 *	Description: Coincidence check of the operation elements service or override failed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_OpEle_Inkonsistent(Tango::Attribute &attr);
	virtual void write_es_OpEle_Inkonsistent(Tango::WAttribute &attr);
	virtual bool is_es_OpEle_Inkonsistent_allowed(Tango::AttReqType type);
/**
 *	Attribute es_EStop_MonErr related methods
 *	Description: Safety Project E-Stop Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_EStop_MonErr(Tango::Attribute &attr);
	virtual void write_es_EStop_MonErr(Tango::WAttribute &attr);
	virtual bool is_es_EStop_MonErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_Az_MonErr related methods
 *	Description: Safety Project Azimuth Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_Az_MonErr(Tango::Attribute &attr);
	virtual void write_es_Az_MonErr(Tango::WAttribute &attr);
	virtual bool is_es_Az_MonErr_allowed(Tango::AttReqType type);
/**
 *	Attribute es_El_MonErr related methods
 *	Description: Safety Project Elevation Group Error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_es_El_MonErr(Tango::Attribute &attr);
	virtual void write_es_El_MonErr(Tango::WAttribute &attr);
	virtual bool is_es_El_MonErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E2_KF200_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF200 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E2_KF200_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E2_KF200_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E2_KF200_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E2_KF250_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF250 (EK1100) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E2_KF250_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E2_KF250_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E2_KF250_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E2_KF223_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF223 (EK1521) inside the +E2 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E2_KF223_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E2_KF223_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E2_KF223_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E2_KF200_Terminal_wcStateErr related methods
 *	Description: At least one of the terminals connected to the KF200 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E2_KF200_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_E2_KF200_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E2_KF200_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E2_KF250_Terminal_wcStateErr related methods
 *	Description: At least one of the terminals connected to the KF250 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E2_KF250_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_E2_KF250_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E2_KF250_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E3_KF300_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF300 (EK1501) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E3_KF300_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E3_KF300_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E3_KF300_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E3_KF300_wcStateErr related methods
 *	Description: EtherCAT coupler KF300 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E3_KF300_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_E3_KF300_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E3_KF300_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E3_KF349_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF349 (EK1100) inside the +E3 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E3_KF349_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E3_KF349_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E3_KF349_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E3_KF_Terminal_wcStateErr related methods
 *	Description: At least one of the terminals connected to the KF300 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E3_KF_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_E3_KF_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E3_KF_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E4_KF400_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF400 (EK1100) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E4_KF400_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E4_KF400_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E4_KF400_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E4_KF455_stateErr related methods
 *	Description: EtherCAT state error of the Ethernet switch port terminal KF455 (EL6614) inside the +E4 slide.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E4_KF455_stateErr(Tango::Attribute &attr);
	virtual void write_comm_E4_KF455_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E4_KF455_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_E4_KF_Terminal_wcStateErr related methods
 *	Description: At least one of the terminals connected to the KF400 EtherCAT coupler receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_E4_KF_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_E4_KF_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_E4_KF_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_C2_KF_Terminal_wcStateErr related methods
 *	Description: Either terminal +C2-KF452 or +C2-KF453 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_C2_KF_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_C2_KF_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_C2_KF_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_P1_KF20_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF20 (BK1100) inside the +P1 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_P1_KF20_stateErr(Tango::Attribute &attr);
	virtual void write_comm_P1_KF20_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_P1_KF20_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_P1_KF20_wcStateErr related methods
 *	Description: Terminal KF20 receives no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_P1_KF20_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_P1_KF20_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_P1_KF20_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_P1_KF20_couplerStateErr related methods
 *	Description: K-Bus state error of the EtherCAT coupler KF20 (BK1100).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_P1_KF20_couplerStateErr(Tango::Attribute &attr);
	virtual void write_comm_P1_KF20_couplerStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_P1_KF20_couplerStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_C2_KF600_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF600 (EK1100) inside the +C2 cabinet.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_C2_KF600_stateErr(Tango::Attribute &attr);
	virtual void write_comm_C2_KF600_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_C2_KF600_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_JB_AZEC_KF500_stateErr related methods
 *	Description: EtherCAT state error of the EtherCAT coupler KF500 (EK1100) inside the encoder box located in the tower.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_JB_AZEC_KF500_stateErr(Tango::Attribute &attr);
	virtual void write_comm_JB_AZEC_KF500_stateErr(Tango::WAttribute &attr);
	virtual bool is_comm_JB_AZEC_KF500_stateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_JB_AZEC_Terminal_wcStateErr related methods
 *	Description: Encoder terminals receive no or invalid data.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_JB_AZEC_Terminal_wcStateErr(Tango::Attribute &attr);
	virtual void write_comm_JB_AZEC_Terminal_wcStateErr(Tango::WAttribute &attr);
	virtual bool is_comm_JB_AZEC_Terminal_wcStateErr_allowed(Tango::AttReqType type);
/**
 *	Attribute comm_HxpDevState related methods
 *	Description: ACU - HCU communication failure.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_comm_HxpDevState(Tango::Attribute &attr);
	virtual void write_comm_HxpDevState(Tango::WAttribute &attr);
	virtual bool is_comm_HxpDevState_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_LCP_Sts_connect related methods
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_LCP_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_LCP_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_LCP_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_LCP_Cmd_connect related methods
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_LCP_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_LCP_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_LCP_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_SCP_Sts_connect related methods
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_SCP_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_SCP_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_SCP_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_SCP_Cmd_connect related methods
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_SCP_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_SCP_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_SCP_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_PCP_Sts_connect related methods
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_PCP_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_PCP_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_PCP_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_PCP_Cmd_connect related methods
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_PCP_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_PCP_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_PCP_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_Remote_Sts_connect related methods
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_Remote_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_Remote_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_Remote_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_Remote_Cmd_connect related methods
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_Remote_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_Remote_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_Remote_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_HHP_Sts_connect related methods
 *	Description: Status connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_HHP_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_HHP_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_HHP_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_HHP_Cmd_connect related methods
 *	Description: Command connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_HHP_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_HHP_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_HHP_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_Pcu_Sts_connect related methods
 *	Description: Status TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_Pcu_Sts_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_Pcu_Sts_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_Pcu_Sts_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_Pcu_Cmd_connect related methods
 *	Description: Command TcpIp Port connected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_Pcu_Cmd_connect(Tango::Attribute &attr);
	virtual void write_controlModeSts_Pcu_Cmd_connect(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_Pcu_Cmd_connect_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_HHP_connect_C1 related methods
 *	Description: HHP connected at +C1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_HHP_connect_C1(Tango::Attribute &attr);
	virtual void write_controlModeSts_HHP_connect_C1(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_HHP_connect_C1_allowed(Tango::AttReqType type);
/**
 *	Attribute controlModeSts_HHP_connect_C2 related methods
 *	Description: HHP connected at +C2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_controlModeSts_HHP_connect_C2(Tango::Attribute &attr);
	virtual void write_controlModeSts_HHP_connect_C2(Tango::WAttribute &attr);
	virtual bool is_controlModeSts_HHP_connect_C2_allowed(Tango::AttReqType type);
/**
 *	Attribute actual_time related methods
 *	Description: Actual time in modified julian day format.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_actual_time(Tango::Attribute &attr);
	virtual void write_actual_time(Tango::WAttribute &attr);
	virtual bool is_actual_time_allowed(Tango::AttReqType type);
/**
 *	Attribute actual_time_offset related methods
 *	Description: Actual time offset.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_actual_time_offset(Tango::Attribute &attr);
	virtual void write_actual_time_offset(Tango::WAttribute &attr);
	virtual bool is_actual_time_offset_allowed(Tango::AttReqType type);
/**
 *	Attribute time_source related methods
 *	Description: 1 = internal time of the ACU computer is used
 *               2 = time received from GPS module is used
 *               3 = time is set external via LCP or host computer
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_time_source(Tango::Attribute &attr);
	virtual void write_time_source(Tango::WAttribute &attr);
	virtual bool is_time_source_allowed(Tango::AttReqType type);
/**
 *	Attribute no_PPS_signal related methods
 *	Description: 0 = PPS signal Ok
 *               1 = no PPS signal received
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
	virtual void read_no_PPS_signal(Tango::Attribute &attr);
	virtual void write_no_PPS_signal(Tango::WAttribute &attr);
	virtual bool is_no_PPS_signal_allowed(Tango::AttReqType type);
/**
 *	Attribute clock_online related methods
 *	Description: 0 = no IRIG-B signal is received
 *               1 = IRIG-B signal Ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
	virtual void read_clock_online(Tango::Attribute &attr);
	virtual void write_clock_online(Tango::WAttribute &attr);
	virtual bool is_clock_online_allowed(Tango::AttReqType type);
/**
 *	Attribute clock_Ok related methods
 *	Description: 0 = clock module sends error
 *               1 = clock module ok
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Scalar
 */
	virtual void read_clock_Ok(Tango::Attribute &attr);
	virtual void write_clock_Ok(Tango::WAttribute &attr);
	virtual bool is_clock_Ok_allowed(Tango::AttReqType type);
/**
 *	Attribute power_drive_cabinet_1 related methods
 *	Description: Actual power consumption drive cabinet 1.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_power_drive_cabinet_1(Tango::Attribute &attr);
	virtual void write_power_drive_cabinet_1(Tango::WAttribute &attr);
	virtual bool is_power_drive_cabinet_1_allowed(Tango::AttReqType type);
/**
 *	Attribute power_drive_cabinet_2 related methods
 *	Description: Actual power consumption drive cabinet 2.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_power_drive_cabinet_2(Tango::Attribute &attr);
	virtual void write_power_drive_cabinet_2(Tango::WAttribute &attr);
	virtual bool is_power_drive_cabinet_2_allowed(Tango::AttReqType type);
/**
 *	Attribute power_antenna related methods
 *	Description: Actual power consumption of antenna.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_power_antenna(Tango::Attribute &attr);
	virtual void write_power_antenna(Tango::WAttribute &attr);
	virtual bool is_power_antenna_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_AEC related methods
 *	Description: Not used spare.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_AEC(Tango::Attribute &attr);
	virtual void write_temperature_AEC(Tango::WAttribute &attr);
	virtual bool is_temperature_AEC_allowed(Tango::AttReqType type);
/**
 *	Attribute outdoor_temperature related methods
 *	Description: The absolute outdoor temperature.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_outdoor_temperature(Tango::Attribute &attr);
	virtual void write_outdoor_temperature(Tango::WAttribute &attr);
	virtual bool is_outdoor_temperature_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_D1 related methods
 *	Description: The absolute temperature inside of the P1, D1 and D2.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_D1(Tango::Attribute &attr);
	virtual void write_temperature_D1(Tango::WAttribute &attr);
	virtual bool is_temperature_D1_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_AB_ground_floor related methods
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_AB_ground_floor(Tango::Attribute &attr);
	virtual void write_temperature_AB_ground_floor(Tango::WAttribute &attr);
	virtual bool is_temperature_AB_ground_floor_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_AB_first_floor related methods
 *	Description: The absolute temperature inside of the antenna base.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_AB_first_floor(Tango::Attribute &attr);
	virtual void write_temperature_AB_first_floor(Tango::WAttribute &attr);
	virtual bool is_temperature_AB_first_floor_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_AZC related methods
 *	Description: The absolute temperature inside the azimuth cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_AZC(Tango::Attribute &attr);
	virtual void write_temperature_AZC(Tango::WAttribute &attr);
	virtual bool is_temperature_AZC_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_ELC related methods
 *	Description: The absolute temperature inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_ELC(Tango::Attribute &attr);
	virtual void write_temperature_ELC(Tango::WAttribute &attr);
	virtual bool is_temperature_ELC_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_hexapod related methods
 *	Description: The absolute temperature inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_hexapod(Tango::Attribute &attr);
	virtual void write_temperature_hexapod(Tango::WAttribute &attr);
	virtual bool is_temperature_hexapod_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_AZ_Bearing related methods
 *	Description: The absolute temperature inside the azimuth bearing.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_AZ_Bearing(Tango::Attribute &attr);
	virtual void write_temperature_AZ_Bearing(Tango::WAttribute &attr);
	virtual bool is_temperature_AZ_Bearing_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_M1_1 related methods
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_M1_1(Tango::Attribute &attr);
	virtual void write_temperature_M1_1(Tango::WAttribute &attr);
	virtual bool is_temperature_M1_1_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_M1_2 related methods
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_M1_2(Tango::Attribute &attr);
	virtual void write_temperature_M1_2(Tango::WAttribute &attr);
	virtual bool is_temperature_M1_2_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_M1_3 related methods
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_M1_3(Tango::Attribute &attr);
	virtual void write_temperature_M1_3(Tango::WAttribute &attr);
	virtual bool is_temperature_M1_3_allowed(Tango::AttReqType type);
/**
 *	Attribute temperature_M1_4 related methods
 *	Description: The absolute temperature of sensor located at M1.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_temperature_M1_4(Tango::Attribute &attr);
	virtual void write_temperature_M1_4(Tango::WAttribute &attr);
	virtual bool is_temperature_M1_4_allowed(Tango::AttReqType type);
/**
 *	Attribute humidity_Hexapod related methods
 *	Description: The humidity inside the hexapod.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_humidity_Hexapod(Tango::Attribute &attr);
	virtual void write_humidity_Hexapod(Tango::WAttribute &attr);
	virtual bool is_humidity_Hexapod_allowed(Tango::AttReqType type);
/**
 *	Attribute humidity_ELC related methods
 *	Description: The humidity inside the elevation cabin.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_humidity_ELC(Tango::Attribute &attr);
	virtual void write_humidity_ELC(Tango::WAttribute &attr);
	virtual bool is_humidity_ELC_allowed(Tango::AttReqType type);
/**
 *	Attribute humidity_Outside related methods
 *	Description: The humidity outside the antenna.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_humidity_Outside(Tango::Attribute &attr);
	virtual void write_humidity_Outside(Tango::WAttribute &attr);
	virtual bool is_humidity_Outside_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_initOk related methods
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_initOk(Tango::Attribute &attr);
	virtual void write_az_abs_initOk(Tango::WAttribute &attr);
	virtual bool is_az_abs_initOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_sim related methods
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_sim(Tango::Attribute &attr);
	virtual void write_az_abs_sim(Tango::WAttribute &attr);
	virtual bool is_az_abs_sim_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_reset related methods
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_reset(Tango::Attribute &attr);
	virtual void write_az_abs_reset(Tango::WAttribute &attr);
	virtual bool is_az_abs_reset_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_notStop related methods
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_notStop(Tango::Attribute &attr);
	virtual void write_az_abs_notStop(Tango::WAttribute &attr);
	virtual bool is_az_abs_notStop_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_bereit related methods
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_bereit(Tango::Attribute &attr);
	virtual void write_az_abs_bereit(Tango::WAttribute &attr);
	virtual bool is_az_abs_bereit_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_motEin related methods
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_motEin(Tango::Attribute &attr);
	virtual void write_az_abs_motEin(Tango::WAttribute &attr);
	virtual bool is_az_abs_motEin_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_praez related methods
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_praez(Tango::Attribute &attr);
	virtual void write_az_abs_praez(Tango::WAttribute &attr);
	virtual bool is_az_abs_praez_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_lockAT related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_lockAT(Tango::Attribute &attr);
	virtual void write_az_abs_lockAT(Tango::WAttribute &attr);
	virtual bool is_az_abs_lockAT_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_override related methods
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_override(Tango::Attribute &attr);
	virtual void write_az_abs_override(Tango::WAttribute &attr);
	virtual bool is_az_abs_override_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_posOffset related methods
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_posOffset(Tango::Attribute &attr);
	virtual void write_az_abs_posOffset(Tango::WAttribute &attr);
	virtual bool is_az_abs_posOffset_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_active related methods
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_active(Tango::Attribute &attr);
	virtual void write_az_abs_active(Tango::WAttribute &attr);
	virtual bool is_az_abs_active_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_parkPos related methods
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_parkPos(Tango::Attribute &attr);
	virtual void write_az_abs_parkPos(Tango::WAttribute &attr);
	virtual bool is_az_abs_parkPos_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_pointCorr related methods
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_pointCorr(Tango::Attribute &attr);
	virtual void write_az_abs_pointCorr(Tango::WAttribute &attr);
	virtual bool is_az_abs_pointCorr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_praezOk related methods
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_praezOk(Tango::Attribute &attr);
	virtual void write_az_abs_praezOk(Tango::WAttribute &attr);
	virtual bool is_az_abs_praezOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_inactive related methods
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_inactive(Tango::Attribute &attr);
	virtual void write_az_abs_inactive(Tango::WAttribute &attr);
	virtual bool is_az_abs_inactive_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_deactivate related methods
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_deactivate(Tango::Attribute &attr);
	virtual void write_az_abs_deactivate(Tango::WAttribute &attr);
	virtual bool is_az_abs_deactivate_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_activate related methods
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_activate(Tango::Attribute &attr);
	virtual void write_az_abs_activate(Tango::WAttribute &attr);
	virtual bool is_az_abs_activate_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_encReset related methods
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_encReset(Tango::Attribute &attr);
	virtual void write_az_abs_encReset(Tango::WAttribute &attr);
	virtual bool is_az_abs_encReset_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_encResetDone related methods
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_encResetDone(Tango::Attribute &attr);
	virtual void write_az_abs_encResetDone(Tango::WAttribute &attr);
	virtual bool is_az_abs_encResetDone_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_encOp related methods
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_encOp(Tango::Attribute &attr);
	virtual void write_az_abs_encOp(Tango::WAttribute &attr);
	virtual bool is_az_abs_encOp_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_confOk related methods
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_confOk(Tango::Attribute &attr);
	virtual void write_az_abs_confOk(Tango::WAttribute &attr);
	virtual bool is_az_abs_confOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_sector_B related methods
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_sector_B(Tango::Attribute &attr);
	virtual void write_az_abs_sector_B(Tango::WAttribute &attr);
	virtual bool is_az_abs_sector_B_allowed(Tango::AttReqType type);
/**
 *	Attribute az_abs_sector_A related methods
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_abs_sector_A(Tango::Attribute &attr);
	virtual void write_az_abs_sector_A(Tango::WAttribute &attr);
	virtual bool is_az_abs_sector_A_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_posOk related methods
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_posOk(Tango::Attribute &attr);
	virtual void write_az_stow_posOk(Tango::WAttribute &attr);
	virtual bool is_az_stow_posOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_preUp related methods
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_preUp(Tango::Attribute &attr);
	virtual void write_az_stow_preUp(Tango::WAttribute &attr);
	virtual bool is_az_stow_preUp_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_preDn related methods
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_preDn(Tango::Attribute &attr);
	virtual void write_az_stow_preDn(Tango::WAttribute &attr);
	virtual bool is_az_stow_preDn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_dirDn related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_dirDn(Tango::Attribute &attr);
	virtual void write_az_stow_dirDn(Tango::WAttribute &attr);
	virtual bool is_az_stow_dirDn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin1_Extr related methods
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin1_Extr(Tango::Attribute &attr);
	virtual void write_az_stow_pin1_Extr(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin1_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin1_Retr related methods
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin1_Retr(Tango::Attribute &attr);
	virtual void write_az_stow_pin1_Retr(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin1_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin1_err related methods
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin1_err(Tango::Attribute &attr);
	virtual void write_az_stow_pin1_err(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin1_err_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin1_on related methods
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin1_on(Tango::Attribute &attr);
	virtual void write_az_stow_pin1_on(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin1_on_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin2_Extr related methods
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin2_Extr(Tango::Attribute &attr);
	virtual void write_az_stow_pin2_Extr(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin2_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin2_Retr related methods
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin2_Retr(Tango::Attribute &attr);
	virtual void write_az_stow_pin2_Retr(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin2_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin2_err related methods
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin2_err(Tango::Attribute &attr);
	virtual void write_az_stow_pin2_err(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin2_err_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_pin2_on related methods
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_pin2_on(Tango::Attribute &attr);
	virtual void write_az_stow_pin2_on(Tango::WAttribute &attr);
	virtual bool is_az_stow_pin2_on_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_cmd1_Extr related methods
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_cmd1_Extr(Tango::Attribute &attr);
	virtual void write_az_stow_cmd1_Extr(Tango::WAttribute &attr);
	virtual bool is_az_stow_cmd1_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_cmd1_Retr related methods
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_cmd1_Retr(Tango::Attribute &attr);
	virtual void write_az_stow_cmd1_Retr(Tango::WAttribute &attr);
	virtual bool is_az_stow_cmd1_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_cmd2_Extr related methods
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_cmd2_Extr(Tango::Attribute &attr);
	virtual void write_az_stow_cmd2_Extr(Tango::WAttribute &attr);
	virtual bool is_az_stow_cmd2_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_stow_cmd2_Retr related methods
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_stow_cmd2_Retr(Tango::Attribute &attr);
	virtual void write_az_stow_cmd2_Retr(Tango::WAttribute &attr);
	virtual bool is_az_stow_cmd2_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Error_Active related methods
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Error_Active(Tango::Attribute &attr);
	virtual void write_az_err_Error_Active(Tango::WAttribute &attr);
	virtual bool is_az_err_Error_Active_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Rate_Loop related methods
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Rate_Loop(Tango::Attribute &attr);
	virtual void write_az_err_Rate_Loop(Tango::WAttribute &attr);
	virtual bool is_az_err_Rate_Loop_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Group related methods
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Group(Tango::Attribute &attr);
	virtual void write_az_err_Group(Tango::WAttribute &attr);
	virtual bool is_az_err_Group_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Override related methods
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Override(Tango::Attribute &attr);
	virtual void write_az_err_Override(Tango::WAttribute &attr);
	virtual bool is_az_err_Override_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Safety_Dev related methods
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Safety_Dev(Tango::Attribute &attr);
	virtual void write_az_err_Safety_Dev(Tango::WAttribute &attr);
	virtual bool is_az_err_Safety_Dev_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Extern related methods
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Extern(Tango::Attribute &attr);
	virtual void write_az_err_Extern(Tango::WAttribute &attr);
	virtual bool is_az_err_Extern_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Power related methods
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Power(Tango::Attribute &attr);
	virtual void write_az_err_Power(Tango::WAttribute &attr);
	virtual bool is_az_err_Power_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Brake related methods
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Brake(Tango::Attribute &attr);
	virtual void write_az_err_Brake(Tango::WAttribute &attr);
	virtual bool is_az_err_Brake_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Mot_ready related methods
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Mot_ready(Tango::Attribute &attr);
	virtual void write_az_err_Mot_ready(Tango::WAttribute &attr);
	virtual bool is_az_err_Mot_ready_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Motor related methods
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Motor(Tango::Attribute &attr);
	virtual void write_az_err_Motor(Tango::WAttribute &attr);
	virtual bool is_az_err_Motor_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Mot_Tacho related methods
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Mot_Tacho(Tango::Attribute &attr);
	virtual void write_az_err_Mot_Tacho(Tango::WAttribute &attr);
	virtual bool is_az_err_Mot_Tacho_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Mot_Comm related methods
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Mot_Comm(Tango::Attribute &attr);
	virtual void write_az_err_Mot_Comm(Tango::WAttribute &attr);
	virtual bool is_az_err_Mot_Comm_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Mot_Timeout related methods
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Mot_Timeout(Tango::Attribute &attr);
	virtual void write_az_err_Mot_Timeout(Tango::WAttribute &attr);
	virtual bool is_az_err_Mot_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_v_Mot_Exceed related methods
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_v_Mot_Exceed(Tango::Attribute &attr);
	virtual void write_az_err_v_Mot_Exceed(Tango::WAttribute &attr);
	virtual bool is_az_err_v_Mot_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_v_Dev_Exceed related methods
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_v_Dev_Exceed(Tango::Attribute &attr);
	virtual void write_az_err_v_Dev_Exceed(Tango::WAttribute &attr);
	virtual bool is_az_err_v_Dev_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Mot_Overload related methods
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Mot_Overload(Tango::Attribute &attr);
	virtual void write_az_err_Mot_Overload(Tango::WAttribute &attr);
	virtual bool is_az_err_Mot_Overload_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Em_Limit_Dn related methods
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Em_Limit_Dn(Tango::Attribute &attr);
	virtual void write_az_err_Em_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_az_err_Em_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Em_Limit_Up related methods
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Em_Limit_Up(Tango::Attribute &attr);
	virtual void write_az_err_Em_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_az_err_Em_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Em_Stop related methods
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Em_Stop(Tango::Attribute &attr);
	virtual void write_az_err_Em_Stop(Tango::WAttribute &attr);
	virtual bool is_az_err_Em_Stop_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_SW_InterLock related methods
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_SW_InterLock(Tango::Attribute &attr);
	virtual void write_az_err_SW_InterLock(Tango::WAttribute &attr);
	virtual bool is_az_err_SW_InterLock_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_p_Range_Exceed related methods
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_p_Range_Exceed(Tango::Attribute &attr);
	virtual void write_az_err_p_Range_Exceed(Tango::WAttribute &attr);
	virtual bool is_az_err_p_Range_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_p_Dev_Exceed related methods
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_p_Dev_Exceed(Tango::Attribute &attr);
	virtual void write_az_err_p_Dev_Exceed(Tango::WAttribute &attr);
	virtual bool is_az_err_p_Dev_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_No_Pos_Enc_Sync related methods
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_No_Pos_Enc_Sync(Tango::Attribute &attr);
	virtual void write_az_err_No_Pos_Enc_Sync(Tango::WAttribute &attr);
	virtual bool is_az_err_No_Pos_Enc_Sync_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Pos_Enc_Sync related methods
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Pos_Enc_Sync(Tango::Attribute &attr);
	virtual void write_az_err_Pos_Enc_Sync(Tango::WAttribute &attr);
	virtual bool is_az_err_Pos_Enc_Sync_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Pos_Enc related methods
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Pos_Enc(Tango::Attribute &attr);
	virtual void write_az_err_Pos_Enc(Tango::WAttribute &attr);
	virtual bool is_az_err_Pos_Enc_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Pos_Enc_Step related methods
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Pos_Enc_Step(Tango::Attribute &attr);
	virtual void write_az_err_Pos_Enc_Step(Tango::WAttribute &attr);
	virtual bool is_az_err_Pos_Enc_Step_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Stow related methods
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Stow(Tango::Attribute &attr);
	virtual void write_az_err_Stow(Tango::WAttribute &attr);
	virtual bool is_az_err_Stow_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Stow_Timeout related methods
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Stow_Timeout(Tango::Attribute &attr);
	virtual void write_az_err_Stow_Timeout(Tango::WAttribute &attr);
	virtual bool is_az_err_Stow_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Handcrank related methods
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Handcrank(Tango::Attribute &attr);
	virtual void write_az_err_Handcrank(Tango::WAttribute &attr);
	virtual bool is_az_err_Handcrank_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Cmd_Timeout related methods
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Cmd_Timeout(Tango::Attribute &attr);
	virtual void write_az_err_Cmd_Timeout(Tango::WAttribute &attr);
	virtual bool is_az_err_Cmd_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Field_Bus related methods
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Field_Bus(Tango::Attribute &attr);
	virtual void write_az_err_Field_Bus(Tango::WAttribute &attr);
	virtual bool is_az_err_Field_Bus_allowed(Tango::AttReqType type);
/**
 *	Attribute az_err_Lim_Err related methods
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_err_Lim_Err(Tango::Attribute &attr);
	virtual void write_az_err_Lim_Err(Tango::WAttribute &attr);
	virtual bool is_az_err_Lim_Err_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Param_Fault related methods
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Param_Fault(Tango::Attribute &attr);
	virtual void write_az_wa_Param_Fault(Tango::WAttribute &attr);
	virtual bool is_az_wa_Param_Fault_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Rate_Mode related methods
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Rate_Mode(Tango::Attribute &attr);
	virtual void write_az_wa_Rate_Mode(Tango::WAttribute &attr);
	virtual bool is_az_wa_Rate_Mode_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Degraded_Mode related methods
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Degraded_Mode(Tango::Attribute &attr);
	virtual void write_az_wa_Degraded_Mode(Tango::WAttribute &attr);
	virtual bool is_az_wa_Degraded_Mode_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Override related methods
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Override(Tango::Attribute &attr);
	virtual void write_az_wa_Override(Tango::WAttribute &attr);
	virtual bool is_az_wa_Override_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Heat_Up_Motors related methods
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Heat_Up_Motors(Tango::Attribute &attr);
	virtual void write_az_wa_Heat_Up_Motors(Tango::WAttribute &attr);
	virtual bool is_az_wa_Heat_Up_Motors_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_extern_Stop related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_extern_Stop(Tango::Attribute &attr);
	virtual void write_az_wa_extern_Stop(Tango::WAttribute &attr);
	virtual bool is_az_wa_extern_Stop_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_LubricationFault related methods
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_LubricationFault(Tango::Attribute &attr);
	virtual void write_az_wa_LubricationFault(Tango::WAttribute &attr);
	virtual bool is_az_wa_LubricationFault_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Brake_openInaktiv related methods
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Brake_openInaktiv(Tango::Attribute &attr);
	virtual void write_az_wa_Brake_openInaktiv(Tango::WAttribute &attr);
	virtual bool is_az_wa_Brake_openInaktiv_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Mot_ready related methods
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Mot_ready(Tango::Attribute &attr);
	virtual void write_az_wa_Mot_ready(Tango::WAttribute &attr);
	virtual bool is_az_wa_Mot_ready_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_MotFanFault related methods
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_MotFanFault(Tango::Attribute &attr);
	virtual void write_az_wa_MotFanFault(Tango::WAttribute &attr);
	virtual bool is_az_wa_MotFanFault_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_MotWarn related methods
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_MotWarn(Tango::Attribute &attr);
	virtual void write_az_wa_MotWarn(Tango::WAttribute &attr);
	virtual bool is_az_wa_MotWarn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Mmax_reached related methods
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Mmax_reached(Tango::Attribute &attr);
	virtual void write_az_wa_Mmax_reached(Tango::WAttribute &attr);
	virtual bool is_az_wa_Mmax_reached_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_PreLimDn_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_PreLimDn_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_PreLimDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_PreLimDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_PreLimUp_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_PreLimUp_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_PreLimUp_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_PreLimUp_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_FinLimDn_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_FinLimDn_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_FinLimDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_FinLimDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_FinLimUp_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_FinLimUp_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_FinLimUp_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_FinLimUp_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pre_Limit_Up related methods
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pre_Limit_Up(Tango::Attribute &attr);
	virtual void write_az_wa_Pre_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pre_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pre_Limit_Dn related methods
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pre_Limit_Dn(Tango::Attribute &attr);
	virtual void write_az_wa_Pre_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pre_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Fin_Limit_Up related methods
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Fin_Limit_Up(Tango::Attribute &attr);
	virtual void write_az_wa_Fin_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_az_wa_Fin_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Fin_Limit_Dn related methods
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Fin_Limit_Dn(Tango::Attribute &attr);
	virtual void write_az_wa_Fin_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_az_wa_Fin_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pre_Pre_Limit_Up related methods
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr);
	virtual void write_az_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pre_Pre_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pre_Pre_Limit_Dn related methods
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr);
	virtual void write_az_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pre_Pre_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_EmLimitDn_inconsist related methods
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_EmLimitDn_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_EmLimitDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_EmLimitDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_EmLimitUP_inconsist related methods
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_EmLimitUP_inconsist(Tango::Attribute &attr);
	virtual void write_az_wa_EmLimitUP_inconsist(Tango::WAttribute &attr);
	virtual bool is_az_wa_EmLimitUP_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pos_Safe_Enc_Warn related methods
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr);
	virtual void write_az_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pos_Safe_Enc_Warn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Pos_Enc_Warn related methods
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Pos_Enc_Warn(Tango::Attribute &attr);
	virtual void write_az_wa_Pos_Enc_Warn(Tango::WAttribute &attr);
	virtual bool is_az_wa_Pos_Enc_Warn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Stow_Pin_Fault related methods
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Stow_Pin_Fault(Tango::Attribute &attr);
	virtual void write_az_wa_Stow_Pin_Fault(Tango::WAttribute &attr);
	virtual bool is_az_wa_Stow_Pin_Fault_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Stowpins_Extr related methods
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Stowpins_Extr(Tango::Attribute &attr);
	virtual void write_az_wa_Stowpins_Extr(Tango::WAttribute &attr);
	virtual bool is_az_wa_Stowpins_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_lowPowerMode related methods
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_lowPowerMode(Tango::Attribute &attr);
	virtual void write_az_wa_lowPowerMode(Tango::WAttribute &attr);
	virtual bool is_az_wa_lowPowerMode_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Motor_Overload related methods
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Motor_Overload(Tango::Attribute &attr);
	virtual void write_az_wa_Motor_Overload(Tango::WAttribute &attr);
	virtual bool is_az_wa_Motor_Overload_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Motor_Temp related methods
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Motor_Temp(Tango::Attribute &attr);
	virtual void write_az_wa_Motor_Temp(Tango::WAttribute &attr);
	virtual bool is_az_wa_Motor_Temp_allowed(Tango::AttReqType type);
/**
 *	Attribute az_wa_Vel_Limit related methods
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_wa_Vel_Limit(Tango::Attribute &attr);
	virtual void write_az_wa_Vel_Limit(Tango::WAttribute &attr);
	virtual bool is_az_wa_Vel_Limit_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_initok related methods
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_initok(Tango::Attribute &attr);
	virtual void write_az_disc_initok(Tango::WAttribute &attr);
	virtual bool is_az_disc_initok_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_Ok related methods
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_Ok(Tango::Attribute &attr);
	virtual void write_az_disc_Ok(Tango::WAttribute &attr);
	virtual bool is_az_disc_Ok_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_commErr related methods
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_commErr(Tango::Attribute &attr);
	virtual void write_az_disc_commErr(Tango::WAttribute &attr);
	virtual bool is_az_disc_commErr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_overflow related methods
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_overflow(Tango::Attribute &attr);
	virtual void write_az_disc_overflow(Tango::WAttribute &attr);
	virtual bool is_az_disc_overflow_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_warning related methods
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_warning(Tango::Attribute &attr);
	virtual void write_az_disc_warning(Tango::WAttribute &attr);
	virtual bool is_az_disc_warning_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_operational related methods
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_operational(Tango::Attribute &attr);
	virtual void write_az_disc_operational(Tango::WAttribute &attr);
	virtual bool is_az_disc_operational_allowed(Tango::AttReqType type);
/**
 *	Attribute az_disc_error related methods
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_disc_error(Tango::Attribute &attr);
	virtual void write_az_disc_error(Tango::WAttribute &attr);
	virtual bool is_az_disc_error_allowed(Tango::AttReqType type);
/**
 *	Attribute az_axis_state related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az_axis_state(Tango::Attribute &attr);
	virtual void write_az_axis_state(Tango::WAttribute &attr);
	virtual bool is_az_axis_state_allowed(Tango::AttReqType type);
/**
 *	Attribute az_axis_actual_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az_axis_actual_mode(Tango::Attribute &attr);
	virtual void write_az_axis_actual_mode(Tango::WAttribute &attr);
	virtual bool is_az_axis_actual_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute az_axis_trajectory_state related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az_axis_trajectory_state(Tango::Attribute &attr);
	virtual void write_az_axis_trajectory_state(Tango::WAttribute &attr);
	virtual bool is_az_axis_trajectory_state_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_Soll related methods
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_Soll(Tango::Attribute &attr);
	virtual void write_az_p_Soll(Tango::WAttribute &attr);
	virtual bool is_az_p_Soll_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_Bahn related methods
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_Bahn(Tango::Attribute &attr);
	virtual void write_az_p_Bahn(Tango::WAttribute &attr);
	virtual bool is_az_p_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_Ist related methods
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_Ist(Tango::Attribute &attr);
	virtual void write_az_p_Ist(Tango::WAttribute &attr);
	virtual bool is_az_p_Ist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_Offs related methods
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_Offs(Tango::Attribute &attr);
	virtual void write_az_p_Offs(Tango::WAttribute &attr);
	virtual bool is_az_p_Offs_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_Abw related methods
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_Abw(Tango::Attribute &attr);
	virtual void write_az_p_Abw(Tango::WAttribute &attr);
	virtual bool is_az_p_Abw_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_AbwFil related methods
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_AbwFil(Tango::Attribute &attr);
	virtual void write_az_p_AbwFil(Tango::WAttribute &attr);
	virtual bool is_az_p_AbwFil_allowed(Tango::AttReqType type);
/**
 *	Attribute az_p_pointCorr related methods
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_p_pointCorr(Tango::Attribute &attr);
	virtual void write_az_p_pointCorr(Tango::WAttribute &attr);
	virtual bool is_az_p_pointCorr_allowed(Tango::AttReqType type);
/**
 *	Attribute az_v_Bahn related methods
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_v_Bahn(Tango::Attribute &attr);
	virtual void write_az_v_Bahn(Tango::WAttribute &attr);
	virtual bool is_az_v_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_v_Soll related methods
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_v_Soll(Tango::Attribute &attr);
	virtual void write_az_v_Soll(Tango::WAttribute &attr);
	virtual bool is_az_v_Soll_allowed(Tango::AttReqType type);
/**
 *	Attribute az_v_Ist related methods
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_v_Ist(Tango::Attribute &attr);
	virtual void write_az_v_Ist(Tango::WAttribute &attr);
	virtual bool is_az_v_Ist_allowed(Tango::AttReqType type);
/**
 *	Attribute az_a_Bahn related methods
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az_a_Bahn(Tango::Attribute &attr);
	virtual void write_az_a_Bahn(Tango::WAttribute &attr);
	virtual bool is_az_a_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute az_motor_selection_1 related methods
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_motor_selection_1(Tango::Attribute &attr);
	virtual void write_az_motor_selection_1(Tango::WAttribute &attr);
	virtual bool is_az_motor_selection_1_allowed(Tango::AttReqType type);
/**
 *	Attribute az_motor_selection_2 related methods
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_motor_selection_2(Tango::Attribute &attr);
	virtual void write_az_motor_selection_2(Tango::WAttribute &attr);
	virtual bool is_az_motor_selection_2_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_selection_1 related methods
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_selection_1(Tango::Attribute &attr);
	virtual void write_az_brakes_selection_1(Tango::WAttribute &attr);
	virtual bool is_az_brakes_selection_1_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_selection_2 related methods
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_selection_2(Tango::Attribute &attr);
	virtual void write_az_brakes_selection_2(Tango::WAttribute &attr);
	virtual bool is_az_brakes_selection_2_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_open_1 related methods
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_open_1(Tango::Attribute &attr);
	virtual void write_az_brakes_open_1(Tango::WAttribute &attr);
	virtual bool is_az_brakes_open_1_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_open_2 related methods
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_open_2(Tango::Attribute &attr);
	virtual void write_az_brakes_open_2(Tango::WAttribute &attr);
	virtual bool is_az_brakes_open_2_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_command_1 related methods
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_command_1(Tango::Attribute &attr);
	virtual void write_az_brakes_command_1(Tango::WAttribute &attr);
	virtual bool is_az_brakes_command_1_allowed(Tango::AttReqType type);
/**
 *	Attribute az_brakes_command_2 related methods
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az_brakes_command_2(Tango::Attribute &attr);
	virtual void write_az_brakes_command_2(Tango::WAttribute &attr);
	virtual bool is_az_brakes_command_2_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_initOk related methods
 *	Description: The initialization of the axis is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_initOk(Tango::Attribute &attr);
	virtual void write_el_abs_initOk(Tango::WAttribute &attr);
	virtual bool is_el_abs_initOk_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_sim related methods
 *	Description: The axis is in simulation mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_sim(Tango::Attribute &attr);
	virtual void write_el_abs_sim(Tango::WAttribute &attr);
	virtual bool is_el_abs_sim_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_reset related methods
 *	Description: A reset of all errors regarding the axis is made.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_reset(Tango::Attribute &attr);
	virtual void write_el_abs_reset(Tango::WAttribute &attr);
	virtual bool is_el_abs_reset_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_notStop related methods
 *	Description: The axis is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_notStop(Tango::Attribute &attr);
	virtual void write_el_abs_notStop(Tango::WAttribute &attr);
	virtual bool is_el_abs_notStop_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_bereit related methods
 *	Description: All selected motors of the axis are faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_bereit(Tango::Attribute &attr);
	virtual void write_el_abs_bereit(Tango::WAttribute &attr);
	virtual bool is_el_abs_bereit_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_motEin related methods
 *	Description: All selected motors of the axis are activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_motEin(Tango::Attribute &attr);
	virtual void write_el_abs_motEin(Tango::WAttribute &attr);
	virtual bool is_el_abs_motEin_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_praez related methods
 *	Description: The velocity of the axis is below the configured precision on value (P164_v_PraezEin) and the position deviation is below the configured value (P165_p_PraezAbw); dependent on the configuration parameters (P170_pidKpH, P171_pidKpL and P173_pidTv) the control parameters will be adjusted.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_praez(Tango::Attribute &attr);
	virtual void write_el_abs_praez(Tango::WAttribute &attr);
	virtual bool is_el_abs_praez_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_lockAT related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_lockAT(Tango::Attribute &attr);
	virtual void write_el_abs_lockAT(Tango::WAttribute &attr);
	virtual bool is_el_abs_lockAT_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_override related methods
 *	Description: The override functionality for the limit switches, the stow pin and the hand crank is activated; to use the override functionality the axis has to be in service mode, the hand held panel has to be active and the releasing key must be activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_override(Tango::Attribute &attr);
	virtual void write_el_abs_override(Tango::WAttribute &attr);
	virtual bool is_el_abs_override_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_posOffset related methods
 *	Description: A position offset value will be added to the commanded position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_posOffset(Tango::Attribute &attr);
	virtual void write_el_abs_posOffset(Tango::WAttribute &attr);
	virtual bool is_el_abs_posOffset_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_active related methods
 *	Description: Axis is in mode active and is ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_active(Tango::Attribute &attr);
	virtual void write_el_abs_active(Tango::WAttribute &attr);
	virtual bool is_el_abs_active_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_parkPos related methods
 *	Description: Axis is in park position; the park position can be set in the configuration file P184_p_park.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_parkPos(Tango::Attribute &attr);
	virtual void write_el_abs_parkPos(Tango::WAttribute &attr);
	virtual bool is_el_abs_parkPos_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_pointCorr related methods
 *	Description: A pointing correction will be added to the configured position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_pointCorr(Tango::Attribute &attr);
	virtual void write_el_abs_pointCorr(Tango::WAttribute &attr);
	virtual bool is_el_abs_pointCorr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_praezOk related methods
 *	Description: The position deviation is below the configured value (P165_p_PraezAbw).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_praezOk(Tango::Attribute &attr);
	virtual void write_el_abs_praezOk(Tango::WAttribute &attr);
	virtual bool is_el_abs_praezOk_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_inactive related methods
 *	Description: Axis is in state inactive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_inactive(Tango::Attribute &attr);
	virtual void write_el_abs_inactive(Tango::WAttribute &attr);
	virtual bool is_el_abs_inactive_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_deactivate related methods
 *	Description: Axis is in state deactivate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_deactivate(Tango::Attribute &attr);
	virtual void write_el_abs_deactivate(Tango::WAttribute &attr);
	virtual bool is_el_abs_deactivate_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_activate related methods
 *	Description: Axis is in state activate.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_activate(Tango::Attribute &attr);
	virtual void write_el_abs_activate(Tango::WAttribute &attr);
	virtual bool is_el_abs_activate_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_encReset related methods
 *	Description: Encorder system reset is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_encReset(Tango::Attribute &attr);
	virtual void write_el_abs_encReset(Tango::WAttribute &attr);
	virtual bool is_el_abs_encReset_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_encResetDone related methods
 *	Description: Encorder system reset is done.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_encResetDone(Tango::Attribute &attr);
	virtual void write_el_abs_encResetDone(Tango::WAttribute &attr);
	virtual bool is_el_abs_encResetDone_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_encOp related methods
 *	Description: Encorder system is operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_encOp(Tango::Attribute &attr);
	virtual void write_el_abs_encOp(Tango::WAttribute &attr);
	virtual bool is_el_abs_encOp_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_confOk related methods
 *	Description: The loaded configuration values are valid.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_confOk(Tango::Attribute &attr);
	virtual void write_el_abs_confOk(Tango::WAttribute &attr);
	virtual bool is_el_abs_confOk_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_sector_B related methods
 *	Description: Status of sector switch B.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_sector_B(Tango::Attribute &attr);
	virtual void write_el_abs_sector_B(Tango::WAttribute &attr);
	virtual bool is_el_abs_sector_B_allowed(Tango::AttReqType type);
/**
 *	Attribute el_abs_sector_A related methods
 *	Description: Status of sector switch A.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_abs_sector_A(Tango::Attribute &attr);
	virtual void write_el_abs_sector_A(Tango::WAttribute &attr);
	virtual bool is_el_abs_sector_A_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_posOk related methods
 *	Description: Stow position reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_posOk(Tango::Attribute &attr);
	virtual void write_el_stow_posOk(Tango::WAttribute &attr);
	virtual bool is_el_stow_posOk_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_preUp related methods
 *	Description: Stow position pre limit switch up reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_preUp(Tango::Attribute &attr);
	virtual void write_el_stow_preUp(Tango::WAttribute &attr);
	virtual bool is_el_stow_preUp_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_preDn related methods
 *	Description: Stow position pre limit switch down reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_preDn(Tango::Attribute &attr);
	virtual void write_el_stow_preDn(Tango::WAttribute &attr);
	virtual bool is_el_stow_preDn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_dirDn related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_dirDn(Tango::Attribute &attr);
	virtual void write_el_stow_dirDn(Tango::WAttribute &attr);
	virtual bool is_el_stow_dirDn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin1_Extr related methods
 *	Description: Stow pin 1 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin1_Extr(Tango::Attribute &attr);
	virtual void write_el_stow_pin1_Extr(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin1_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin1_Retr related methods
 *	Description: Stow pin 1 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin1_Retr(Tango::Attribute &attr);
	virtual void write_el_stow_pin1_Retr(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin1_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin1_err related methods
 *	Description: Stow pin 1 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin1_err(Tango::Attribute &attr);
	virtual void write_el_stow_pin1_err(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin1_err_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin1_on related methods
 *	Description: Stow pin 1 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin1_on(Tango::Attribute &attr);
	virtual void write_el_stow_pin1_on(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin1_on_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin2_Extr related methods
 *	Description: Stow pin 2 extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin2_Extr(Tango::Attribute &attr);
	virtual void write_el_stow_pin2_Extr(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin2_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin2_Retr related methods
 *	Description: Stow pin 2 retrieved.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin2_Retr(Tango::Attribute &attr);
	virtual void write_el_stow_pin2_Retr(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin2_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin2_err related methods
 *	Description: Stow pin 2 error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin2_err(Tango::Attribute &attr);
	virtual void write_el_stow_pin2_err(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin2_err_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_pin2_on related methods
 *	Description: Stow pin 2 selected.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_pin2_on(Tango::Attribute &attr);
	virtual void write_el_stow_pin2_on(Tango::WAttribute &attr);
	virtual bool is_el_stow_pin2_on_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_cmd1_Extr related methods
 *	Description: Stow command extract stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_cmd1_Extr(Tango::Attribute &attr);
	virtual void write_el_stow_cmd1_Extr(Tango::WAttribute &attr);
	virtual bool is_el_stow_cmd1_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_cmd1_Retr related methods
 *	Description: Stow command retrieve stow pin 1 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_cmd1_Retr(Tango::Attribute &attr);
	virtual void write_el_stow_cmd1_Retr(Tango::WAttribute &attr);
	virtual bool is_el_stow_cmd1_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_cmd2_Extr related methods
 *	Description: Stow command extract stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_cmd2_Extr(Tango::Attribute &attr);
	virtual void write_el_stow_cmd2_Extr(Tango::WAttribute &attr);
	virtual bool is_el_stow_cmd2_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_stow_cmd2_Retr related methods
 *	Description: Stow command retrieve stow pin 2 is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_stow_cmd2_Retr(Tango::Attribute &attr);
	virtual void write_el_stow_cmd2_Retr(Tango::WAttribute &attr);
	virtual bool is_el_stow_cmd2_Retr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Error_Active related methods
 *	Description: At least one error is set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Error_Active(Tango::Attribute &attr);
	virtual void write_el_err_Error_Active(Tango::WAttribute &attr);
	virtual bool is_el_err_Error_Active_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Rate_Loop related methods
 *	Description: The rate loop is in error state; possible reasons are: at least one motor is not in ready state; at least one motor could not be activated; at least one amplifier reports overload; at least one amplifier/motor system reports a communication error (EtherCAT); at least one amplifier/motor system reports the maximum tolerable velocity of the motor is reached; at least one amplifier/motor system reports 'motor error servo', refer to chapter 6.4.1 Bit-Mode-Coded Motor Status for detailed description of the possible causes.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Rate_Loop(Tango::Attribute &attr);
	virtual void write_el_err_Rate_Loop(Tango::WAttribute &attr);
	virtual bool is_el_err_Rate_Loop_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Group related methods
 *	Description: Group error; one od the spindles reports an error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Group(Tango::Attribute &attr);
	virtual void write_el_err_Group(Tango::WAttribute &attr);
	virtual bool is_el_err_Group_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Override related methods
 *	Description: The override mode is activated while the handheld panel is not activated or in override mode or the service mode is not active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Override(Tango::Attribute &attr);
	virtual void write_el_err_Override(Tango::WAttribute &attr);
	virtual bool is_el_err_Override_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Safety_Dev related methods
 *	Description: At least one of the safety project reports a failure, please refer to Beckhoff documentation EL6904, EL1904, EL2904.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Safety_Dev(Tango::Attribute &attr);
	virtual void write_el_err_Safety_Dev(Tango::WAttribute &attr);
	virtual bool is_el_err_Safety_Dev_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Extern related methods
 *	Description: The appropriate encoder system is not initialized properly.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Extern(Tango::Attribute &attr);
	virtual void write_el_err_Extern(Tango::WAttribute &attr);
	virtual bool is_el_err_Extern_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Power related methods
 *	Description: Linked with the folowing power status bits: drive cabinet(s).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Power(Tango::Attribute &attr);
	virtual void write_el_err_Power(Tango::WAttribute &attr);
	virtual bool is_el_err_Power_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Brake related methods
 *	Description: Brake error active; possible reasons are: at least one brake did not open or close during the configured time; the brake timeout time is set in the configuration file 'P159_t_BrTimeout'; at least one brake is closed while the axis is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Brake(Tango::Attribute &attr);
	virtual void write_el_err_Brake(Tango::WAttribute &attr);
	virtual bool is_el_err_Brake_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Mot_ready related methods
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Mot_ready(Tango::Attribute &attr);
	virtual void write_el_err_Mot_ready(Tango::WAttribute &attr);
	virtual bool is_el_err_Mot_ready_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Motor related methods
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports a motor error (amplifier temperature, motor temperature, speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range (the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready mes- sage is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (warning message) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Motor(Tango::Attribute &attr);
	virtual void write_el_err_Motor(Tango::WAttribute &attr);
	virtual bool is_el_err_Motor_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Mot_Tacho related methods
 *	Description: The motor encoder of at least one motor is faulty.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Mot_Tacho(Tango::Attribute &attr);
	virtual void write_el_err_Mot_Tacho(Tango::WAttribute &attr);
	virtual bool is_el_err_Mot_Tacho_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Mot_Comm related methods
 *	Description: The communication ACU - amplifier is faulty; possible errors are: EtherCAT communication error; service channel communication error; the amplifier system is not on torque mode while the ACU software commands torque set points; KW module (ID11) reports communication error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Mot_Comm(Tango::Attribute &attr);
	virtual void write_el_err_Mot_Comm(Tango::WAttribute &attr);
	virtual bool is_el_err_Mot_Comm_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Mot_Timeout related methods
 *	Description: Activation timeout of at least one motor; not all motors are activated during the configured timeout time; the activation timeout time is set in the configuration file 'P160_t_MotTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Mot_Timeout(Tango::Attribute &attr);
	virtual void write_el_err_Mot_Timeout(Tango::WAttribute &attr);
	virtual bool is_el_err_Mot_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_v_Mot_Exceed related methods
 *	Description: The maximum tolerable velocity of at least one motor is exceeded; the maximum velocity is set in the configuration file `P052_v_Max`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_v_Mot_Exceed(Tango::Attribute &attr);
	virtual void write_el_err_v_Mot_Exceed(Tango::WAttribute &attr);
	virtual bool is_el_err_v_Mot_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_v_Dev_Exceed related methods
 *	Description: The maximum tolerable velocity deviation is exceeded; the velocity deviation is set in the configuration file `P153_v_AbwMax`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_v_Dev_Exceed(Tango::Attribute &attr);
	virtual void write_el_err_v_Dev_Exceed(Tango::WAttribute &attr);
	virtual bool is_el_err_v_Dev_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Mot_Overload related methods
 *	Description: At least one of the servo power supply module (KW) reports a power limit fault that is preset for a defined time; the time is set in the configuration file 'P161_t_iQuad_tTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Mot_Overload(Tango::Attribute &attr);
	virtual void write_el_err_Mot_Overload(Tango::WAttribute &attr);
	virtual bool is_el_err_Mot_Overload_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Em_Limit_Dn related methods
 *	Description: The emergency limit down hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Em_Limit_Dn(Tango::Attribute &attr);
	virtual void write_el_err_Em_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_el_err_Em_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Em_Limit_Up related methods
 *	Description: The emergency limit up hardware limit switch is reached; to get out of this position the override mode is needed.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Em_Limit_Up(Tango::Attribute &attr);
	virtual void write_el_err_Em_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_el_err_Em_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Em_Stop related methods
 *	Description: At least on emergency stop button is activated; for the emergency stop buttons refer to chapter 6.2.6 Bit-Mode-Coded Emergency Stops.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Em_Stop(Tango::Attribute &attr);
	virtual void write_el_err_Em_Stop(Tango::WAttribute &attr);
	virtual bool is_el_err_Em_Stop_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_SW_InterLock related methods
 *	Description: At least on software interlock; for the software interlocks refer to chapter 6.2.5 Bit-Mode-Coded Interlocks.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_SW_InterLock(Tango::Attribute &attr);
	virtual void write_el_err_SW_InterLock(Tango::WAttribute &attr);
	virtual bool is_el_err_SW_InterLock_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_p_Range_Exceed related methods
 *	Description: The actual position of the encoder is outside the maximum range of the axis; the maximum range is configured in the configuration file 'P104_p_FinEndDn' and 'P105_p_FinEndUp'; the tolerance value is set with 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_p_Range_Exceed(Tango::Attribute &attr);
	virtual void write_el_err_p_Range_Exceed(Tango::WAttribute &attr);
	virtual bool is_el_err_p_Range_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_p_Dev_Exceed related methods
 *	Description: The maximum tolerable position deviation is exceeded; the position deviation is set in the configuration file 'P152_p_AbwMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_p_Dev_Exceed(Tango::Attribute &attr);
	virtual void write_el_err_p_Dev_Exceed(Tango::WAttribute &attr);
	virtual bool is_el_err_p_Dev_Exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_No_Pos_Enc_Sync related methods
 *	Description: Axis not synchronized and not in rate mode.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_No_Pos_Enc_Sync(Tango::Attribute &attr);
	virtual void write_el_err_No_Pos_Enc_Sync(Tango::WAttribute &attr);
	virtual bool is_el_err_No_Pos_Enc_Sync_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Pos_Enc_Sync related methods
 *	Description: Synchronization of safety encoder failed: timeout; invalid position.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Pos_Enc_Sync(Tango::Attribute &attr);
	virtual void write_el_err_Pos_Enc_Sync(Tango::WAttribute &attr);
	virtual bool is_el_err_Pos_Enc_Sync_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Pos_Enc related methods
 *	Description: All implemented axis encoders are in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Pos_Enc(Tango::Attribute &attr);
	virtual void write_el_err_Pos_Enc(Tango::WAttribute &attr);
	virtual bool is_el_err_Pos_Enc_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Pos_Enc_Step related methods
 *	Description: The difference between the read out of the encoder and its value one task cycle before is too high; the maximum difference between the two values is: 5*P108_v_MaxSys * taskCycleTime.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Pos_Enc_Step(Tango::Attribute &attr);
	virtual void write_el_err_Pos_Enc_Step(Tango::WAttribute &attr);
	virtual bool is_el_err_Pos_Enc_Step_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Stow related methods
 *	Description: Stow pin drive error; the possible reasons are: power error; sensor error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Stow(Tango::Attribute &attr);
	virtual void write_el_err_Stow(Tango::WAttribute &attr);
	virtual bool is_el_err_Stow_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Stow_Timeout related methods
 *	Description: Stow pin movement timeout is activated; the stow pin could not finish the movement during the configured timeout time; the stow pin movement timeout time is set in the configuration file 'P162_t_StowTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Stow_Timeout(Tango::Attribute &attr);
	virtual void write_el_err_Stow_Timeout(Tango::WAttribute &attr);
	virtual bool is_el_err_Stow_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Handcrank related methods
 *	Description: At least one manual crank at one motor or stow pin is plugged in.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Handcrank(Tango::Attribute &attr);
	virtual void write_el_err_Handcrank(Tango::WAttribute &attr);
	virtual bool is_el_err_Handcrank_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Cmd_Timeout related methods
 *	Description: The activation command of the axis failed. Possible reasons are: at least one motor could not be activated during the specified time; at least one brake could not be opened during the specified time; the time for activation can be configured in the configuration file 'P157_t_CmdEinTimeout'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Cmd_Timeout(Tango::Attribute &attr);
	virtual void write_el_err_Cmd_Timeout(Tango::WAttribute &attr);
	virtual bool is_el_err_Cmd_Timeout_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Field_Bus related methods
 *	Description: Field bus error, refer to chapter 6.2.8 Bit-Mode-Coded Communication Faults.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Field_Bus(Tango::Attribute &attr);
	virtual void write_el_err_Field_Bus(Tango::WAttribute &attr);
	virtual bool is_el_err_Field_Bus_allowed(Tango::AttReqType type);
/**
 *	Attribute el_err_Lim_Err related methods
 *	Description: The maximum specified velocity during movement in the limit switch range of the axis is exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_err_Lim_Err(Tango::Attribute &attr);
	virtual void write_el_err_Lim_Err(Tango::WAttribute &attr);
	virtual bool is_el_err_Lim_Err_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Param_Fault related methods
 *	Description: The axis is not initialized and cannot be used; the configuration file must be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Param_Fault(Tango::Attribute &attr);
	virtual void write_el_wa_Param_Fault(Tango::WAttribute &attr);
	virtual bool is_el_wa_Param_Fault_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Rate_Mode related methods
 *	Description: The axis is set to rate mode, the readout from the encoder will be ignored as well as all software position limits; for driving the axis only the hardware limit switches are used; while the axis is in rate mode the maximum velocity is reduced; the velocity for rate mode is set in the configuration file 'P183_vSlewHHP.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Rate_Mode(Tango::Attribute &attr);
	virtual void write_el_wa_Rate_Mode(Tango::WAttribute &attr);
	virtual bool is_el_wa_Rate_Mode_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Degraded_Mode related methods
 *	Description: Not all motors of the axis are selected; the motors that are not selected will not be activated; the maximum velocity and acceleration of the axis will be reduced; the factor of reduction is set in the configuration file 'P179_degradeBahn.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Degraded_Mode(Tango::Attribute &attr);
	virtual void write_el_wa_Degraded_Mode(Tango::WAttribute &attr);
	virtual bool is_el_wa_Degraded_Mode_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Override related methods
 *	Description: The override mode is activated; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Override(Tango::Attribute &attr);
	virtual void write_el_wa_Override(Tango::WAttribute &attr);
	virtual bool is_el_wa_Override_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Heat_Up_Motors related methods
 *	Description: Motor temperature below -10 degC heat up required; 30 min heat up time for activation with double pre tension without service.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Heat_Up_Motors(Tango::Attribute &attr);
	virtual void write_el_wa_Heat_Up_Motors(Tango::WAttribute &attr);
	virtual bool is_el_wa_Heat_Up_Motors_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_extern_Stop related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_extern_Stop(Tango::Attribute &attr);
	virtual void write_el_wa_extern_Stop(Tango::WAttribute &attr);
	virtual bool is_el_wa_extern_Stop_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_LubricationFault related methods
 *	Description: At least one of the lubrication devices reports an error; the error message will be shown at the display of the device.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_LubricationFault(Tango::Attribute &attr);
	virtual void write_el_wa_LubricationFault(Tango::WAttribute &attr);
	virtual bool is_el_wa_LubricationFault_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Brake_openInaktiv related methods
 *	Description: At least one brake reports the status `open` while the axis is not in state `Active`.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Brake_openInaktiv(Tango::Attribute &attr);
	virtual void write_el_wa_Brake_openInaktiv(Tango::WAttribute &attr);
	virtual bool is_el_wa_Brake_openInaktiv_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Mot_ready related methods
 *	Description: Amplifier system of at least one motor is not ready for operation; inverter module not ready or system not ready (SBM or QUE message).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Mot_ready(Tango::Attribute &attr);
	virtual void write_el_wa_Mot_ready(Tango::WAttribute &attr);
	virtual bool is_el_wa_Mot_ready_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_MotFanFault related methods
 *	Description: At least one motor fan is not working while the axis is active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_MotFanFault(Tango::Attribute &attr);
	virtual void write_el_wa_MotFanFault(Tango::WAttribute &attr);
	virtual bool is_el_wa_MotFanFault_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_MotWarn related methods
 *	Description: motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports a motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated; during strong wind and high motor temperatures drive to stow is required.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_MotWarn(Tango::Attribute &attr);
	virtual void write_el_wa_MotWarn(Tango::WAttribute &attr);
	virtual bool is_el_wa_MotWarn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Mmax_reached related methods
 *	Description: Maximum allowed torque of one axis is reached; the maximum torque is set in the configuration file 'P051_M_MotMax'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Mmax_reached(Tango::Attribute &attr);
	virtual void write_el_wa_Mmax_reached(Tango::WAttribute &attr);
	virtual bool is_el_wa_Mmax_reached_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_PreLimDn_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_PreLimDn_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_PreLimDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_PreLimDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_PreLimUp_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_PreLimUp_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_PreLimUp_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_PreLimUp_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_FinLimDn_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_FinLimDn_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_FinLimDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_FinLimDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_FinLimUp_inconsist related methods
 *	Description: Software and hardware switch distance does not fit (P123_p_Inkonsist_SW and P107_p_Inkonsist_HW) position deviation is higher than P117_p_InkonsistEnc.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_FinLimUp_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_FinLimUp_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_FinLimUp_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pre_Limit_Up related methods
 *	Description: The pre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pre_Limit_Up(Tango::Attribute &attr);
	virtual void write_el_wa_Pre_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pre_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pre_Limit_Dn related methods
 *	Description: The pre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P110_v_Limit'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pre_Limit_Dn(Tango::Attribute &attr);
	virtual void write_el_wa_Pre_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pre_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Fin_Limit_Up related methods
 *	Description: The final upper position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Fin_Limit_Up(Tango::Attribute &attr);
	virtual void write_el_wa_Fin_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_el_wa_Fin_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Fin_Limit_Dn related methods
 *	Description: The final lower position of the axis is reached; this defines the absolute position range of the axis.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Fin_Limit_Dn(Tango::Attribute &attr);
	virtual void write_el_wa_Fin_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_el_wa_Fin_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pre_Pre_Limit_Up related methods
 *	Description: The prepre-limit up position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pre_Pre_Limit_Up(Tango::Attribute &attr);
	virtual void write_el_wa_Pre_Pre_Limit_Up(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pre_Pre_Limit_Up_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pre_Pre_Limit_Dn related methods
 *	Description: The prepre-limit down position is reached; the maximum velocity of the axis will be reduced to a predefined value; this value is set in the configuration file 'P120_v_PrePreEnd'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pre_Pre_Limit_Dn(Tango::Attribute &attr);
	virtual void write_el_wa_Pre_Pre_Limit_Dn(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pre_Pre_Limit_Dn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_EmLimitDn_inconsist related methods
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_EmLimitDn_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_EmLimitDn_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_EmLimitDn_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_EmLimitUP_inconsist related methods
 *	Description: The state of the redundant executed emergency limit switches are unequal.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_EmLimitUP_inconsist(Tango::Attribute &attr);
	virtual void write_el_wa_EmLimitUP_inconsist(Tango::WAttribute &attr);
	virtual bool is_el_wa_EmLimitUP_inconsist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pos_Safe_Enc_Warn related methods
 *	Description: Safety encoder system not synchronized; safety encoder system problem existing.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pos_Safe_Enc_Warn(Tango::Attribute &attr);
	virtual void write_el_wa_Pos_Safe_Enc_Warn(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pos_Safe_Enc_Warn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Pos_Enc_Warn related methods
 *	Description: At least one axis encoder head is in error condition.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Pos_Enc_Warn(Tango::Attribute &attr);
	virtual void write_el_wa_Pos_Enc_Warn(Tango::WAttribute &attr);
	virtual bool is_el_wa_Pos_Enc_Warn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Stow_Pin_Fault related methods
 *	Description: Stow pin drive error; the possible reasons are: +P2-QM450 is triggered; +P2-QM560 is triggered; phase guard module for main power I detects power problems (+P2-BB112); stow pin sensor in and out is active fuse +P2-FL12B is triggered.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Stow_Pin_Fault(Tango::Attribute &attr);
	virtual void write_el_wa_Stow_Pin_Fault(Tango::WAttribute &attr);
	virtual bool is_el_wa_Stow_Pin_Fault_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Stowpins_Extr related methods
 *	Description: The stow pin(s) is extracted, the axis is blocked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Stowpins_Extr(Tango::Attribute &attr);
	virtual void write_el_wa_Stowpins_Extr(Tango::WAttribute &attr);
	virtual bool is_el_wa_Stowpins_Extr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_lowPowerMode related methods
 *	Description: The low power mode is active; this mode reduces maximum velocity and acceleration.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_lowPowerMode(Tango::Attribute &attr);
	virtual void write_el_wa_lowPowerMode(Tango::WAttribute &attr);
	virtual bool is_el_wa_lowPowerMode_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Motor_Overload related methods
 *	Description: Motor overload warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Motor_Overload(Tango::Attribute &attr);
	virtual void write_el_wa_Motor_Overload(Tango::WAttribute &attr);
	virtual bool is_el_wa_Motor_Overload_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Motor_Temp related methods
 *	Description: Motor temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Motor_Temp(Tango::Attribute &attr);
	virtual void write_el_wa_Motor_Temp(Tango::WAttribute &attr);
	virtual bool is_el_wa_Motor_Temp_allowed(Tango::AttReqType type);
/**
 *	Attribute el_wa_Vel_Limit related methods
 *	Description: The velocity rate limitation is active; one of the pre limit switches is reached.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_wa_Vel_Limit(Tango::Attribute &attr);
	virtual void write_el_wa_Vel_Limit(Tango::WAttribute &attr);
	virtual bool is_el_wa_Vel_Limit_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_initok related methods
 *	Description: Encoder disc initialization OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_initok(Tango::Attribute &attr);
	virtual void write_el_disc_initok(Tango::WAttribute &attr);
	virtual bool is_el_disc_initok_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_Ok related methods
 *	Description: Encoder disc OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_Ok(Tango::Attribute &attr);
	virtual void write_el_disc_Ok(Tango::WAttribute &attr);
	virtual bool is_el_disc_Ok_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_commErr related methods
 *	Description: Encoder disc communication OK.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_commErr(Tango::Attribute &attr);
	virtual void write_el_disc_commErr(Tango::WAttribute &attr);
	virtual bool is_el_disc_commErr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_overflow related methods
 *	Description: Encoder disc overflow.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_overflow(Tango::Attribute &attr);
	virtual void write_el_disc_overflow(Tango::WAttribute &attr);
	virtual bool is_el_disc_overflow_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_warning related methods
 *	Description: Encoder disc warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_warning(Tango::Attribute &attr);
	virtual void write_el_disc_warning(Tango::WAttribute &attr);
	virtual bool is_el_disc_warning_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_operational related methods
 *	Description: Encoder disc operational.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_operational(Tango::Attribute &attr);
	virtual void write_el_disc_operational(Tango::WAttribute &attr);
	virtual bool is_el_disc_operational_allowed(Tango::AttReqType type);
/**
 *	Attribute el_disc_error related methods
 *	Description: Encoder disc error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_disc_error(Tango::Attribute &attr);
	virtual void write_el_disc_error(Tango::WAttribute &attr);
	virtual bool is_el_disc_error_allowed(Tango::AttReqType type);
/**
 *	Attribute el_axis_state related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_el_axis_state(Tango::Attribute &attr);
	virtual void write_el_axis_state(Tango::WAttribute &attr);
	virtual bool is_el_axis_state_allowed(Tango::AttReqType type);
/**
 *	Attribute el_axis_actual_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_el_axis_actual_mode(Tango::Attribute &attr);
	virtual void write_el_axis_actual_mode(Tango::WAttribute &attr);
	virtual bool is_el_axis_actual_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute el_axis_trajectory_state related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_el_axis_trajectory_state(Tango::Attribute &attr);
	virtual void write_el_axis_trajectory_state(Tango::WAttribute &attr);
	virtual bool is_el_axis_trajectory_state_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_Soll related methods
 *	Description: Desired position.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_Soll(Tango::Attribute &attr);
	virtual void write_el_p_Soll(Tango::WAttribute &attr);
	virtual bool is_el_p_Soll_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_Bahn related methods
 *	Description: Position output from the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_Bahn(Tango::Attribute &attr);
	virtual void write_el_p_Bahn(Tango::WAttribute &attr);
	virtual bool is_el_p_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_Ist related methods
 *	Description: Actual position received from the encoder.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_Ist(Tango::Attribute &attr);
	virtual void write_el_p_Ist(Tango::WAttribute &attr);
	virtual bool is_el_p_Ist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_Offs related methods
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_Offs(Tango::Attribute &attr);
	virtual void write_el_p_Offs(Tango::WAttribute &attr);
	virtual bool is_el_p_Offs_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_Abw related methods
 *	Description: Position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_Abw(Tango::Attribute &attr);
	virtual void write_el_p_Abw(Tango::WAttribute &attr);
	virtual bool is_el_p_Abw_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_AbwFil related methods
 *	Description: Filtered position deviation.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_AbwFil(Tango::Attribute &attr);
	virtual void write_el_p_AbwFil(Tango::WAttribute &attr);
	virtual bool is_el_p_AbwFil_allowed(Tango::AttReqType type);
/**
 *	Attribute el_p_pointCorr related methods
 *	Description: Current pointing correction.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_p_pointCorr(Tango::Attribute &attr);
	virtual void write_el_p_pointCorr(Tango::WAttribute &attr);
	virtual bool is_el_p_pointCorr_allowed(Tango::AttReqType type);
/**
 *	Attribute el_v_Bahn related methods
 *	Description: Velocity output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_v_Bahn(Tango::Attribute &attr);
	virtual void write_el_v_Bahn(Tango::WAttribute &attr);
	virtual bool is_el_v_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_v_Soll related methods
 *	Description: Desired velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_v_Soll(Tango::Attribute &attr);
	virtual void write_el_v_Soll(Tango::WAttribute &attr);
	virtual bool is_el_v_Soll_allowed(Tango::AttReqType type);
/**
 *	Attribute el_v_Ist related methods
 *	Description: Current velocity.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_v_Ist(Tango::Attribute &attr);
	virtual void write_el_v_Ist(Tango::WAttribute &attr);
	virtual bool is_el_v_Ist_allowed(Tango::AttReqType type);
/**
 *	Attribute el_a_Bahn related methods
 *	Description: Acceleration output of the trajectory generator.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_el_a_Bahn(Tango::Attribute &attr);
	virtual void write_el_a_Bahn(Tango::WAttribute &attr);
	virtual bool is_el_a_Bahn_allowed(Tango::AttReqType type);
/**
 *	Attribute el_motor_selection_1 related methods
 *	Description: Selected motor 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_motor_selection_1(Tango::Attribute &attr);
	virtual void write_el_motor_selection_1(Tango::WAttribute &attr);
	virtual bool is_el_motor_selection_1_allowed(Tango::AttReqType type);
/**
 *	Attribute el_motor_selection_2 related methods
 *	Description: Selected motor 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_motor_selection_2(Tango::Attribute &attr);
	virtual void write_el_motor_selection_2(Tango::WAttribute &attr);
	virtual bool is_el_motor_selection_2_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_selection_1 related methods
 *	Description: Selected brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_selection_1(Tango::Attribute &attr);
	virtual void write_el_brakes_selection_1(Tango::WAttribute &attr);
	virtual bool is_el_brakes_selection_1_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_selection_2 related methods
 *	Description: Selected brakes 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_selection_2(Tango::Attribute &attr);
	virtual void write_el_brakes_selection_2(Tango::WAttribute &attr);
	virtual bool is_el_brakes_selection_2_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_open_1 related methods
 *	Description: Brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_open_1(Tango::Attribute &attr);
	virtual void write_el_brakes_open_1(Tango::WAttribute &attr);
	virtual bool is_el_brakes_open_1_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_open_2 related methods
 *	Description: Brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_open_2(Tango::Attribute &attr);
	virtual void write_el_brakes_open_2(Tango::WAttribute &attr);
	virtual bool is_el_brakes_open_2_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_command_1 related methods
 *	Description: Open brake 1.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_command_1(Tango::Attribute &attr);
	virtual void write_el_brakes_command_1(Tango::WAttribute &attr);
	virtual bool is_el_brakes_command_1_allowed(Tango::AttReqType type);
/**
 *	Attribute el_brakes_command_2 related methods
 *	Description: Open brake 2.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_el_brakes_command_2(Tango::Attribute &attr);
	virtual void write_el_brakes_command_2(Tango::WAttribute &attr);
	virtual bool is_el_brakes_command_2_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_initOk related methods
 *	Description: The inizialization of the motor/amplifier system is done; if this bit is not set, the configuration file has to be checked.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_initOk(Tango::Attribute &attr);
	virtual void write_az1_mbs_initOk(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_initOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_bereit related methods
 *	Description: The motor is faultless and ready for activating.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_bereit(Tango::Attribute &attr);
	virtual void write_az1_mbs_bereit(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_bereit_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_aktiv related methods
 *	Description: The motor is active and ready for movement.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_aktiv(Tango::Attribute &attr);
	virtual void write_az1_mbs_aktiv(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_aktiv_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_drzNull related methods
 *	Description: The motor rotation is less than 25 rot/min.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_drzNull(Tango::Attribute &attr);
	virtual void write_az1_mbs_drzNull(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_drzNull_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_drzOk related methods
 *	Description: The actual rotation of the motor is correct (v_commanded = v_actual).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_drzOk(Tango::Attribute &attr);
	virtual void write_az1_mbs_drzOk(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_drzOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_posOk related methods
 *	Description: Not used.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_posOk(Tango::Attribute &attr);
	virtual void write_az1_mbs_posOk(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_posOk_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_brOffen related methods
 *	Description: Amplifier reports the brake is open.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_brOffen(Tango::Attribute &attr);
	virtual void write_az1_mbs_brOffen(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_brOffen_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_errBus related methods
 *	Description: The communication ACU amplifier is faulty; possible errors are: EtherCAT communication error; working counter state reports invalid data; service channel communication error; the Amplifier system is not on torque mode; while the ACU software commands torque set points; KW module (ID11 - Status class 1-errors) reports communication error (please refer to AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_errBus(Tango::Attribute &attr);
	virtual void write_az1_mbs_errBus(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_errBus_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_errServo related methods
 *	Description: Motor failure, possible reasons are: at least one of the servo power supply modules (KW) reports an motor error (speed of rotation not in valid ranges, maximum torque exceeded, maximum power exceeded, excess temperature of cooling system, excess temperature of external components, excess temperature of power supply module, excess temperature of the KE module, tension is not in valid range); the intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'; the amplifier system is not on torque mode while the ACU software commands torque set points; the ACU software activates the motors while the system ready message is not set; the amplifier enable signal is not set while the motor is activated; the motor enable signal is not set while the motor is activated; ID11 (Status class 1-errors) is set (please refer to the AMK documentation); ID181 (diagnosis manufacturer class 2) is set (please refer to the AMK documentation).
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_errServo(Tango::Attribute &attr);
	virtual void write_az1_mbs_errServo(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_errServo_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_errSensor related methods
 *	Description: Error in the signal feedback of the motor encoder, e.g. break of encoder cable or encoder error.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_errSensor(Tango::Attribute &attr);
	virtual void write_az1_mbs_errSensor(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_errSensor_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn related methods
 *	Description: Motor warning, possible reasons are: at least one of the servo power supply modules (KW) reports an motor warning (power limit warning, motor over-temperature warning, cooling warning, overload warning, amplifier temperature warning); the motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_iQuad_t related methods
 *	Description: Power limit warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_iQuad_t(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_iQuad_t(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_iQuad_t_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_Ampl related methods
 *	Description: Amplifier temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_Ampl(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_Ampl(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_Ampl_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_Mot related methods
 *	Description: Motor over temperature warning.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_Mot(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_Mot(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_Mot_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_Uzk related methods
 *	Description: The intermediate circuit power is not in the specified range; the valid range is defined in the configuration file, parameter 'P011_U_Zwk_max' and 'P012_U_Zwk_min'.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_Uzk(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_Uzk(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_Uzk_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_v_exceed related methods
 *	Description: Speed of rotation not in valid ranges.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_v_exceed(Tango::Attribute &attr);
	virtual void write_az1_mbs_v_exceed(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_v_exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_M_exceed related methods
 *	Description: Maximum torque exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_M_exceed(Tango::Attribute &attr);
	virtual void write_az1_mbs_M_exceed(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_M_exceed_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_aktiv_intern related methods
 *	Description: Amplifier message axis active.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_aktiv_intern(Tango::Attribute &attr);
	virtual void write_az1_mbs_aktiv_intern(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_aktiv_intern_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_sts_RF related methods
 *	Description: The motor enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_sts_RF(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_sts_RF(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_sts_RF_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_sts_EF related methods
 *	Description: The amplifier enable signal is not set while the motor is activated.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_sts_EF(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_sts_EF(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_sts_EF_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_sts_SBM related methods
 *	Description: The ACU software activates the motors while the system ready message is not set.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_sts_SBM(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_sts_SBM(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_sts_SBM_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_M_mode related methods
 *	Description: Amplifier system is in torque mode; the motor expect torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_M_mode(Tango::Attribute &attr);
	virtual void write_az1_mbs_M_mode(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_M_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_wrongMode related methods
 *	Description: The amplifier system is not on torque mode while the ACU software commands torque set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_wrongMode(Tango::Attribute &attr);
	virtual void write_az1_mbs_wrongMode(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_wrongMode_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_Pow_exceeded related methods
 *	Description: Maximum power exceeded.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_Pow_exceeded(Tango::Attribute &attr);
	virtual void write_az1_mbs_Pow_exceeded(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_Pow_exceeded_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_Cooling related methods
 *	Description: Excess temperature of cooling system.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_Cooling(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_Cooling(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_Cooling_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_Extern related methods
 *	Description: Excess temperature of external components.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_Extern(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_Extern(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_Extern_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_PowerSupply related methods
 *	Description: Excess temperature of power supply module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_PowerSupply(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_PowerSupply(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_PowerSupply_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_warn_T_ERModule related methods
 *	Description: Excess temperature of the KE module.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_warn_T_ERModule(Tango::Attribute &attr);
	virtual void write_az1_mbs_warn_T_ERModule(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_warn_T_ERModule_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_temp related methods
 *	Description: Temperature error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_temp(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_temp(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_temp_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_iQuad_t related methods
 *	Description: Power error drive.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_iQuad_t(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_iQuad_t(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_iQuad_t_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_err_sts_M related methods
 *	Description: The torque set point differs too much from the actual torque readout.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_err_sts_M(Tango::Attribute &attr);
	virtual void write_az1_mbs_err_sts_M(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_err_sts_M_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_mbs_V_Mode related methods
 *	Description: Amplifier system is in velocity mode; the motor expect velocity set points.
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void read_az1_mbs_V_Mode(Tango::Attribute &attr);
	virtual void write_az1_mbs_V_Mode(Tango::WAttribute &attr);
	virtual bool is_az1_mbs_V_Mode_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_actual_position related methods
 *	Description: The actual position of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_actual_position(Tango::Attribute &attr);
	virtual void write_az1_actual_position(Tango::WAttribute &attr);
	virtual bool is_az1_actual_position_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_actual_velocity related methods
 *	Description: The actual velocity of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_actual_velocity(Tango::Attribute &attr);
	virtual void write_az1_actual_velocity(Tango::WAttribute &attr);
	virtual bool is_az1_actual_velocity_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_actual_torque related methods
 *	Description: The actual torque of the motor.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_actual_torque(Tango::Attribute &attr);
	virtual void write_az1_actual_torque(Tango::WAttribute &attr);
	virtual bool is_az1_actual_torque_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_rate_of_utilization related methods
 *	Description: The actual rate of utilization of the motor (+/- 200 %); 100% means rated torque.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_rate_of_utilization(Tango::Attribute &attr);
	virtual void write_az1_rate_of_utilization(Tango::WAttribute &attr);
	virtual bool is_az1_rate_of_utilization_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_Motor_temperature related methods
 *	Description: Motor temperature.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_Motor_temperature(Tango::Attribute &attr);
	virtual void write_az1_Motor_temperature(Tango::WAttribute &attr);
	virtual bool is_az1_Motor_temperature_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_Motor_Overload_Inverter related methods
 *	Description: Motor overload inverter.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_Motor_Overload_Inverter(Tango::Attribute &attr);
	virtual void write_az1_Motor_Overload_Inverter(Tango::WAttribute &attr);
	virtual bool is_az1_Motor_Overload_Inverter_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_Motor_overload related methods
 *	Description: Motor overload.
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
	virtual void read_az1_Motor_overload(Tango::Attribute &attr);
	virtual void write_az1_Motor_overload(Tango::WAttribute &attr);
	virtual bool is_az1_Motor_overload_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_motErrorCode related methods
 *	Description: Motor error code.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az1_motErrorCode(Tango::Attribute &attr);
	virtual void write_az1_motErrorCode(Tango::WAttribute &attr);
	virtual bool is_az1_motErrorCode_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_EmLimDn related methods
 *	Description: DI inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az1_EmLimDn(Tango::Attribute &attr);
	virtual void write_az1_EmLimDn(Tango::WAttribute &attr);
	virtual bool is_az1_EmLimDn_allowed(Tango::AttReqType type);
/**
 *	Attribute az1_EmLimUp related methods
 *	Description: DO inverter.
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_az1_EmLimUp(Tango::Attribute &attr);
	virtual void write_az1_EmLimUp(Tango::WAttribute &attr);
	virtual bool is_az1_EmLimUp_allowed(Tango::AttReqType type);
/**
 *	Attribute provaENUM related methods
 *	Description: 
 *
 *	Data type:	Tango::DevEnum
 *	Attr type:	Scalar
 */
	virtual void read_provaENUM(Tango::Attribute &attr);
	virtual void write_provaENUM(Tango::WAttribute &attr);
	virtual bool is_provaENUM_allowed(Tango::AttReqType type);
/**
 *	Attribute azAxisStatus related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_azAxisStatus(Tango::Attribute &attr);
	virtual void write_azAxisStatus(Tango::WAttribute &attr);
	virtual bool is_azAxisStatus_allowed(Tango::AttReqType type);
/**
 *	Attribute azAxisTrajectoryStatus related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_azAxisTrajectoryStatus(Tango::Attribute &attr);
	virtual void write_azAxisTrajectoryStatus(Tango::WAttribute &attr);
	virtual bool is_azAxisTrajectoryStatus_allowed(Tango::AttReqType type);
/**
 *	Attribute azAxisActualModeString related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_azAxisActualModeString(Tango::Attribute &attr);
	virtual void write_azAxisActualModeString(Tango::WAttribute &attr);
	virtual bool is_azAxisActualModeString_allowed(Tango::AttReqType type);
/**
 *	Attribute elAxisStatus related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_elAxisStatus(Tango::Attribute &attr);
	virtual void write_elAxisStatus(Tango::WAttribute &attr);
	virtual bool is_elAxisStatus_allowed(Tango::AttReqType type);
/**
 *	Attribute elAxisTrajectoryStatus related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_elAxisTrajectoryStatus(Tango::Attribute &attr);
	virtual void write_elAxisTrajectoryStatus(Tango::WAttribute &attr);
	virtual bool is_elAxisTrajectoryStatus_allowed(Tango::AttReqType type);
/**
 *	Attribute elAxisActualModeString related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_elAxisActualModeString(Tango::Attribute &attr);
	virtual void write_elAxisActualModeString(Tango::WAttribute &attr);
	virtual bool is_elAxisActualModeString_allowed(Tango::AttReqType type);
/**
 *	Attribute az_actual_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_az_actual_mode(Tango::Attribute &attr);
	virtual void write_az_actual_mode(Tango::WAttribute &attr);
	virtual bool is_az_actual_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute el_actual_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
	virtual void read_el_actual_mode(Tango::Attribute &attr);
	virtual void write_el_actual_mode(Tango::WAttribute &attr);
	virtual bool is_el_actual_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute fi_actual_mode related methods
 *	Description: 
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
	virtual void read_fi_actual_mode(Tango::Attribute &attr);
	virtual void write_fi_actual_mode(Tango::WAttribute &attr);
	virtual bool is_fi_actual_mode_allowed(Tango::AttReqType type);
/**
 *	Attribute poly_az_coeff related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
	virtual void read_poly_az_coeff(Tango::Attribute &attr);
	virtual void write_poly_az_coeff(Tango::WAttribute &attr);
	virtual bool is_poly_az_coeff_allowed(Tango::AttReqType type);
/**
 *	Attribute poly_el_coeff related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 3
 */
	virtual void read_poly_el_coeff(Tango::Attribute &attr);
	virtual void write_poly_el_coeff(Tango::WAttribute &attr);
	virtual bool is_poly_el_coeff_allowed(Tango::AttReqType type);


	//--------------------------------------------------------
	/**
	 *	Method      : DSManager::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();




//	Command related methods
public:
	/**
	 *	Command SetPointingControl related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void set_pointing_control(Tango::DevString argin);
	virtual bool is_SetPointingControl_allowed(const CORBA::Any &any);
	/**
	 *	Command SetIndexerPosition related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void set_indexer_position(Tango::DevShort argin);
	virtual bool is_SetIndexerPosition_allowed(const CORBA::Any &any);
	/**
	 *	Command SetSubElementMode related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void set_sub_element_mode(Tango::DevShort argin);
	virtual bool is_SetSubElementMode_allowed(const CORBA::Any &any);
	/**
	 *	Command Prova_attr related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void prova_attr(Tango::DevULong argin);
	virtual bool is_Prova_attr_allowed(const CORBA::Any &any);
	/**
	 *	Command GetStatusMessage related method
	 *	Description: 
	 *
	 */
	virtual void get_status_message();
	virtual bool is_GetStatusMessage_allowed(const CORBA::Any &any);
	/**
	 *	Command EngModeCommand related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void eng_mode_command(const Tango::DevVarDoubleArray *argin);
	virtual bool is_EngModeCommand_allowed(const CORBA::Any &any);
	/**
	 *	Command EngParameterCommand related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void eng_parameter_command(const Tango::DevVarDoubleArray *argin);
	virtual bool is_EngParameterCommand_allowed(const CORBA::Any &any);
	/**
	 *	Command SetStowMode related method
	 *	Description: 
	 *
	 */
	virtual void set_stow_mode();
	virtual bool is_SetStowMode_allowed(const CORBA::Any &any);
	/**
	 *	Command Unstow related method
	 *	Description: 
	 *
	 */
	virtual void unstow();
	virtual bool is_Unstow_allowed(const CORBA::Any &any);
	/**
	 *	Command SetStandbyLPMode related method
	 *	Description: 
	 *
	 */
	virtual void set_standby_lpmode();
	virtual bool is_SetStandbyLPMode_allowed(const CORBA::Any &any);
	/**
	 *	Command EngCommand related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void eng_command(const Tango::DevVarDoubleArray *argin);
	virtual bool is_EngCommand_allowed(const CORBA::Any &any);

//	Dynamic commands methods
public:
	/**
	 *	Command dummyDynCmd related method
	 *	Description: 
	 *
	 */
	virtual void dummy_dyn_cmd(Tango::Command &command);
	virtual bool is_dummyDynCmd_allowed(const CORBA::Any &any);
	void add_dummyDynCmd_dynamic_command(string cmdname, bool device);
	void remove_dummyDynCmd_dynamic_command(string cmdname);

	//--------------------------------------------------------
	/**
	 *	Method      : DSManager::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(DSManager::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

protected:
	//--------------------------------------------------------
	/**
 	*	Method      : DSManager::InitCmdAttrStateMachine()
 	*	Description : Initialize cmd & attr state machine
 	*/
	//--------------------------------------------------------
	virtual int InitCmdAttrStateMachine();

	//--------------------------------------------------------
	/**
 	*	Method      : DishManager::RegisterProxies()
 	*	Description : Register device proxies to be used (OVERRIDE BASE DEVICE METHOD)
 	*/
	//--------------------------------------------------------
	virtual int RegisterProxies();

	//--------------------------------------------------------
	/**
 	*	Method      : DSManager::RegisterEventSubscriptions()
 	*	Description : Register event subscriptions for device proxies (OVERRIDE BASE DEVICE METHOD)
 	*/
	//--------------------------------------------------------
	virtual int RegisterEventSubscriptions();

	//--------------------------------------------------------
	/**
 	*	Method      : DSManager::RegisterEventHandlers()
 	*	Description : Register handler commands to be inkoved on event receiption (OVERRIDE BASE DEVICE METHOD)
 	*/
	//--------------------------------------------------------
	virtual int RegisterEventHandlers();

	
	void coordinate_parser(Tango::DevString);
	uint32_t get_milliseconds(void);
	
	// Monitoring related methods
	void monitor_loop(void);
	void read_ds_status(unsigned char *);
	void decode_power_status(uint32_t);
	
	/**
	 *  \brief Decode the `operation_status` DWORD.
	 *
	 *  Decodes the `operation_status` DWORD and set the relative attributes.
	 *               
	 *  @param operation_status
	 *               the `operation_status` DWORD
	 */
	void decode_operation_status(uint32_t);
	
	void decode_system_warnings(uint32_t);
	void decode_software_interlock(uint32_t);
	void decode_emergency_stops(uint32_t);
	void decode_safety_device_errors(uint32_t);
	void decode_communication_status(uint32_t);
	void decode_control_mode_status(uint32_t);
	
	void decode_az_bit_status(uint32_t);
  void decode_az_stow_status(uint32_t);
  void decode_az_error_status(uint32_t);
  void decode_az_warning_status(uint32_t);
  
  
  void decode_el_bit_status(uint32_t);
  void decode_el_stow_status(uint32_t);
  void decode_el_error_status(uint32_t);
  void decode_el_warning_status(uint32_t);
  
  void decode_az1_motor_status(uint32_t);
  
  void decode_dword(uint32_t aux_buf,
		                         bool *bit00,
		                         bool *bit01,
		                         bool *bit02,
		                         bool *bit03,
		                         bool *bit04,
		                         bool *bit05,
		                         bool *bit06,
		                         bool *bit07,
		                         bool *bit08,
		                         bool *bit09,
		                         bool *bit10,
		                         bool *bit11,
		                         bool *bit12,
		                         bool *bit13,
		                         bool *bit14,
		                         bool *bit15,
		                         bool *bit16,
		                         bool *bit17,
		                         bool *bit18,
		                         bool *bit19,
		                         bool *bit20,
		                         bool *bit21,
		                         bool *bit22,
		                         bool *bit23,
		                         bool *bit24,
		                         bool *bit25,
		                         bool *bit26,
		                         bool *bit27,
		                         bool *bit28,
		                         bool *bit29,
		                         bool *bit30,
		                         bool *bit31);
		                         
	void decode_word(uint16_t aux_buf,
                             bool *bit00,
                             bool *bit01,
                             bool *bit02,
                             bool *bit03,
                             bool *bit04,
                             bool *bit05,
                             bool *bit06,
                             bool *bit07,
                             bool *bit08,
                             bool *bit09,
                             bool *bit10,
                             bool *bit11,
                             bool *bit12,
                             bool *bit13,
                             bool *bit14,
                             bool *bit15);

/*----- PROTECTED REGION END -----*/	//	DSManager::Additional Method prototypes
};

/*----- PROTECTED REGION ID(DSManager::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	DSManager::Additional Classes Definitions

}	//	End of namespace

#endif   //	DSManager_H
