/*----- PROTECTED REGION ID(LMCStarterStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        LMCStarterStateMachine.cpp
//
// description : State machine file for the LMCStarter class
//
// project :     LMCManager
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LMCStarter.h>

/*----- PROTECTED REGION END -----*/	//	LMCStarter::LMCStarterStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  ON       |  
//  OFF      |  
//  FAULT    |  
//  INIT     |  
//  RUNNING  |  
//  ALARM    |  
//  UNKNOWN  |  
//  MOVING   |  


namespace LMCStarter_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_NotifdState_allowed()
 *	Description : Execution allowed for NotifdState attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_NotifdState_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for NotifdState attribute in read access.
	/*----- PROTECTED REGION ID(LMCStarter::NotifdStateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::NotifdStateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_HostState_allowed()
 *	Description : Execution allowed for HostState attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_HostState_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for HostState attribute in read access.
	/*----- PROTECTED REGION ID(LMCStarter::HostStateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::HostStateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_RunningServers_allowed()
 *	Description : Execution allowed for RunningServers attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_RunningServers_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for RunningServers attribute in read access.
	/*----- PROTECTED REGION ID(LMCStarter::RunningServersStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::RunningServersStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_StoppedServers_allowed()
 *	Description : Execution allowed for StoppedServers attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_StoppedServers_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for StoppedServers attribute in read access.
	/*----- PROTECTED REGION ID(LMCStarter::StoppedServersStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::StoppedServersStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_Servers_allowed()
 *	Description : Execution allowed for Servers attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_Servers_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Servers attribute in read access.
	/*----- PROTECTED REGION ID(LMCStarter::ServersStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::ServersStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevStart_allowed()
 *	Description : Execution allowed for DevStart attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevStart_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevStart command.
	/*----- PROTECTED REGION ID(LMCStarter::DevStartStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevStartStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevStop_allowed()
 *	Description : Execution allowed for DevStop attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevStop_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevStop command.
	/*----- PROTECTED REGION ID(LMCStarter::DevStopStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevStopStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevStartAll_allowed()
 *	Description : Execution allowed for DevStartAll attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevStartAll_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevStartAll command.
	/*----- PROTECTED REGION ID(LMCStarter::DevStartAllStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevStartAllStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevStopAll_allowed()
 *	Description : Execution allowed for DevStopAll attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevStopAll_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevStopAll command.
	/*----- PROTECTED REGION ID(LMCStarter::DevStopAllStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevStopAllStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevGetRunningServers_allowed()
 *	Description : Execution allowed for DevGetRunningServers attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevGetRunningServers_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevGetRunningServers command.
	/*----- PROTECTED REGION ID(LMCStarter::DevGetRunningServersStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevGetRunningServersStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevGetStopServers_allowed()
 *	Description : Execution allowed for DevGetStopServers attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevGetStopServers_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevGetStopServers command.
	/*----- PROTECTED REGION ID(LMCStarter::DevGetStopServersStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevGetStopServersStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_DevReadLog_allowed()
 *	Description : Execution allowed for DevReadLog attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_DevReadLog_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DevReadLog command.
	/*----- PROTECTED REGION ID(LMCStarter::DevReadLogStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::DevReadLogStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_HardKillServer_allowed()
 *	Description : Execution allowed for HardKillServer attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_HardKillServer_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for HardKillServer command.
	/*----- PROTECTED REGION ID(LMCStarter::HardKillServerStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::HardKillServerStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_NotifyDaemonState_allowed()
 *	Description : Execution allowed for NotifyDaemonState attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_NotifyDaemonState_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for NotifyDaemonState command.
	/*----- PROTECTED REGION ID(LMCStarter::NotifyDaemonStateStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::NotifyDaemonStateStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_ResetStatistics_allowed()
 *	Description : Execution allowed for ResetStatistics attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_ResetStatistics_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ResetStatistics command.
	/*----- PROTECTED REGION ID(LMCStarter::ResetStatisticsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::ResetStatisticsStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_UpdateServersInfo_allowed()
 *	Description : Execution allowed for UpdateServersInfo attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_UpdateServersInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for UpdateServersInfo command.
	/*----- PROTECTED REGION ID(LMCStarter::UpdateServersInfoStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::UpdateServersInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LMCStarter::is_dummy_dyn_cmd_allowed()
 *	Description : Execution allowed for dummy_dyn_cmd attribute
 */
//--------------------------------------------------------
bool LMCStarter::is_dummy_dyn_cmd_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for dummy_dyn_cmd command.
	/*----- PROTECTED REGION ID(LMCStarter::dummy_dyn_cmdStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LMCStarter::dummy_dyn_cmdStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LMCStarter::LMCStarterStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LMCStarter::LMCStarterStateAllowed.AdditionalMethods

}	//	End of namespace
